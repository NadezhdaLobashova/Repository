&НаКлиенте
Перем ОткрытаФормаВыбораИсполнителя;  // признак того, что исполнитель выбирается из формы, а не быстрым вводом
&НаКлиенте
Перем ОткрытаФормаВыбораПроверяющего; // признак того, что проверяющий выбирается из формы, а не быстрым вводом
&НаКлиенте
Перем КонтекстВыбора;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Для нового объекта выполняем код инициализации формы в ПриСозданииНаСервере.
	// Для существующего - в ПриЧтенииНаСервере.
    
    Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
    
    Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ОбщегоНазначенияУСП.УстановитьФорматированноеОписаниеИзХранилища(Описание, Параметры.ЗначениеКопирования.ОписаниеХранилище);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияУСП.ПоместитьФорматированноеОписаниеВХранилище(Описание, ТекущийОбъект.ОписаниеХранилище);
	ТекущийОбъект.Описание = Описание.ПолучитьТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборРолиИсполнителя") Тогда
		
		Если КонтекстВыбора = "ИсполнительПриИзменении" Тогда
			
			Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
				Объект.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
				Объект.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
				Объект.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
			КонецЕсли;
			
			УстановитьПредставлениеИсполнителей();
			
		ИначеЕсли КонтекстВыбора = "ПроверяющийПриИзменении" Тогда
			
			Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
				Объект.Проверяющий = ВыбранноеЗначение.РольИсполнителя;
				Объект.ОсновнойОбъектАдресацииПроверяющего = ВыбранноеЗначение.ОсновнойОбъектАдресации;
				Объект.ДополнительныйОбъектАдресацииПроверяющего = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
			КонецЕсли;
			
			УстановитьПредставлениеИсполнителей();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БизнесПроцессыИЗадачиКлиент.ВыбратьИсполнителя(Элемент, Объект.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	Если ОткрытаФормаВыбораИсполнителя = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсполнительСтрокой) Тогда
		Объект.Исполнитель = Неопределено;
	КонецЕсли;
	Объект.ОсновнойОбъектАдресации = Неопределено;
	Объект.ДополнительныйОбъектАдресации = Неопределено;
	
	Если ТипЗнч(Объект.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") И ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
		
		Если ИспользуетсяСОбъектамиАдресации(Объект.Исполнитель) Тогда 
			
			КонтекстВыбора = "ИсполнительПриИзменении";
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РольИсполнителя", Объект.Исполнитель);
			ПараметрыФормы.Вставить("ОсновнойОбъектАдресации", Объект.ОсновнойОбъектАдресации);
			ПараметрыФормы.Вставить("ДополнительныйОбъектАдресации", Объект.ДополнительныйОбъектАдресации );
			
			ОткрытьФорму("ОбщаяФорма.ВыборРолиИсполнителя", ПараметрыФормы, ЭтотОбъект);
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОткрытаФормаВыбораИсполнителя = ТипЗнч(ВыбранноеЗначение) = Тип("Структура");
	Если ОткрытаФормаВыбораИсполнителя Тогда
		СтандартнаяОбработка = Ложь;
		Объект.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		
		Модифицированность = Истина;
	Иначе
		Объект.Исполнитель = ВыбранноеЗначение;
	КонецЕсли;
	
	УстановитьПредставлениеИсполнителей();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Исполнитель = Неопределено;
	Объект.ОсновнойОбъектАдресации = Неопределено;
	Объект.ДополнительныйОбъектАдресации = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БизнесПроцессыИЗадачиКлиент.ВыбратьИсполнителя(Элемент, Объект.Проверяющий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийПриИзменении(Элемент)
	
	Если ОткрытаФормаВыбораПроверяющего = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПроверяющийСтрокой) Тогда
		Объект.Проверяющий = Неопределено;
	КонецЕсли;
	Объект.ОсновнойОбъектАдресацииПроверяющего = Неопределено;
	Объект.ДополнительныйОбъектАдресацииПроверяющего = Неопределено;
	
	Если ТипЗнч(Объект.Проверяющий) = Тип("СправочникСсылка.РолиИсполнителей") И ЗначениеЗаполнено(Объект.Проверяющий) Тогда
		
		Если ИспользуетсяСОбъектамиАдресации(Объект.Проверяющий) Тогда
			
			КонтекстВыбора = "ПроверяющийПриИзменении";
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РольИсполнителя", Объект.Проверяющий);
			ПараметрыФормы.Вставить("ОсновнойОбъектАдресации", Объект.ОсновнойОбъектАдресацииПроверяющего);
			ПараметрыФормы.Вставить("ДополнительныйОбъектАдресации", ОБъект.ДополнительныйОбъектАдресацииПроверяющего);
			
			ОткрытьФорму("ОбщаяФорма.ВыборРолиИсполнителя", ПараметрыФормы, ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОткрытаФормаВыбораПроверяющего = ТипЗнч(ВыбранноеЗначение) = Тип("Структура");
	Если ОткрытаФормаВыбораПроверяющего Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Проверяющий = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресацииПроверяющего = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресацииПроверяющего = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		
		Модифицированность = Истина;
	Иначе
		Объект.Проверяющий = ВыбранноеЗначение;
	КонецЕсли;
	
	УстановитьПредставлениеИсполнителей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПроверяющийОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = БизнесПроцессыИЗадачиВызовСервера.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверяющийОчистка(Элемент, СтандартнаяОбработка)
	Объект.Проверяющий = Неопределено;
	Объект.ОсновнойОбъектАдресацииПроверяющего = Неопределено;
	Объект.ДополнительныйОбъектАдресацииПроверяющего = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	ИсполнительСтрокой = РаботаСБизнесПроцессамиКлиентСервер.ПредставлениеУчастникаПроцесса(
		Объект.Исполнитель,
		Объект.ОсновнойОбъектАдресации,
		Объект.ДополнительныйОбъектАдресации);
	ПроверяющийСтрокой = РаботаСБизнесПроцессамиКлиентСервер.ПредставлениеУчастникаПроцесса(
		Объект.Проверяющий,
		Объект.ОсновнойОбъектАдресацииПроверяющего,
		Объект.ДополнительныйОбъектАдресацииПроверяющего);
		
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	ОбщегоНазначенияУСП.УстановитьФорматированноеОписаниеИзХранилища(Описание, РедактируемыйОбъект.ОписаниеХранилище);
	
КонецПроцедуры
		
&НаСервере
Процедура УстановитьПредставлениеИсполнителей()
	
	ИсполнительСтрокой = РаботаСБизнесПроцессамиКлиентСервер.ПредставлениеУчастникаПроцесса(
		Объект.Исполнитель,
		Объект.ОсновнойОбъектАдресации,
		Объект.ДополнительныйОбъектАдресации);
	ПроверяющийСтрокой = РаботаСБизнесПроцессамиКлиентСервер.ПредставлениеУчастникаПроцесса(
		Объект.Проверяющий,
		Объект.ОсновнойОбъектАдресацииПроверяющего,
		Объект.ДополнительныйОбъектАдресацииПроверяющего);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуетсяСОбъектамиАдресации(ПроверяемыйОбъект)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПроверяемыйОбъект, "ИспользуетсяСОбъектамиАдресации");
	
КонецФункции

#КонецОбласти
