
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
    
    Параметры.Свойство("КлючПараметров", КлючПараметров);
	
	ЭтотОбъект.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Для каждого СтрокаПолучателя Из Параметры.Получатели Цикл
		НоваяСтрока = Получатели.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПолучателя);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолучатели

&НаКлиенте
Процедура ПолучателиПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НоваяСтрока = Элементы.Получатели.ТекущиеДанные;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("НоваяСтрока", НоваяСтрока);
	ПараметрыОповещения.Вставить("УдалятьСтроку", Ложь);
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.Исполнитель"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.РуководительЛинииПоддержки"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ПерваяЛинияПоддержки"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ЛинияПоддержкиИсполнителя"));
	СписокВыбора.Добавить("ВыбратьЛиниюПоддержки", НСтр("ru='Выбрать линию поддержки'"));
	СписокВыбора.Добавить("ВыбратьПользователя", НСтр("ru='Выбрать пользователя'"));
	
	ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСписка",
		ЭтотОбъект, ПараметрыОповещения);
		
	ПоказатьВыборИзСписка(ОписаниеОповещенияОВыборе, СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.Получатели.ТекущийЭлемент.Имя = "ПолучателиПолучатель" И Не Копирование Тогда
		
		Отказ = Истина;
		НоваяСтрока = Получатели.Добавить();
		Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.Исполнитель"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.РуководительЛинииПоддержки"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ПерваяЛинияПоддержки"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ЛинияПоддержкиИсполнителя"));
		СписокВыбора.Добавить("ВыбратьЛиниюПоддержки", НСтр("ru='Выбрать линию поддержки'"));
		СписокВыбора.Добавить("ВыбратьПользователя", НСтр("ru='Выбрать пользователя'"));
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("НоваяСтрока", НоваяСтрока);
		ПараметрыОповещения.Вставить("УдалятьСтроку", Истина);
		
		ОписаниеОповещенияОВыборе = Новый ОписаниеОповещения("ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСписка",
			ЭтотОбъект, ПараметрыОповещения);
			
		ПоказатьВыборИзСписка(ОписаниеОповещенияОВыборе, СписокВыбора, НоваяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьИсполнителя(Команда)
	
	НоваяСтрока = Получатели.Добавить();
	НоваяСтрока.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.Исполнитель");
	НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
	Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ДобавитьРуководителяЛинии(Команда)
	
	НоваяСтрока = Получатели.Добавить();
	НоваяСтрока.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.РуководительЛинииПоддержки");
	НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
	Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЛиниюИсполнителя(Команда)
	
	НоваяСтрока = Получатели.Добавить();
	НоваяСтрока.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ЛинияПоддержкиИсполнителя");
	НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
	Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПервуюЛинию(Команда)
	
	НоваяСтрока = Получатели.Добавить();
	НоваяСтрока.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ПерваяЛинияПоддержки");
	НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
	Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЛиниюПоддержки(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьЛиниюПоддержкиЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ЛинииПоддержки.ФормаВыбора",, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПользователя(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ДобавитьПользователяЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаВыбораИсполнителя",, ЭтаФорма,,,, Оповещение);
	 
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	РеквизитыЗаполнены = ПроверитьЗаполнениеПолучателей();
	
	Если Не РеквизитыЗаполнены Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("КлючПараметров", КлючПараметров);
	
	ПараметрПолучатели = Новый Массив;
	Для каждого СтрокаПолучателя Из Получатели Цикл
		НоваяСтрока = Новый Структура("КлючОповещения, ВремяОповещения, Получатель, ТипСрываСроков");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПолучателя);
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.КлючОповещения) Тогда
			НоваяСтрока.КлючОповещения = Строка(Новый УникальныйИдентификатор);
		КонецЕсли; 
		ПараметрПолучатели.Добавить(НоваяСтрока);
	КонецЦикла; 
	
	ПараметрыЗакрытия.Вставить("Получатели", ПараметрПолучатели);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСписка(ВыбранноеЗначение, ПараметрыОповещения) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Если ПараметрыОповещения.УдалятьСтроку Тогда
			Получатели.Удалить(ПараметрыОповещения.НоваяСтрока);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение.Значение) = Тип("ПеречислениеСсылка.ВыраженияПолучателей") Тогда
		ПараметрыОповещения.НоваяСтрока.Получатель = ВыбранноеЗначение.Значение;
	ИначеЕсли ВыбранноеЗначение.Значение = "ВыбратьЛиниюПоддержки" Тогда
		Оповещение = Новый ОписаниеОповещения("ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСпискаЗавершение", ЭтотОбъект, ПараметрыОповещения);
		ОткрытьФорму("Справочник.ЛинииПоддержки.ФормаВыбора",, ЭтаФорма,,,, Оповещение);
	ИначеЕсли ВыбранноеЗначение.Значение = "ВыбратьПользователя" Тогда
		Оповещение = Новый ОписаниеОповещения("ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСпискаЗавершение", ЭтотОбъект, ПараметрыОповещения);
		ОткрытьФорму("Справочник.Пользователи.Форма.ФормаВыбораИсполнителя",, ЭтаФорма,,,, Оповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПередНачаломДобавленияПродолжениеВыбораИзСпискаЗавершение(ВыбранноеЗначение, ПараметрыОповещения) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ПараметрыОповещения.НоваяСтрока.Получатель = ВыбранноеЗначение;
	Иначе
		Если ПараметрыОповещения.УдалятьСтроку Тогда
			Получатели.Удалить(ПараметрыОповещения.НоваяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЛиниюПоддержкиЗавершение(ВыбранноеЗначение, ПараметрыОповещения) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ЛинииПоддержки") Тогда
			НоваяСтрока = Получатели.Добавить();
			НоваяСтрока.Получатель = ВыбранноеЗначение;
			НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
			Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ДобавитьПользователяЗавершение(ВыбранноеЗначение, ПараметрыОповещения) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
			НоваяСтрока = Получатели.Добавить();
			НоваяСтрока.Получатель = ВыбранноеЗначение;
			НоваяСтрока.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
			Элементы.Получатели.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеПолучателей()
	
	Отказ = Ложь;
	Ошибки = Неопределено;
	
	Для каждого СтрокаПолучателя Из Получатели Цикл
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.ТипСрываСроков) Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Получатели[%1].ТипСрываСроков", 
				СтрШаблон(НСтр("ru='В строке ""%1"" не указано событие оповещения.'"), Получатели.Индекс(СтрокаПолучателя) + 1),,
				Получатели.Индекс(СтрокаПолучателя) + 1,,Получатели.Индекс(СтрокаПолучателя));
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Возврат Не Отказ;
	
КонецФункции
 
#КонецОбласти 

