
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("КлючПараметров", ТекущийКлючПараметров);
	
	Если Объект.КлючевыеРеквизиты.Количество() = 0 Тогда
		
		КлючевыеРеквизитыПредставление = НСтр("ru='<Выберите ключевые реквизиты обращения>'"); 
	Иначе
		КлючевыеРеквизитыПредставление = "";
		
		Для каждого Строка Из Объект.КлючевыеРеквизиты Цикл
			КлючевыеРеквизитыПредставление = КлючевыеРеквизитыПредставление + ?(ПустаяСтрока(КлючевыеРеквизитыПредставление), "", "; ") + Строка.Реквизит;
		КонецЦикла;
	КонецЕсли;
		
	ЗаполнитьДеревоПараметров();
	УстановитьУсловноеОформление();
	ПересчитатьНомераСтрокНаСервере();
		
	//+ Котова А.Ю. 25.10.2018 ТЗ№ 72353 {
	СоздатьОбработчикВыбораАналитики();
	//- Котова А.Ю. 25.10.2018 ТЗ№ 72353 }
	
КонецПроцедуры

//+ Котова А.Ю. 25.10.2018 ТЗ№ 72353 {
&НаСервере
Процедура СоздатьОбработчикВыбораАналитики()
	Элементы.ПараметрыСоглашенияДеревоАналитика.УстановитьДействие("НачалоВыбора", "_ПараметрыСоглашенияДеревоАналитикаНачалоВыбора");
КонецПроцедуры

&НаКлиенте
Процедура _ПараметрыСоглашенияДеревоАналитикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	_ПараметрыСоглашенияДеревоАналитикаНачалоВыбораСервер();
КонецПроцедуры

&НаСервере
Процедура _ПараметрыСоглашенияДеревоАналитикаНачалоВыбораСервер()
	НовыйМассив = Новый Массив();
	НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ПараметрыСоглашенияДеревоАналитика.СвязиПараметровВыбора = НовыеСвязи;
КонецПроцедуры
//- Котова А.Ю. 25.10.2018 ТЗ№ 72353 }

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ПараметрыСоглашенияДерево.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ПараметрыСоглашенияДерево.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Ошибки = Неопределено;
	ЭлементыДерева = ПараметрыСоглашенияДерево.ПолучитьЭлементы();
	Для НомерЭлемента = 0 По ЭлементыДерева.Количество() - 1 Цикл
		Для ПоследующийЭлемент = НомерЭлемента + 1 По ЭлементыДерева.Количество() - 1 Цикл 
			Если ЭлементыДерева[НомерЭлемента].Аналитика = ЭлементыДерева[ПоследующийЭлемент].Аналитика Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПараметрыСоглашенияДеревоАналитика[%1]", 
					СтрШаблон(НСтр("ru='В строках ""%1"" и ""%2"" дублируется значение аналитики ""%3"".'"), 
					ЭлементыДерева[НомерЭлемента].НомерСтроки,
					ЭлементыДерева[ПоследующийЭлемент].НомерСтроки,
					ЭлементыДерева[НомерЭлемента].Аналитика),, НомерЭлемента + 1);  
			КонецЕсли;
		КонецЦикла;
		ПроверитьПодчиненныеЭлементы(ЭлементыДерева[НомерЭлемента], Ошибки);
	КонецЦикла; 
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ВыполненаЗаписьОбъекта = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодчиненныеЭлементы(ЭлементДерева, Ошибки)     
	
	ЭлементыДерева = ЭлементДерева.ПолучитьЭлементы();
	Для НомерЭлемента = 0 По ЭлементыДерева.Количество() - 1 Цикл
		Для ПоследующийЭлемент = НомерЭлемента + 1 По ЭлементыДерева.Количество() - 1 Цикл 
			Если ЭлементыДерева[НомерЭлемента].Аналитика = ЭлементыДерева[ПоследующийЭлемент].Аналитика Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ПараметрыСоглашенияДеревоАналитика[%1]", 
					СтрШаблон(НСтр("ru='В строках ""%1"" и ""%2"" дублируется значение аналитики ""%3"".'"), 
					ЭлементыДерева[НомерЭлемента].НомерСтроки,
					ЭлементыДерева[ПоследующийЭлемент].НомерСтроки,
					ЭлементыДерева[НомерЭлемента].Аналитика),, НомерЭлемента + 1);  
			КонецЕсли;
		КонецЦикла;
		ПроверитьПодчиненныеЭлементы(ЭлементыДерева[НомерЭлемента], Ошибки);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПараметрыСоглашения.Очистить();
	
	Дерево = РеквизитФормыВЗначение("ПараметрыСоглашенияДерево");
	
	Для каждого СтрокаДерева Из Дерево.Строки Цикл
		ОбработатьСтрокуДерева(СтрокаДерева, ТекущийОбъект);
	КонецЦикла;
	
	// Удалим некорректные строки перенаправлений и оповещений.
	Для Индекс = -(ТекущийОбъект.Перенаправления.Количество() - 1) По 0 Цикл
		СтрокаПеренаправления = ТекущийОбъект.Перенаправления[-Индекс];
		Если ТекущийОбъект.ПараметрыСоглашения.Найти(СтрокаПеренаправления.КлючПараметров, "КлючПараметров") = Неопределено Тогда
			ТекущийОбъект.Перенаправления.Удалить(СтрокаПеренаправления);
		КонецЕсли; 
	КонецЦикла; 
	
	Для Индекс = -(ТекущийОбъект.Оповещения.Количество() - 1) По 0 Цикл
		СтрокаОповещения = ТекущийОбъект.Оповещения[-Индекс];
		Если ТекущийОбъект.ПараметрыСоглашения.Найти(СтрокаОповещения.КлючПараметров, "КлючПараметров") = Неопределено Тогда
			ТекущийОбъект.Оповещения.Удалить(СтрокаОповещения);
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РеквизитыПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЭтотОбъект.ТолькоПросмотр Тогда 
		Возврат;
	КонецЕсли;
	
	Если ПараметрыСоглашенияДерево.ПолучитьЭлементы().Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("РеквизитыПредставлениеНажатиеВопросЗавершение", ЭтотОбъект);
		 
		ПоказатьВопрос(Оповещение, НСтр("ru='При изменении ключевых реквизитов введенные параметры будут очищены. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
	Иначе
		ВыбратьКлючевыеРеквизиты();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыСоглашенияДерево

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока;
	МаксимальныйУровень = Объект.КлючевыеРеквизиты.Количество() - 1;
	
	Если ТекущаяСтрока = Неопределено Тогда 
		Элементы.ПараметрыСоглашенияДеревоДобавитьПодчиненную.Доступность = Ложь;
		Элементы.ПараметрыСоглашенияДеревоКонтекстноеМенюДобавитьВложенный.Доступность = Ложь;
	Иначе
		ЭлементДерева = ПараметрыСоглашенияДерево.НайтиПоИдентификатору(ТекущаяСтрока);
		Если МаксимальныйУровень > ЭлементДерева.Уровень Тогда
			Элементы.ПараметрыСоглашенияДеревоДобавитьПодчиненную.Доступность = Истина;
			Элементы.ПараметрыСоглашенияДеревоКонтекстноеМенюДобавитьВложенный.Доступность = Истина;
		Иначе
			Элементы.ПараметрыСоглашенияДеревоДобавитьПодчиненную.Доступность = Ложь;
			Элементы.ПараметрыСоглашенияДеревоКонтекстноеМенюДобавитьВложенный.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПараметрыСоглашенияДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент = Элементы.ПараметрыСоглашенияДеревоПеренаправлениеСостав Тогда
		СтандартнаяОбработка = Ложь;
		Если Не ТекущиеДанные.Перенаправление Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючПараметров", ТекущиеДанные.КлючПараметров);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтотОбъект.ТолькоПросмотр);
		СтрокиПолучателя = Объект.Перенаправления.НайтиСтроки(Новый Структура("КлючПараметров", ТекущиеДанные.КлючПараметров));
		Если СтрокиПолучателя.Количество() > 0 Тогда
			ПараметрыФормы.Вставить("Получатель", СтрокиПолучателя[0].Получатель);
			ПараметрыФормы.Вставить("ТипСрываСроков", СтрокиПолучателя[0].ТипСрываСроков);
		КонецЕсли;
		Оповещение = Новый ОписаниеОповещения("ПараметрыСоглашенияДеревоВыборПеренаправленияЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.Соглашения.Форма.ПолучательПеренаправления", ПараметрыФормы, ЭтаФорма,,,, Оповещение); 
		
	ИначеЕсли Элемент.ТекущийЭлемент = Элементы.ПараметрыСоглашенияДеревоОповещениеСостав Тогда
		СтандартнаяОбработка = Ложь;
		Если Не ТекущиеДанные.Оповещение Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючПараметров",  ТекущиеДанные.КлючПараметров);
		СтрокиПолучателя = Объект.Оповещения.НайтиСтроки(Новый Структура("КлючПараметров", ТекущиеДанные.КлючПараметров));
		ПараметрПолучатели = Новый Массив;
		Для каждого СтрокаПолучателя Из СтрокиПолучателя Цикл
			НоваяСтрока = Новый Структура("КлючОповещения, ВремяОповещения, Получатель, ТипСрываСроков");
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПолучателя);
			ПараметрПолучатели.Добавить(НоваяСтрока);
		КонецЦикла; 
		ПараметрыФормы.Вставить("Получатели", ПараметрПолучатели);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтотОбъект.ТолькоПросмотр);
		Оповещение = Новый ОписаниеОповещения("ПараметрыСоглашенияДеревоВыборОповещениеЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.Соглашения.Форма.ПолучателиОповещений", ПараметрыФормы, ЭтаФорма,,,, Оповещение); 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ТекущаяСтрока = Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Если Объект.КлючевыеРеквизиты.Количество() = 0 Тогда
			Возврат
		КонецЕсли; 
		НовыйЭлемент = ПараметрыСоглашенияДерево.ПолучитьЭлементы().Добавить();
	Иначе
		ЭлементДерева = ПараметрыСоглашенияДерево.НайтиПоИдентификатору(ТекущаяСтрока);
		РодительЭлемента = ЭлементДерева.ПолучитьРодителя();
	
		Если РодительЭлемента = Неопределено Тогда 
			НовыйЭлемент = ПараметрыСоглашенияДерево.ПолучитьЭлементы().Добавить();
		Иначе
			НовыйЭлемент = РодительЭлемента.ПолучитьЭлементы().Добавить();
			НовыйЭлемент.Уровень = РодительЭлемента.Уровень + 1;
			
		КонецЕсли;
	КонецЕсли;
	
	НовыйЭлемент.СвязьПоТипу = Объект.КлючевыеРеквизиты[НовыйЭлемент.Уровень].Реквизит;
	НовыйЭлемент.НоваяСтрока = Истина;
	Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока = НовыйЭлемент.ПолучитьИдентификатор();
	Элементы.ПараметрыСоглашенияДерево.ИзменитьСтроку();
	ПересчитатьНомераСтрок();
	//+ Котова А.Ю. 25.10.2018 ТЗ№ 72353 {
	_ПараметрыСоглашенияДеревоАналитикаНачалоВыбораСервер();
	//- Котова А.Ю. 25.10.2018 ТЗ№ 72353 }
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПослеУдаления(Элемент)
	
	ПересчитатьНомераСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элементы.ПараметрыСоглашенияДерево.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ОтменаРедактирования Тогда 
		
		ТекущаяСтрока = Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока;
		ЭлементДерева = ПараметрыСоглашенияДерево.НайтиПоИдентификатору(ТекущаяСтрока);
		
		Если ТекущиеДанные.НоваяСтрока Тогда 
			
			Отказ = Истина;
			
			РодительЭлемента = ЭлементДерева.ПолучитьРодителя();
			Если РодительЭлемента = Неопределено Тогда 
				ИндексЭлемента = ПараметрыСоглашенияДерево.ПолучитьЭлементы().Индекс(ЭлементДерева);
				ПараметрыСоглашенияДерево.ПолучитьЭлементы().Удалить(ИндексЭлемента);
			Иначе
				ИндексЭлемента = РодительЭлемента.ПолучитьЭлементы().Индекс(ЭлементДерева);
				РодительЭлемента.ПолучитьЭлементы().Удалить(ИндексЭлемента);
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.ПараметрыСоглашенияДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Ложь;
	
    Если ТекущиеДанные.Уровень = Объект.КлючевыеРеквизиты.Количество() - 1 
       И Не ЗначениеЗаполнено(ТекущиеДанные.КлючПараметров) Тогда 
		ТекущиеДанные.КлючПараметров = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоОповещениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыСоглашенияДерево.ТекущиеДанные;
	СтрокиОповещений = Объект.Оповещения.НайтиСтроки(Новый Структура("КлючПараметров", ТекущиеДанные.КлючПараметров));
	
	Если ТекущиеДанные.Оповещение И СтрокиОповещений.Количество() = 0 Тогда
		НовоеОповещение = Объект.Оповещения.Добавить();
		НовоеОповещение.КлючПараметров = ТекущиеДанные.КлючПараметров;
		НовоеОповещение.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.Исполнитель");
		НовоеОповещение.ВремяОповещения = 0;
		Если ТекущиеДанные.ВремяРеакции > 0 Тогда
			НовоеОповещение.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаРеакции");
		Иначе
			НовоеОповещение.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
		КонецЕсли;
		СтрокиОповещений.Добавить(НовоеОповещение);
		ТекущиеДанные.ОповещениеСостав = ПредставлениеПолучателейОповещений(СтрокиОповещений);
	ИначеЕсли Не ТекущиеДанные.Оповещение И СтрокиОповещений.Количество() > 0 Тогда
		Для каждого Строка Из СтрокиОповещений Цикл
			Объект.Оповещения.Удалить(Строка);
		КонецЦикла; 
		ТекущиеДанные.ОповещениеСостав = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоПеренаправлениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПараметрыСоглашенияДерево.ТекущиеДанные;
	СтрокиПеренаправлений = Объект.Перенаправления.НайтиСтроки(Новый Структура("КлючПараметров", ТекущиеДанные.КлючПараметров));
	
	Если ТекущиеДанные.Перенаправление И СтрокиПеренаправлений.Количество() = 0 Тогда
		НовоеПеренаправление = Объект.Перенаправления.Добавить();
		НовоеПеренаправление.КлючПараметров = ТекущиеДанные.КлючПараметров;
		НовоеПеренаправление.Получатель = ПредопределенноеЗначение("Перечисление.ВыраженияПолучателей.ПерваяЛинияПоддержки");
		НовоеПеренаправление.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки");
		СтрокиПеренаправлений.Добавить(НовоеПеренаправление);
		ТекущиеДанные.ПеренаправлениеСостав = ПредставлениеПолучателейПеренаправлений(СтрокиПеренаправлений);
	ИначеЕсли Не ТекущиеДанные.Перенаправление И СтрокиПеренаправлений.Количество() > 0 Тогда
		Для каждого Строка Из СтрокиПеренаправлений Цикл
			Объект.Перенаправления.Удалить(Строка);
		КонецЦикла; 
		ТекущиеДанные.ПеренаправлениеСостав = "";
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВложенный(Команда)
	
	ТекущаяСтрока = Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока;
	МаксимальныйУровень = Объект.КлючевыеРеквизиты.Количество() - 1;
	
	Если ТекущаяСтрока = Неопределено Тогда 
		Если МаксимальныйУровень < 0 Тогда
			Возврат
		КонецЕсли; 
		НовыйЭлемент = ПараметрыСоглашенияДерево.ПолучитьЭлементы().Добавить();
	Иначе
		ЭлементДерева = ПараметрыСоглашенияДерево.НайтиПоИдентификатору(ТекущаяСтрока);
		Если МаксимальныйУровень > ЭлементДерева.Уровень Тогда
			НовыйЭлемент = ЭлементДерева.ПолучитьЭлементы().Добавить();
			НовыйЭлемент.Уровень = ЭлементДерева.Уровень + 1;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	НовыйЭлемент.СвязьПоТипу = Объект.КлючевыеРеквизиты[НовыйЭлемент.Уровень].Реквизит;
	ПересчитатьНомераСтрок();
	Элементы.ПараметрыСоглашенияДерево.ТекущаяСтрока = НовыйЭлемент.ПолучитьИдентификатор();
	Элементы.ПараметрыСоглашенияДерево.ИзменитьСтроку();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПоляДляОграничения = Новый Массив;
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоПеренаправление.Имя);
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоПеренаправлениеСостав.Имя);
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоОповещение.Имя);
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоОповещениеСостав.Имя);
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоВремяРеакции.Имя);
	ПоляДляОграничения.Добавить(Элементы.ПараметрыСоглашенияДеревоВремяОбработки.Имя);
	
	Для каждого ИмяПоля  Из ПоляДляОграничения Цикл
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоля);
	КонецЦикла; 
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПараметрыСоглашенияДерево.Уровень");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Объект.КлючевыеРеквизиты.Количество() - 1;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	Если ЗначениеЗаполнено(ТекущийКлючПараметров) Тогда
		Элемент = УсловноеОформление.Элементы.Добавить();
		Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПараметрыСоглашенияДерево.КлючПараметров");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = ТекущийКлючПараметров;
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ПараметрыСоглашенияДерево");
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ФонУправляющегоПоля);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПараметров()
	
	Если Объект.КлючевыеРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийЭлементДерева = ПараметрыСоглашенияДерево;
	
	Для каждого СтрокаПараметров Из Объект.ПараметрыСоглашения Цикл
		НовыйЭлемент = ОпределитьЭлементДерева(СтрокаПараметров);
		НовыйЭлемент.КлючПараметров = СтрокаПараметров.КлючПараметров;
		НовыйЭлемент.ВремяРеакции = СтрокаПараметров.ВремяРеакции;
		НовыйЭлемент.ВремяОбработки = СтрокаПараметров.ВремяОбработки;
		Перенаправления = Объект.Перенаправления.НайтиСтроки(Новый Структура("КлючПараметров", СтрокаПараметров.КлючПараметров));
		Если Перенаправления.Количество() > 0 Тогда
			НовыйЭлемент.Перенаправление = Истина;
			НовыйЭлемент.ПеренаправлениеСостав = ПредставлениеПолучателейПеренаправлений(Перенаправления);
		КонецЕсли; 
		Оповещения = Объект.Оповещения.НайтиСтроки(Новый Структура("КлючПараметров", СтрокаПараметров.КлючПараметров));
		Если Оповещения.Количество() > 0 Тогда
			НовыйЭлемент.Оповещение = Истина;
			НовыйЭлемент.ОповещениеСостав = ПредставлениеПолучателейОповещений(Оповещения);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьЭлементДерева(СтрокаПараметров)
	
	ТекущийУровень = ПараметрыСоглашенияДерево;
	
	Для каждого СтрокаРеквизитов Из Объект.КлючевыеРеквизиты Цикл
		Если ЗначениеЗаполнено(СтрокаРеквизитов.Реквизит.ИмяПредопределенныхДанных) Тогда
			ЗначениеПараметра = СтрокаПараметров[СтрокаРеквизитов.Реквизит.ИмяПредопределенныхДанных];
		Иначе
			ЗначениеПараметра = Неопределено;
		КонецЕсли;
		ИскомыйЭлемент = Неопределено;
		ЭлементыУровня = ТекущийУровень.ПолучитьЭлементы();
		Для каждого ЭлементУровня Из ЭлементыУровня Цикл
			Если ЭлементУровня.Аналитика = ЗначениеПараметра Тогда
				ИскомыйЭлемент = ЭлементУровня;
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Если ИскомыйЭлемент = Неопределено Тогда
			ИскомыйЭлемент = ЭлементыУровня.Добавить();
			ИскомыйЭлемент.Аналитика = ЗначениеПараметра;
			ИскомыйЭлемент.СвязьПоТипу = СтрокаРеквизитов.Реквизит;
			ИскомыйЭлемент.Уровень = СтрокаРеквизитов.НомерСтроки - 1;
		КонецЕсли;
			ТекущийУровень = ИскомыйЭлемент;
	КонецЦикла;
	
	Возврат ИскомыйЭлемент;
	
КонецФункции

&НаСервере
Процедура ОбработатьСтрокуДерева(СтрокаДерева, ТекущийОбъект)
	
	Если СтрокаДерева.Строки.Количество() > 0 Тогда
		Для каждого Строка Из СтрокаДерева.Строки Цикл
			ОбработатьСтрокуДерева(Строка, ТекущийОбъект);
		КонецЦикла; 
		
	Иначе
		СтрокаПараметров = ТекущийОбъект.ПараметрыСоглашения.Добавить();
		ЗаполнитьАналитикуВСтрокеПараметров(СтрокаПараметров, СтрокаДерева, Истина);
		СтрокаДерева = СтрокаДерева.Родитель;
		Пока СтрокаДерева <> Неопределено Цикл
			ЗаполнитьАналитикуВСтрокеПараметров(СтрокаПараметров, СтрокаДерева, Ложь);
			СтрокаДерева = СтрокаДерева.Родитель;
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАналитикуВСтрокеПараметров(СтрокаПараметров, СтрокаДерева, ЗаполнитьРесурсы)
	
	СтрокаПараметров[СтрокаДерева.СвязьПоТипу.ИмяПредопределенныхДанных] = СтрокаДерева.Аналитика;
	
	Если ЗаполнитьРесурсы Тогда
		СтрокаПараметров.ВремяОбработки = СтрокаДерева.ВремяОбработки;
		СтрокаПараметров.ВремяРеакции = СтрокаДерева.ВремяРеакции;
		СтрокаПараметров.КлючПараметров = СтрокаДерева.КлючПараметров;
	КонецЕсли
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Функция ПредставлениеПолучателейОповещений(СтрокиПолучателей)
	
	Получатели = Новый Массив;
	
	Для каждого Элемент Из СтрокиПолучателей Цикл
		
		Если Элемент.ВремяОповещения = 0 Тогда
			ВремяОповещения = НСтр("ru='в момент'")
		ИначеЕсли Элемент.ВремяОповещения > 0 Тогда
			ВремяОповещения = СтрШаблон(НСтр("ru='через %1 после'"), СокрЛП(ОбщегоНазначенияУСПКлиентСервер.ДниЧасыМинуты(Элемент.ВремяОповещения*3600)));
		Иначе
			ВремяОповещения = СтрШаблон(НСтр("ru='за %1 до'"), СокрЛП(ОбщегоНазначенияУСПКлиентСервер.ДниЧасыМинуты(-Элемент.ВремяОповещения*3600)));
		КонецЕсли;
		
		Если Элемент.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаОбработки") Тогда
			МоментОповещения = НСтр("ru='срыва срока обработки'");
		Иначе
			МоментОповещения = НСтр("ru='срыва срока реакции'");
		КонецЕсли;
		
		Получатели.Добавить(СтрШаблон(НСтр("ru='%1 %2 %3'"), Строка(Элемент.Получатель), ВремяОповещения, МоментОповещения));
		
	КонецЦикла; 
	
	Возврат СтрСоединить(Получатели,"; ");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеПолучателейПеренаправлений(СтрокиПолучателей)
	
	Получатели = Новый Массив;
	Для каждого Элемент Из СтрокиПолучателей Цикл
		Получатели.Добавить(СтрШаблон(НСтр("ru='%1, при %2'"),
			Строка(Элемент.Получатель), 
			?(Элемент.ТипСрываСроков = ПредопределенноеЗначение("Перечисление.ТипыСрывовСроков.СрывСрокаРеакции"), 
				НСтр("ru='срыве срока реакции'"), НСтр("ru='срыве срока обработки'"))));
	КонецЦикла; 
	
	Возврат СтрСоединить(Получатели,"; ");
	
КонецФункции

&НаКлиенте
Функция СтрокаПараметровПоКлючу(СтрокиДерева, КлючПараметров)
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.КлючПараметров = КлючПараметров Тогда
			Возврат СтрокаДерева;
		КонецЕсли
	КонецЦикла;
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		НайденнаяСтрока = СтрокаПараметровПоКлючу(СтрокаДерева.ПолучитьЭлементы(), КлючПараметров);
		Если НайденнаяСтрока <> Неопределено Тогда
			Возврат НайденнаяСтрока;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Неопределено;
	
КонецФункции
 
&НаКлиенте
Процедура ПараметрыСоглашенияДеревоВыборПеренаправленияЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиПолучателя = Объект.Перенаправления.НайтиСтроки(Новый Структура("КлючПараметров", Результат.КлючПараметров));
	Если СтрокиПолучателя.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(СтрокиПолучателя[0], Результат);
	КонецЕсли;
	СтрокаДерева = СтрокаПараметровПоКлючу(ПараметрыСоглашенияДерево.ПолучитьЭлементы(), Результат.КлючПараметров);
	Если СтрокаДерева <> Неопределено Тогда
		СтрокаДерева.ПеренаправлениеСостав =  ПредставлениеПолучателейПеренаправлений(СтрокиПолучателя);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСоглашенияДеревоВыборОповещениеЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиПолучателей = Объект.Оповещения.НайтиСтроки(Новый Структура("КлючПараметров", Результат.КлючПараметров));
	Для каждого Строка Из СтрокиПолучателей Цикл
		Объект.Оповещения.Удалить(Строка);
	КонецЦикла;
	
	НовыеСтрокиПолучателей = Новый Массив;
	Для каждого СтрокаПолучателя Из Результат.Получатели Цикл
		НоваяСтрока = Объект.Оповещения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПолучателя);
		НоваяСтрока.КлючПараметров = Результат.КлючПараметров;
		НовыеСтрокиПолучателей.Добавить(НоваяСтрока);
	КонецЦикла;
	
	СтрокаДерева = СтрокаПараметровПоКлючу(ПараметрыСоглашенияДерево.ПолучитьЭлементы(), Результат.КлючПараметров);
	Если СтрокаДерева <> Неопределено Тогда
		СтрокаДерева.ОповещениеСостав = ПредставлениеПолучателейОповещений(НовыеСтрокиПолучателей);
	КонецЕсли; 
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПредставлениеНажатиеВопросЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыбратьКлючевыеРеквизиты();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКлючевыеРеквизиты()
	
	КлючевыеРеквизиты = Новый СписокЗначений;
	Для каждого Элемент Из Объект.КлючевыеРеквизиты Цикл
		КлючевыеРеквизиты.Добавить(Элемент.Реквизит);
	КонецЦикла; 
	ПараметрыФормы = Новый Структура("КлючевыеРеквизиты", КлючевыеРеквизиты);
	Оповещение = Новый ОписаниеОповещения("ВыбратьКлючевыеРеквизитыЗавершение", ЭтотОбъект);
	 
	ОткрытьФорму("Справочник.Соглашения.Форма.ВыборКлючевыхРеквизитов", ПараметрыФормы, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКлючевыеРеквизитыЗавершение(КлючевыеРеквизиты, ПараметрыОповещения) Экспорт
	
	Если КлючевыеРеквизиты <> Неопределено Тогда
		
		Объект.КлючевыеРеквизиты.Очистить();
		Объект.Перенаправления.Очистить();
		Объект.Оповещения.Очистить();
		Объект.ПараметрыСоглашения.Очистить();
		
		ПараметрыСоглашенияДерево.ПолучитьЭлементы().Очистить();
		
		Для каждого КлючевойРеквизит Из КлючевыеРеквизиты Цикл
			НоваяСтрока = Объект.КлючевыеРеквизиты.Добавить();
			НоваяСтрока.Реквизит = КлючевойРеквизит;
		КонецЦикла; 
		
		Модифицированность = Истина;
		
		Если Объект.КлючевыеРеквизиты.Количество() = 0 Тогда
			КлючевыеРеквизитыПредставление = НСтр("ru='<Выберите ключевые реквизиты обращения>'"); 
		Иначе
			КлючевыеРеквизитыПредставление = "";
			Для каждого Строка Из Объект.КлючевыеРеквизиты Цикл
				КлючевыеРеквизитыПредставление = КлючевыеРеквизитыПредставление + ?(ПустаяСтрока(КлючевыеРеквизитыПредставление), "", "; ") + Строка.Реквизит;
			КонецЦикла;
		КонецЕсли;
		
		УстановитьУсловноеОформление();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьНомераСтрок()
	
	НомерСтроки = 1;
	ЭлементыДерева = ПараметрыСоглашенияДерево.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭлементДерева.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		ПересчитатьНомераСтрокПотомков(ЭлементДерева)
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьНомераСтрокПотомков(Родитель)
	
	НомерСтроки = 1;
	ЭлементыДерева = Родитель.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭлементДерева.НомерСтроки = Родитель.НомерСтроки + "." + НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		ПересчитатьНомераСтрокПотомков(ЭлементДерева);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНомераСтрокНаСервере()
	
	НомерСтроки = 1;
	ЭлементыДерева = ПараметрыСоглашенияДерево.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭлементДерева.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		ПересчитатьНомераСтрокПотомковНаСервере(ЭлементДерева)
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьНомераСтрокПотомковНаСервере(Родитель)
	
	НомерСтроки = 1;
	ЭлементыДерева = Родитель.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭлементДерева.НомерСтроки = Родитель.НомерСтроки + "." + НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		ПересчитатьНомераСтрокПотомковНаСервере(ЭлементДерева);
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

