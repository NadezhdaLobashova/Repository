
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если РольДоступна("ЗаполнениеВПроектахИД") И Не РольДоступна("ПолныеПрава") И Не РольДоступна("Экономист") Тогда
		Для Каждого Эл Из Элементы Цикл
			Попытка
				Эл.ТолькоПросмотр = Истина;
			Исключение
				Попытка
					Эл.Видимость = Ложь;
				Исключение
				КонецПопытки;
			КонецПопытки;	
		КонецЦикла;
		Элементы.RedmineProjectId.ТолькоПросмотр = Ложь;
		Элементы.ФормаЗаписатьИЗакрыть.Видимость = Истина;
	КонецЕсли;	
	Если Не РольДоступна("ЗаполнениеВПроектахИД") И Не РольДоступна("ПолныеПрава") И Не РольДоступна("Экономист") Тогда
		Элементы.ФормаЗаписатьИЗакрыть.Видимость = Ложь;
		Элементы.ФормаЗаписать.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКнопка(Команда)
	ЗаписатьНаСервере();
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьНаСервере();
	ОбновитьОтображениеДанных();
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	Записать();
	
	//Лобашова 30.04.2019 85255 +
	//Эсли это копия информационной базы, то не выполняем обмен
	ПараметрыБлокировки=Константы.ПараметрыБлокировкиРаботыСВнешнимиРесурсами.получить().получить();
	Если НЕ(ПараметрыБлокировки.Свойство("РаботаСВнешнимиРесурсамиЗаблокирована")
		И ПараметрыБлокировки.Свойство("РазделениеВключено")
		И ПараметрыБлокировки.РаботаСВнешнимиРесурсамиЗаблокирована 
		И Не ПараметрыБлокировки.РазделениеВключено)  Тогда
	//Лобашова 30.04.2019 85255 -
	
			СозданиеПодразделенийИзУРВ = Константы.СозданиеПодразделенийИзУРВ.Получить();
			Если СозданиеПодразделенийИзУРВ И Не Объект.НеСинхронизировать И (РольДоступна("ПолныеПрава") Или РольДоступна("Экономист")) Тогда
				//Создание подразделения в ЗУП
				Попытка
					ВыполнитьWSCreateDepartmentZUPСервер(Объект.Наименование, Объект.Ссылка.УникальныйИдентификатор(), ?(ЗначениеЗаполнено(Объект.Родитель), Объект.Родитель.УникальныйИдентификатор(), ""), Объект.GUIDВНСИ);
				Исключение
					Сообщить(ОписаниеОшибки());	
				КонецПопытки;
				
				//Создание подразделения в ОБД
				Если ЗначениеЗаполнено(Объект.GUIDЗУП) Тогда
					Попытка
						ВыполнитьWSCreateDepartmentOBDСервер(Объект.Наименование, Объект.Ссылка.УникальныйИдентификатор(), ?(ЗначениеЗаполнено(Объект.Родитель), Объект.Родитель.УникальныйИдентификатор(), ""), Объект.GUIDВНСИ);
					Исключение
						Сообщить(ОписаниеОшибки());	
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
	 //Лобашова 30.04.2019 85255 +
	КонецЕсли;
	//Лобашова 30.04.2019 85255 -
КонецПроцедуры

&НаСервере
Процедура ВыполнитьWSCreateDepartmentZUPСервер(NameDepartment, GUIDURV, ProcreatorGUID, GUIDNSI)
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыИнтеграции = УРВСервер.ПолучитьНастройкиИнтеграции(Перечисления.Интеграции.СозданиеПодразделенияВЗУП);
	
	Если ПараметрыИнтеграции = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось получить параметры подключения к сервису ЗУП";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ИмяПользователя 	= ПараметрыИнтеграции.Пользователь; 
	Пароль 				= ПараметрыИнтеграции.Пароль; 
	АдресПодключения 	= ПараметрыИнтеграции.АдресПодключения;
	//Порт                = ПараметрыИнтеграции.Порт;
	ИмяБазы             = ПараметрыИнтеграции.ИмяБазы;
	Сервер              = ПараметрыИнтеграции.Сервер;
	
	Попытка
		тСоединение = Новый HTTPСоединение(Сервер,, ИмяПользователя, Пароль);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось подключиться к сервису ЗУП";
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("NameDepartment", NameDepartment);
	СтруктураЗапроса.Вставить("GUIDURV", 		Строка(GUIDURV));
	СтруктураЗапроса.Вставить("GUIDZUP", 		Строка(Объект.GUIDЗУП));
	СтруктураЗапроса.Вставить("ProcreatorGUID", Строка(ProcreatorGUID));
	СтруктураЗапроса.Вставить("GUIDNSI", 		Строка(GUIDNSI));
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);
	ЗапросJSON = ЗаписьJSON.Закрыть();
	
	Текст0		= "ЗУП: Создание подразделения.";
	Успешно		= Ложь;
	тHTTPЗапрос	= Новый HTTPЗапрос(ИмяБазы + АдресПодключения);
	Попытка
		Если ТипЗнч(ЗапросJSON) = Тип("ДвоичныеДанные") Тогда
			тHTTPЗапрос.УстановитьТелоИзДвоичныхДанных(ЗапросJSON);
		Иначе
			тHTTPЗапрос.УстановитьТелоИзСтроки(ЗапросJSON);
		КонецЕсли;
		тHTTPОтвет = тСоединение.ОтправитьДляОбработки(тHTTPЗапрос);			
		тОтвет = тHTTPОтвет.ПолучитьТелоКакСтроку();
		
		Если ТипЗнч(тHTTPОтвет) = Тип("HTTPОтвет") Тогда
			ОтветJSON = тHTTPОтвет.ПолучитьТелоКакСтроку();
			
			Если тHTTPОтвет.КодСостояния = 200 Тогда
				Успешно		= Истина;
				ЧтениеJSON = Новый ЧтениеJSON;
				ЧтениеJSON.УстановитьСтроку(ОтветJSON);
				СтруктураОтвета 		= ПрочитатьJSON(ЧтениеJSON);
				Объект.GUIDЗУП = СтруктураОтвета.GUID_ZGU;
				Записать();
				
				Сообщить("Данные в ЗУП успешно обновлены!", СтатусСообщения.Важное);
			ИначеЕсли тHTTPОтвет.КодСостояния = 204 Тогда
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateDepartmentZUP", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Не удалось выполнить операцию!");	
				Сообщить(Текст0 + "Не удалось выполнить операцию!", СтатусСообщения.Важное);
			ИначеЕсли тHTTPОтвет.КодСостояния = 205 Тогда
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateDepartmentZUP", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния);	
				Сообщить(Текст0 + "Ошибка: " + ОтветJSON, СтатусСообщения.ОченьВажное);
			Иначе
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateDepartmentZUP", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния);	
				Сообщить(Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния, СтатусСообщения.ОченьВажное);
			КонецЕсли;
		Иначе
			ЗаписьЖурналаРегистрации("ВыполнитьWSCreateDepartmentZUP", УровеньЖурналаРегистрации.Ошибка, ,,"Ошибка: " + Текст0 + "Не удалось подключиться к ИС ЗУП.");	
			Сообщить(Текст0 + "Не удалось подключиться к ИС ЗУП.", СтатусСообщения.ОченьВажное);
		КонецЕсли;
		
	Исключение
		Ошибка	= ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ВыполнитьWSCreateDepartmentZUP", УровеньЖурналаРегистрации.Ошибка, ,,"Ошибка: " + Ошибка);	
		Сообщить("Ошибка: " + Ошибка + " (в ВыполнитьWSCreateDepartmentZUP)");
	КонецПопытки;
	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьWSCreateDepartmentOBDСервер(NameDepartment, GUIDURV, ProcreatorGUID, GUIDNSI)
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыИнтеграции = УРВСервер.ПолучитьНастройкиИнтеграции(Перечисления.Интеграции.СозданиеПодразделенияВОБД);
	
	Если ПараметрыИнтеграции = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось получить параметры подключения к сервису ОБД";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ИмяПользователя 	= ПараметрыИнтеграции.Пользователь; 
	Пароль 				= ПараметрыИнтеграции.Пароль; 
	АдресПодключения 	= ПараметрыИнтеграции.АдресПодключения;
	//Порт                = ПараметрыИнтеграции.Порт;
	ИмяБазы             = ПараметрыИнтеграции.ИмяБазы;
	Сервер              = ПараметрыИнтеграции.Сервер;
	
	Попытка
		тСоединение = Новый HTTPСоединение(Сервер,, ИмяПользователя, Пароль);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось подключиться к сервису ОБД";
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("NameDepartment", NameDepartment);
	СтруктураЗапроса.Вставить("GUIDURV"	, 		Строка(GUIDURV));
	СтруктураЗапроса.Вставить("GUIDZUP", 		Строка(Объект.GUIDЗУП));
	СтруктураЗапроса.Вставить("ProcreatorGUID", Строка(ProcreatorGUID));
	СтруктураЗапроса.Вставить("GUIDNSI", 		Строка(GUIDNSI));
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);
	ЗапросJSON = ЗаписьJSON.Закрыть();
	
	Текст0		= "ОБД: Создание подразделения.";
	Успешно		= Ложь;
	тHTTPЗапрос	= Новый HTTPЗапрос(ИмяБазы + АдресПодключения);
	Попытка
		Если ТипЗнч(ЗапросJSON) = Тип("ДвоичныеДанные") Тогда
			тHTTPЗапрос.УстановитьТелоИзДвоичныхДанных(ЗапросJSON);
		Иначе
			тHTTPЗапрос.УстановитьТелоИзСтроки(ЗапросJSON);
		КонецЕсли;
		тHTTPОтвет = тСоединение.ОтправитьДляОбработки(тHTTPЗапрос);			
		тОтвет = тHTTPОтвет.ПолучитьТелоКакСтроку();
		
		Если ТипЗнч(тHTTPОтвет) = Тип("HTTPОтвет") Тогда
			ОтветJSON = тHTTPОтвет.ПолучитьТелоКакСтроку();
			
			Если тHTTPОтвет.КодСостояния = 200 Тогда
				Успешно		= Истина;
				ЧтениеJSON = Новый ЧтениеJSON;
				ЧтениеJSON.УстановитьСтроку(ОтветJSON);
				СтруктураОтвета 		= ПрочитатьJSON(ЧтениеJSON);
				Объект.GUIDОБД = СтруктураОтвета.GUID_OBD;
				Записать();
				
				Сообщить("Данные в ОБД успешно обновлены!", СтатусСообщения.Важное);
			ИначеЕсли тHTTPОтвет.КодСостояния = 204 Тогда
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateProjectOBD", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Не удалось выполнить операцию!");	
				Сообщить(Текст0 + "Не удалось выполнить операцию!", СтатусСообщения.Важное);
			ИначеЕсли тHTTPОтвет.КодСостояния = 205 Тогда
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateProjectOBD", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния);	
				Сообщить(Текст0 + "Ошибка: " + ОтветJSON, СтатусСообщения.ОченьВажное);
			Иначе
				ЗаписьЖурналаРегистрации("ВыполнитьWSCreateProjectOBD", УровеньЖурналаРегистрации.Ошибка, ,,Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния);	
				Сообщить(Текст0 + "Ошибка: " + ОтветJSON + ". Код состояния: " + тHTTPОтвет.КодСостояния, СтатусСообщения.ОченьВажное);
			КонецЕсли;
		Иначе
			ЗаписьЖурналаРегистрации("ВыполнитьWSCreateProjectOBD", УровеньЖурналаРегистрации.Ошибка, ,,"Ошибка: " + Текст0 + "Не удалось подключиться к ИС ЗУП.");	
			Сообщить(Текст0 + "Не удалось подключиться к ИС ОБД.", СтатусСообщения.ОченьВажное);
		КонецЕсли;
		
	Исключение
		Ошибка	= ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ВыполнитьWSCreateProjectOBD", УровеньЖурналаРегистрации.Ошибка, ,,"Ошибка: " + Ошибка);	
		Сообщить("Ошибка: " + Ошибка + " (в ВыполнитьWSCreateProjectOBD)");
	КонецПопытки;
	
	
КонецПроцедуры

