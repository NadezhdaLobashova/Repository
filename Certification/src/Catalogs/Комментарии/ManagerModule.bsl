#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Процедура ПеренестиКомментарииАктивныхОбращений() Экспорт
    
    
    ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбращениеКомментарии.Ссылка КАК Обращение,
	|	ОбращениеКомментарии.НомерСтроки КАК НомерСтроки,
	|	ОбращениеКомментарии.НомерСтроки - 1 КАК Индекс,
	|	ОбращениеКомментарии.Дата КАК Дата,
	|	ОбращениеКомментарии.Автор КАК Автор,
	|	ОбращениеКомментарии.Комментарий КАК Комментарий,
	|	ОбращениеКомментарии.ВнутренняяПереписка КАК ВнутренняяПереписка,
	|	ОбращениеКомментарии.ЛинияПоддержки КАК ЛинияПоддержки
	|ИЗ
	|	Документ.Обращение.Комментарии КАК ОбращениеКомментарии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Обращение КАК Обращение
	|		ПО ОбращениеКомментарии.Ссылка = Обращение.Ссылка
	|ГДЕ
	|	Обращение.Состояние <> &СостояниеЗакрыто
	|	И НЕ ОбращениеКомментарии.ВыполненПеренос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обращение,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Обращение";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СостояниеЗакрыто", Перечисления.СостоянияОбращений.Закрыто);
    Результат = Запрос.Выполнить();
    ВыборкаОбращения = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
	Пока ВыборкаОбращения.Следующий() Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Блокировка = Новый БлокировкаДанных;
		Элемент = Блокировка.Добавить("Документ.Обращение");
		Элемент.УстановитьЗначение("Ссылка", ВыборкаОбращения.Обращение);
		Элемент.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ОбращениеОбъект = ВыборкаОбращения.Обращение.ПолучитьОбъект();
		Выборка = ВыборкаОбращения.Выбрать();
		Пока Выборка.Следующий() Цикл
			НовыйКомментарий = Справочники.Комментарии.СоздатьЭлемент();
			НовыйКомментарий.ВладелецКомментария = Выборка.Обращение;
			ЗаполнитьЗначенияСвойств(НовыйКомментарий, Выборка);
			Попытка
				НовыйКомментарий.Записать();
				ОбращениеОбъект.Комментарии[Выборка.Индекс].ВыполненПеренос = Истина;
			Исключение
				ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации("Обновление информационной базы", УровеньЖурналаРегистрации.Ошибка, ОбращениеОбъект.Метаданные(), ВыборкаОбращения.Обращение, ОписаниеОшибки);
				ОтменитьТранзакцию();
				Прервать;
			КонецПопытки;
			
		КонецЦикла;
		Попытка
			ОбращениеОбъект.Записать();
		Исключение
			ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Обновление информационной базы", УровеньЖурналаРегистрации.Ошибка, ОбращениеОбъект.Метаданные(), ВыборкаОбращения.Обращение, ОписаниеОшибки);
			ОтменитьТранзакцию();
			Прервать;
		КонецПопытки;
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиКомментарииВФоне(Параметры = Неопределено) Экспорт
        
    ТекстЗапроса = 
    	"ВЫБРАТЬ ПЕРВЫЕ 1000
    	|	Т.Ссылка КАК Ссылка,
    	|	Т.НомерСтроки КАК НомерСтроки,
    	|	Т.НомерСтроки - 1 КАК Индекс,
    	|	Т.Дата КАК Дата,
    	|	Т.Автор КАК Автор,
    	|	Т.Комментарий КАК Комментарий,
    	|	Т.ВнутренняяПереписка КАК ВнутренняяПереписка,
    	|	Т.ЛинияПоддержки КАК ЛинияПоддержки
    	|ИЗ
    	|	(ВЫБРАТЬ
    	|		ОбращениеКомментарии.Ссылка КАК Ссылка,
    	|		ОбращениеКомментарии.НомерСтроки КАК НомерСтроки,
    	|		ОбращениеКомментарии.Дата КАК Дата,
    	|		ОбращениеКомментарии.Автор КАК Автор,
    	|		ОбращениеКомментарии.Комментарий КАК Комментарий,
    	|		ОбращениеКомментарии.ВнутренняяПереписка КАК ВнутренняяПереписка,
    	|		ОбращениеКомментарии.ЛинияПоддержки КАК ЛинияПоддержки
    	|	ИЗ
    	|		Документ.Обращение.Комментарии КАК ОбращениеКомментарии
    	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Обращение КАК Обращение
    	|			ПО ОбращениеКомментарии.Ссылка = Обращение.Ссылка
    	|	ГДЕ
    	|		Обращение.Состояние = &СостояниеЗакрыто
    	|		И НЕ ОбращениеКомментарии.ВыполненПеренос
    	|	
    	|	ОБЪЕДИНИТЬ ВСЕ
    	|	
    	|	ВЫБРАТЬ
    	|		КонсультацииКомментарии.Ссылка,
    	|		КонсультацииКомментарии.НомерСтроки,
    	|		КонсультацииКомментарии.Дата,
    	|		КонсультацииКомментарии.Автор,
    	|		КонсультацииКомментарии.Комментарий,
    	|		КонсультацииКомментарии.ВнутренняяПереписка,
    	|		КонсультацииКомментарии.ЛинияПоддержки
    	|	ИЗ
    	|		Справочник.Консультации.Комментарии КАК КонсультацииКомментарии
    	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Консультации КАК Консультации
    	|			ПО КонсультацииКомментарии.Ссылка = Консультации.Ссылка
    	|	ГДЕ
    	|		НЕ КонсультацииКомментарии.ВыполненПеренос
    	|	
    	|	ОБЪЕДИНИТЬ ВСЕ
    	|	
    	|	ВЫБРАТЬ
    	|		ОшибкиКомментарии.Ссылка,
    	|		ОшибкиКомментарии.НомерСтроки,
    	|		ОшибкиКомментарии.Дата,
    	|		ОшибкиКомментарии.Автор,
    	|		ОшибкиКомментарии.Комментарий,
    	|		ОшибкиКомментарии.ВнутренняяПереписка,
    	|		ОшибкиКомментарии.ЛинияПоддержки
    	|	ИЗ
    	|		Справочник.Ошибки.Комментарии КАК ОшибкиКомментарии
    	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Ошибки КАК Ошибки
    	|			ПО ОшибкиКомментарии.Ссылка = Ошибки.Ссылка
    	|	ГДЕ
    	|		НЕ ОшибкиКомментарии.ВыполненПеренос
    	|	
    	|	ОБЪЕДИНИТЬ ВСЕ
    	|	
    	|	ВЫБРАТЬ
    	|		ПожеланияКомментарии.Ссылка,
    	|		ПожеланияКомментарии.НомерСтроки,
    	|		ПожеланияКомментарии.Дата,
    	|		ПожеланияКомментарии.Автор,
    	|		ПожеланияКомментарии.Комментарий,
    	|		ПожеланияКомментарии.ВнутренняяПереписка,
    	|		ПожеланияКомментарии.ЛинияПоддержки
    	|	ИЗ
    	|		Справочник.Пожелания.Комментарии КАК ПожеланияКомментарии
    	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пожелания КАК Пожелания
    	|			ПО ПожеланияКомментарии.Ссылка = Пожелания.Ссылка
    	|	ГДЕ
    	|		НЕ ПожеланияКомментарии.ВыполненПеренос) КАК Т
    	|
    	|УПОРЯДОЧИТЬ ПО
    	|	Ссылка,
    	|	НомерСтроки
    	|ИТОГИ ПО
    	|	Ссылка";
    Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СостояниеЗакрыто", Перечисления.СостоянияОбращений.Закрыто);
	Результат = Запрос.Выполнить();
	Пока НЕ Результат.Пустой() Цикл
		Выборка = Результат.Выбрать();
		ВыборкаОбращения = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОбращения.Следующий() Цикл
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			Блокировка = Новый БлокировкаДанных;
			Элемент = Блокировка.Добавить(ВыборкаОбращения.Ссылка.Метаданные().ПолноеИмя());
			Элемент.УстановитьЗначение("Ссылка", ВыборкаОбращения.Ссылка);
			Элемент.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ОбращениеОбъект = ВыборкаОбращения.Ссылка.ПолучитьОбъект();
			Выборка = ВыборкаОбращения.Выбрать();
			Пока Выборка.Следующий() Цикл
				НовыйКомментарий = Справочники.Комментарии.СоздатьЭлемент();
				НовыйКомментарий.ВладелецКомментария = Выборка.Ссылка;
				ЗаполнитьЗначенияСвойств(НовыйКомментарий, Выборка);
				Попытка
					НовыйКомментарий.Записать();
					ОбращениеОбъект.Комментарии[Выборка.Индекс].ВыполненПеренос = Истина;
				Исключение
					ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					ЗаписьЖурналаРегистрации("Обновление информационной базы", УровеньЖурналаРегистрации.Ошибка, ОбращениеОбъект.Метаданные(), ВыборкаОбращения.Ссылка, ОписаниеОшибки);
					ОтменитьТранзакцию();
					Прервать;
				КонецПопытки;
				
			КонецЦикла;
			Попытка
				ОбращениеОбъект.Записать();
			Исключение
				ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации("Обновление информационной базы", УровеньЖурналаРегистрации.Ошибка, ОбращениеОбъект.Метаданные(), ВыборкаОбращения.Обращение, ОписаниеОшибки);
				ОтменитьТранзакцию();
				Прервать;
			КонецПопытки;
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		Результат = Запрос.Выполнить();
	КонецЦикла;
КонецПроцедуры
 
#КонецОбласти 	
	
#КонецЕсли