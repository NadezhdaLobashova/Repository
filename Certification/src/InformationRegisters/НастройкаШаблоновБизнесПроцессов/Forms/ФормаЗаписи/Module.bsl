
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СписокТипов = ПолучитьТипыОбъекта();
	
	ЗаполнитьСписокСобытий();
	
	Элементы.ВидИнтерактивногоСобытия.Доступность = Запись.ИнтерактивныйЗапуск;
	
	Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Консультации"), "Консультации");
	Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Ошибки"), "Ошибки");
	Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Пожелания"), "Пожелания");
	Элементы.ИдентификаторОбъекта.СписокВыбора.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.Обращение"), "Обращения");
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ШаблонБизнесПроцессаПриОткрытии = ТекущийОбъект.ШаблонБизнесПроцесса;
	ИдентификаторОбъектаПриОткрытии = ТекущийОбъект.ИдентификаторОбъекта;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		ТекстПредупреждения = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОписаниеСобытийАвтозапуска = ОписаниеСобытийАвтозапуска();
	
КонецПроцедуры
 
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//  выполним запись в регистр ПодпискиАвтоматическогоЗапускаБизнесПроцессов.
	Для Каждого Строка Из ВсеВидыБизнесСобытий Цикл
		
		Если ЗначениеЗаполнено(ИдентификаторОбъектаПриОткрытии) И ЗначениеЗаполнено(ШаблонБизнесПроцессаПриОткрытии) Тогда
			БизнесСобытия.УдалитьПравилоАвтоматическогоЗапускаБизнесПроцессов(
				Строка.Значение, ШаблонБизнесПроцессаПриОткрытии, ИдентификаторОбъектаПриОткрытии);
		КонецЕсли;
		
		БизнесСобытия.УдалитьПравилоАвтоматическогоЗапускаБизнесПроцессов(
			Строка.Значение, Запись.ШаблонБизнесПроцесса, Запись.ИдентификаторОбъекта);
			
		Отбор = Новый Структура("Значение", Строка.Значение);
		МассивСтрок = ВидыБизнесСобытий.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 1 Тогда
			
			Если МассивСтрок[0].Пометка Тогда
				БизнесСобытия.СохранитьПравилоАвтоматическогоЗапускаБизнесПроцессов(
					Строка.Значение, Запись.ШаблонБизнесПроцесса, Запись.ИдентификаторОбъекта, МассивСтрок[0].Условие);
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
		
	ЗаполнитьСписокСобытий();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Запись.ИнтерактивныйЗапуск И Не ЗначениеЗаполнено(Запись.ВидИнтерактивногоСобытия) Тогда	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Действие""!'"),,
			"Запись.ВидИнтерактивногоСобытия",, 
			Отказ);
		
	КонецЕсли;
	
	ЕстьПомеченные = Ложь;
	Для Каждого Строка Из ВидыБизнесСобытий Цикл
		
		Если Строка.Пометка Тогда
			ЕстьПомеченные = Истина;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;
	
	Если ЕстьПомеченные И ЗначениеЗаполнено(Запись.ШаблонБизнесПроцесса) Тогда
		
		ШаблонОбъект = Запись.ШаблонБизнесПроцесса.ПолучитьОбъект();
		
		МассивПолей = ШаблонОбъект.ПолучитьСписокНезаполненныхПолейНеобходимыхДляСтарта();
		Если МассивПолей.Количество() <> 0 Тогда
			
			СтрокаПолей = БизнесСобытия.МассивПолейВСтроку(МассивПолей);
		
			Текст = СтрШаблон(НСтр("ru = 'Шаблон нельзя использовать для автоматического запуска процессов, т.к. не заполнены поля: %1'"), СтрокаПолей);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,,
				"Запись.ШаблонБизнесПроцесса",, 
				Отказ);
		
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Запись.ШаблонБизнесПроцесса) И ЗначениеЗаполнено(Запись.ИдентификаторОбъекта) Тогда
		Если Не ПроверитьСовместимостьШаблонаИВидаДокумента(
				Запись.ШаблонБизнесПроцесса, 
				Запись.ИдентификаторОбъекта) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Указанный предмет не может быть использован в указанном процессе.'"),,
				"Запись.ИдентификаторОбъекта",, 
				Отказ);
		КонецЕсли;			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонБизнесПроцессаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Запись.ШаблонБизнесПроцесса) Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ШаблонБизнесПроцессаНачалоВыбораПродолжение",
		ЭтотОбъект,
		Новый Структура("Элемент", Элемент));
		
	Если СписокТипов.Количество() > 1 Тогда
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокТипов, Элемент);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, СписокТипов[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонБизнесПроцессаНачалоВыбораПродолжение(ВыбранныйТип, Параметры) Экспорт 

	Если ВыбранныйТип <> Неопределено Тогда 
		ОткрытьФорму("Справочник." + ВыбранныйТип.Значение + ".ФормаВыбора", , Параметры.Элемент);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОбъектаПриИзменении(Элемент)
	
	ЗаполнитьСписокСобытий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредлагатьЗапускПользователюПриИзменении(Элемент)
	
	Элементы.ВидИнтерактивногоСобытия.Доступность = Запись.ИнтерактивныйЗапуск;
	Элементы.ВидИнтерактивногоСобытия.АвтоОтметкаНезаполненного = Запись.ИнтерактивныйЗапуск;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВидыБизнесСобытий

&НаКлиенте
Процедура ВидыБизнесСобытийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не Элементы.ВидыБизнесСобытий.ТекущиеДанные.Пометка Тогда
		Возврат;
	КонецЕсли;	
	
	Если Поле = Элементы.ВидыБизнесСобытийУсловие Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыборУсловияМаршрутизации", ЭтотОбъект);
			
		ОткрытьФорму("Справочник.УсловияМаршрутизации.ФормаВыбора", , Элементы.ВидыБизнесСобытийУсловие,,,,
			ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
		Возврат;
		
	КонецЕсли;	
	
	Если Не Элементы.ВидыБизнесСобытий.ТекущиеДанные.Загружено Тогда
		Возврат;
	КонецЕсли;	
	
	// открыть запись регистра сведений ПравилаАвтоматическогоЗапускаБизнесПроцессов
	ВидСобытия = Элементы.ВидыБизнесСобытий.ТекущиеДанные.Значение;
	ШаблонБизнесПроцесса = Запись.ШаблонБизнесПроцесса;
	
	Ключ = ПолучитьКлюч(ВидСобытия, ШаблонБизнесПроцесса, Запись.ИдентификаторОбъекта);
	ОписаниеВыбора = Новый ОписаниеОповещения("ВидыБизнесСобытийВыборПродолжение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Ключ", Ключ);
	ОткрытьФорму("РегистрСведений.ПравилаАвтоматическогоЗапускаБизнесПроцессов.ФормаЗаписи",
		ПараметрыФормы,
		ЭтаФорма,,,,
		ОписаниеВыбора,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборУсловияМаршрутизации(Результат, Параметры) Экспорт  
	
	Если ЗначениеЗаполнено(Результат) Тогда 
		Элементы.ВидыБизнесСобытий.ТекущиеДанные.Условие = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыБизнесСобытийВыборПродолжение(Результат, Параметры) Экспорт  
	
	ЗаполнитьСписокСобытий();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьТипыОбъекта()
	
	СписокТипов = Новый СписокЗначений;
	ТипыОбъекта = Метаданные.РегистрыСведений.НастройкаШаблоновБизнесПроцессов.Измерения.ШаблонБизнесПроцесса.Тип.Типы();
	
	Для Каждого ТипОбъекта Из ТипыОбъекта Цикл
		ОбъектСсылка = Новый(ТипОбъекта);
  		СписокТипов.Добавить(ОбъектСсылка.Метаданные().Имя, ОбъектСсылка.Метаданные().Синоним);
	КонецЦикла;	
	СписокТипов.СортироватьПоПредставлению();
	
	Возврат СписокТипов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокСобытий()
	
	// заполним интерактивные события
	Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Очистить();
	
	Если Запись.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Консультации") Тогда
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ЗакрытиеКарточкиТолькоЧтоСозданнойКонсультации);
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ИнтерактивноеСнятиеАктуальностиКонсультации);
		
	ИначеЕсли Запись.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Ошибки") Тогда
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ЗакрытиеКарточкиТолькоЧтоСозданнойОшибки);
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ИнтерактивноеПринятиеОшибкиКИсполнению);
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ИнтерактивноеЗакрытиеОшибки);
		
	ИначеЕсли Запись.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Пожелания") Тогда
		Элементы.ВидИнтерактивногоСобытия.СписокВыбора.Добавить(Перечисления.ВидыИнтерактивныхДействий.ЗакрытиеКарточкиТолькоЧтоСозданногоПожелания);
		
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПравилаАвтоматическогоЗапускаБизнесПроцессов.ШаблонБизнесПроцесса КАК ШаблонБизнесПроцесса,
		|	ПравилаАвтоматическогоЗапускаБизнесПроцессов.ВидБизнесСобытия КАК ВидБизнесСобытия,
		|	ПравилаАвтоматическогоЗапускаБизнесПроцессов.Условие
		|ИЗ
		|	РегистрСведений.ПравилаАвтоматическогоЗапускаБизнесПроцессов КАК ПравилаАвтоматическогоЗапускаБизнесПроцессов
		|ГДЕ
		|	ПравилаАвтоматическогоЗапускаБизнесПроцессов.ШаблонБизнесПроцесса = &ШаблонБизнесПроцесса
		|	И ПравилаАвтоматическогоЗапускаБизнесПроцессов.КлассИсточникаБизнесСобытия = &ИдентификаторОбъекта";
				
	Запрос.УстановитьПараметр("ШаблонБизнесПроцесса", Запись.ШаблонБизнесПроцесса);
	Запрос.УстановитьПараметр("ИдентификаторОбъекта", Запись.ИдентификаторОбъекта);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Выборка = Справочники.ВидыБизнесСобытий.Выбрать();
	
	ВидыБизнесСобытий.Очистить();
	ВсеВидыБизнесСобытий.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.ЭтоГруппа Тогда
			
			ВсеВидыБизнесСобытий.Добавить(Выборка.Ссылка);
			
			ВидСобытияИмя = Выборка.Ссылка.Наименование;
			НужноДобавить = Ложь;
			
			Если Запись.ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Консультации")) Тогда
				
				Если Выборка.Ссылка = Справочники.ВидыБизнесСобытий.СозданиеКонсультации Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ИзменениеКонсультации Тогда
					НужноДобавить = Истина;
				КонецЕсли;
				
			ИначеЕсли Запись.ИдентификаторОбъекта =  ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Ошибки")) Тогда
				
				Если Выборка.Ссылка = Справочники.ВидыБизнесСобытий.СозданиеОшибки Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ИзменениеОшибки Тогда
					НужноДобавить = Истина;
				КонецЕсли;
				
			ИначеЕсли Запись.ИдентификаторОбъекта =  ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Пожелания")) Тогда
				
				Если Выборка.Ссылка = Справочники.ВидыБизнесСобытий.СозданиеПожелания Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ИзменениеПожелания Тогда
					НужноДобавить = Истина;
				КонецЕсли;
				
			ИначеЕсли Запись.ИдентификаторОбъекта =  ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.Обращение")) Тогда
				
				Если Выборка.Ссылка = Справочники.ВидыБизнесСобытий.СозданиеОбращения Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ИзменениеОбращения Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ПолученоПисьмоПоОбращению Тогда
					НужноДобавить = Истина;
				ИначеЕсли Выборка.Ссылка = Справочники.ВидыБизнесСобытий.ПолученКомментарийОтПользователя Тогда
					НужноДобавить = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			Если НужноДобавить Тогда
				Строка = ВидыБизнесСобытий.Добавить();
				Строка.Значение = Выборка.Ссылка;
				Строка.Представление = Выборка.Наименование;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;		
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		
		Отбор = Новый Структура("Значение", СтрокаТаблицы.ВидБизнесСобытия);
		МассивСтрок = ВидыБизнесСобытий.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 1 Тогда
			МассивСтрок[0].Пометка = Истина;
			МассивСтрок[0].Загружено = Истина;
			МассивСтрок[0].Условие = СтрокаТаблицы.Условие;
		КонецЕсли;
	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроцессМожетСоздаватьсяПоПредмету(МетаданныеПроцесса, МетаданныеОбъекта)
	
	Для Каждого ЭлементМетаданных Из МетаданныеПроцесса.ВводитсяНаОсновании Цикл
		Если ЭлементМетаданных = МетаданныеОбъекта Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
	
КонецФункции

// Сохраняет в регистре сведений ПравилаАвтоматическогоЗапускаБизнесПроцессов подписку.
//
&НаСервере
Функция ПолучитьКлюч(ВидСобытия, ШаблонБизнесПроцесса, Подписчик)
	
	ПараметрыКлюча = Новый Структура("ВидБизнесСобытия, ШаблонБизнесПроцесса, КлассИсточникаБизнесСобытия", 
		ВидСобытия, ШаблонБизнесПроцесса, Подписчик);
	Ключ = РегистрыСведений.ПравилаАвтоматическогоЗапускаБизнесПроцессов.СоздатьКлючЗаписи(ПараметрыКлюча);
	Возврат Ключ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьСовместимостьШаблонаИВидаДокумента(Шаблон, ИдентификаторОбъекта)
	
	МенеджерШаблонаПроцесса = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Шаблон);
	ИмяПроцесса = МенеджерШаблонаПроцесса.ИмяПроцесса(Шаблон);
	МетаданныеПроцесса = Метаданные.БизнесПроцессы.Найти(ИмяПроцесса);
	
	Если ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Консультации")) Тогда
		Возврат ПроцессМожетСоздаватьсяПоПредмету(МетаданныеПроцесса, Метаданные.Справочники.Консультации);
		
	ИначеЕсли ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Ошибки")) Тогда
		Возврат ПроцессМожетСоздаватьсяПоПредмету(МетаданныеПроцесса, Метаданные.Справочники.Ошибки);
		
	ИначеЕсли ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("СправочникСсылка.Пожелания")) Тогда
		Возврат ПроцессМожетСоздаватьсяПоПредмету(МетаданныеПроцесса, Метаданные.Справочники.Пожелания);
		
	ИначеЕсли ИдентификаторОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.Обращение")) Тогда
		Возврат ПроцессМожетСоздаватьсяПоПредмету(МетаданныеПроцесса, Метаданные.Документы.Обращение);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ОписаниеСобытийАвтозапуска()
	
	ОписаниеСобытий = "";
	Если Запись.ИнтерактивныйЗапуск Тогда
		ОписаниеСобытий = СтрШаблон(НСтр("ru='Интерактивный запуск по событию ""%1""'"), Запись.ВидИнтерактивногоСобытия);
		Если ЗначениеЗаполнено(Запись.Условие) Тогда
			ОписаниеСобытий = ОписаниеСобытий + СтрШаблон(" %1 ""%2""", НСтр("ru='при условии'"), Запись.Условие);
		КонецЕсли; 
	КонецЕсли;
	
	Для каждого Строка Из ВидыБизнесСобытий Цикл
		Если Строка.Пометка Тогда
			ОписаниеСобытий = ?(ПустаяСтрока(ОписаниеСобытий),"","; ")
				+ СтрШаблон(НСтр("ru='Запуск по событию ""%1""'"), Строка.Представление);
			Если ЗначениеЗаполнено(Строка.Условие) Тогда
				ОписаниеСобытий = ОписаниеСобытий + СтрШаблон(" %1 ""%2""", НСтр("ru='при условии'"), Строка.Условие);
			КонецЕсли; 
			
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ОписаниеСобытий;
	
КонецФункции

#КонецОбласти
