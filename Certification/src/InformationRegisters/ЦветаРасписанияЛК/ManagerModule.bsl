
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
//--------------------------------------------------------------------------------------------------
#Область Задача61699

&НаСервере
Функция ПолучитьТабДокЛегенды() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Спр.Ссылка КАК Работа,
	|	Спр.Наименование
//	|	Спр.КраткоеНазвание
	|ИЗ
	|	Справочник.Работы КАК Спр
	|ГДЕ
	|	НЕ Спр.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спр.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.Ссылка КАК ИтоговыйСтатус,
	|	ЕСТЬNULL(РС.ЦветТекста, """") КАК ЦветТекста,
	|	ЕСТЬNULL(РС.ЦветФона, """") КАК ЦветФона
	|ИЗ
	|	Перечисление.ИтоговыеСтатусыРасписанияЛК КАК Статусы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦветаРасписанияЛК КАК РС
	|		ПО (РС.ИтоговыйСтатус = Статусы.Ссылка)
	|			И (РС.Работа = ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РС.ИтоговыйСтатус,
	|	РС.Работа,
	|	РС.ЦветТекста,
	|	РС.ЦветФона
	|ИЗ
	|	РегистрСведений.ЦветаРасписанияЛК КАК РС
	|ГДЕ
	|	РС.Работа <> ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка)";
	Результат = Запрос.ВыполнитьПакет();
	ТЗ_Работы	= Результат[Результат.Количество() - 3].Выгрузить();
	ТЗ_Статусы	= Результат[Результат.Количество() - 2].Выгрузить();
	ТЗ_Данные	= Результат[Результат.Количество() - 1].Выгрузить();
	
	
	ТабДок = Новый ТабличныйДокумент;
	
	
	НомерСтроки		= 1;
	НомерКолонки	= 1;
	Для каждого строкаТЗ_Работы Из ТЗ_Работы Цикл
		НомерКолонки 	= НомерКолонки + 1;
		Область = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
		Область.Текст				= "" + строкаТЗ_Работы.Наименование ;//+ ?(ЗначениеЗаполнено(строкаТЗ_Работы.КраткоеНазвание), " (" + строкаТЗ_Работы.КраткоеНазвание + ")", "");
		Область.РазмещениеТекста	= ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	КонецЦикла;
	
	СоответствияЦветов = ПолучитьСоответствияЦветов();
	
	СтруктураПоиска	= Новый Структура("ИтоговыйСтатус, Работа");
	
	Для каждого строкаТЗ_Статусы Из ТЗ_Статусы Цикл
		ИтоговыйСтатус	= строкаТЗ_Статусы.ИтоговыйСтатус;
		//
		СтруктураПоиска.ИтоговыйСтатус	= ИтоговыйСтатус;
		//
		НомерСтроки		= НомерСтроки + 1; 
		НомерКолонки	= 1;
		//
		Область = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
		Область.Текст				= "" + ИтоговыйСтатус;
		Область.ЦветТекста			= СоответствияЦветов.Получить(строкаТЗ_Статусы.ЦветТекста);
		Область.ЦветФона			= СоответствияЦветов.Получить(строкаТЗ_Статусы.ЦветФона);
		Область.РазмещениеТекста	= ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		Область.Расшифровка			= Новый Структура("ИтоговыйСтатус, Работа", ИтоговыйСтатус, Справочники.Работы.ПустаяСсылка());
		//
		Для каждого строкаТЗ_Работы Из ТЗ_Работы Цикл
			Работа	= строкаТЗ_Работы.Работа;
			//
			строкаТЗ_Данные = Неопределено;
			Если строкаТЗ_Данные = Неопределено Тогда
				СтруктураПоиска.Работа = Работа;
				строкиТЗ_Данные = ТЗ_Данные.НайтиСтроки(СтруктураПоиска);
				Если строкиТЗ_Данные.Количество() > 0 Тогда
					строкаТЗ_Данные	= строкиТЗ_Данные[0];
				КонецЕсли;
			КонецЕсли;
			
			//
			НомерКолонки 	= НомерКолонки + 1;
			Область = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Область.Текст		= "образец";
			Область.ЦветТекста	= СоответствияЦветов.Получить(?(строкаТЗ_Данные = Неопределено, строкаТЗ_Статусы.ЦветТекста, строкаТЗ_Данные.ЦветТекста));
			Область.ЦветФона	= СоответствияЦветов.Получить(?(строкаТЗ_Данные = Неопределено, строкаТЗ_Статусы.ЦветФона, строкаТЗ_Данные.ЦветФона));
			Область.Расшифровка	= Новый Структура("ИтоговыйСтатус, Работа", ИтоговыйСтатус, Работа);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДок; 
	
КонецФункции

&НаСервере
Функция ПолучитьСоответствияЦветов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РС.ЦветТекста КАК ЦветСтрокой
	|ИЗ
	|	РегистрСведений.ЦветаРасписанияЛК КАК РС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РС.ЦветФона
	|ИЗ
	|	РегистрСведений.ЦветаРасписанияЛК КАК РС";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Свернуть("ЦветСтрокой", "");
	
	Результат = Новый Соответствие;
	Результат.Вставить("", РегистрыСведений.ЦветаРасписанияЛК.ПолучитьЦветИзСтроки("")); // Отсутствующий  
	Для каждого строкаТЗ Из ТЗ Цикл
		Результат.Вставить(строкаТЗ.ЦветСтрокой, РегистрыСведений.ЦветаРасписанияЛК.ПолучитьЦветИзСтроки(строкаТЗ.ЦветСтрокой)); 
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ()

#КонецОбласти

// БоР :  21.01.2017 1:26:21
Функция ПолучитьЦветИзСтроки(СтрокаЦвета) Экспорт
	Цвет = Новый Цвет;
	Если ЗначениеЗаполнено(СтрокаЦвета) Тогда
		Попытка
			Цвет = БоР_ОбщийМодуль.ЗначениеИзXML(СтрокаЦвета);
		Исключение
		КонецПопытки;
	КонецЕсли;
	ВозВрат Цвет;
КонецФункции
	
Процедура НастроитьУсловноеОформление(УсловноеОформление, ИмяЭлемента, ПутьКРеквизиту) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РС.ИтоговыйСтатус.Порядок КАК Порядок,
	|	РС.ИтоговыйСтатус,
	|	РС.ЦветФона
	|ИЗ
	|	РегистрСведений.ЦветаРасписанияЛК КАК РС
	|ГДЕ
	|	РС.Работа = ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка)";

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЦветФона = ПолучитьЦветИзСтроки(ВыборкаДетальныеЗаписи.ЦветФона);
		НаименованиеСтатуса = "" + ВыборкаДетальныеЗаписи.ИтоговыйСтатус + "(" + ВыборкаДетальныеЗаписи.Порядок + ")";
		//
		НастроитьУсловноеОформлениеСтатуса(УсловноеОформление, ИмяЭлемента, ПутьКРеквизиту, ВыборкаДетальныеЗаписи.ИтоговыйСтатус, "Итоговый статус " + НаименованиеСтатуса, ЦветФона);
	КонецЦикла;
КонецПроцедуры

Процедура НастроитьУсловноеОформлениеСтатуса(УсловноеОформление, ИмяЭлемента, ПутьКРеквизиту, ИтоговыйСтатус, Представление, ЦветФона)
	ЭлементУО = Бор_ОбщийМодульКлиентСервер.ДобавитьЭлементУсловногоОформления(УсловноеОформление, Представление, Истина, Истина, Ложь);
	Бор_ОбщийМодульКлиентСервер.ДобавитьОформлениеВЭлементУО(ЭлементУО, "ЦветФона", ЦветФона);
	Бор_ОбщийМодульКлиентСервер.ДобавитьПолеВЭлементУО(ЭлементУО, ИмяЭлемента);
	БоР_ОбщийМодульКлиентСервер.ДобавитьЭлементОтбора(ЭлементУО.Отбор, ПутьКРеквизиту, ВидСравненияКомпоновкиДанных.Равно, ИтоговыйСтатус, Ложь, Истина);
КонецПроцедуры

//// БоР :  21.01.2017 1:26:21
//Функция ПолучитьЦвет(ИтоговыйСтатус) Экспорт
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	РС_Оформление.ЦветФона
//	|ИЗ
//	|	РегистрСведений.ЦветаРасписанияЛК КАК РС_Оформление
//	|ГДЕ
//	|	РС_Оформление.ИтоговыйСтатус = &ИтоговыйСтатус";
//	
//	Запрос.УстановитьПараметр("ИтоговыйСтатус", ИтоговыйСтатус);
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
//		ВозВрат ПолучитьЦветИзСтроки(ВыборкаДетальныеЗаписи.ЦветФона);
//	Иначе
//		ВозВрат Новый Цвет;
//	КонецЕсли;
//	
//КонецФункции


#КонецЕсли
