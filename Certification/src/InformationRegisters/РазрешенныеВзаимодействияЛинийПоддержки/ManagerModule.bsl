#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
    
// Возвращает массив разрешенных линий поддержки
//
// Параметры:
//  ЛинияПоддержки           - СправочникСсылка.ЛинииПоддержки - линия поддержки,
//                             для которой нужно получить разрешенные линии поддержки.
//  ОбслуживающаяОрганизация - СправочникСсылка.ОбслуживающиеОрганизации - обслуживающая организация, 
//                             для которой нужно получить разрешенные линии поддержки.
// 
// Возвращаемое значение:
//  Массив - массив разрешенных линий поддержки.
//
Функция РазрешенныеЛинииПоддержки(ЛинияПоддержки = Неопределено, ОбслуживающаяОрганизация = Неопределено) Экспорт
    
    ЛинииПоддержки = Новый Массив;
    
    // Если линия поддержки не задана, используем линию поддержки текущего пользователя.
    Если ЛинияПоддержки = Неопределено Тогда
        ЛинияПоддержки = РегистрыСведений.СведенияОПользователях.СведенияОПользователе().ЛинияПоддержки;
    КонецЕсли;
    ПерваяЛинияПоддержки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки, "ПерваяЛинияПоддержки");
    
    Запрос = Новый Запрос;
    Если ЛинияПоддержки = ПерваяЛинияПоддержки
            Или РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
        Запрос.Текст = 
        	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
            |   ЛинииПоддержки.Ссылка
            |ИЗ
            |   Справочник.ЛинииПоддержки КАК ЛинииПоддержки
            |ГДЕ
            |   НЕ ЛинииПоддержки.ПометкаУдаления
            |   И ВЫБОР
            |           КОГДА Не &ОтбиратьОрганизации
            |               ТОГДА ИСТИНА
            |           ИНАЧЕ ЛинииПоддержки.Владелец = &ОбслуживающаяОрганизация
            |       КОНЕЦ";
        Запрос.УстановитьПараметр("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
        Запрос.УстановитьПараметр("ОтбиратьОрганизации", ОбслуживающаяОрганизация <> Неопределено);	
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        
        Результат = Запрос.Выполнить();
        Если Не Результат.Пустой() Тогда
            Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
        КонецЕсли; 
        
    Иначе
       Запрос.Текст = 
    		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
            |   РазрешенныеВзаимодействияЛинийПоддержки.РазрешеннаяЛинияПоддержки КАК ЛинияПоддержки
            |ПОМЕСТИТЬ РазрешенныеЛинии
            |ИЗ
            |   РегистрСведений.РазрешенныеВзаимодействияЛинийПоддержки КАК РазрешенныеВзаимодействияЛинийПоддержки
            |ГДЕ
            |   РазрешенныеВзаимодействияЛинийПоддержки.ЛинияПоддержки = &ЛинияПоддержки
            |   И ВЫБОР
            |           КОГДА Не &ОтбиратьОрганизации
            |               ТОГДА ИСТИНА
            |           ИНАЧЕ РазрешенныеВзаимодействияЛинийПоддержки.РазрешеннаяЛинияПоддержки.Владелец = &ОбслуживающаяОрганизация
            |       КОНЕЦ
            |;
            |
            |////////////////////////////////////////////////////////////////////////////////
            |ВЫБРАТЬ РАЗРЕШЕННЫЕ
            |   ЛинииПоддержки.Ссылка КАК ЛинияПоддержки
            |ИЗ
            |   Справочник.ЛинииПоддержки КАК ЛинииПоддержки
            |ГДЕ
            |   ЛинииПоддержки.Ссылка В ИЕРАРХИИ
            |           (ВЫБРАТЬ
            |               РазрешенныеЛинии.ЛинияПоддержки
            |           ИЗ
            |               РазрешенныеЛинии КАК РазрешенныеЛинии)
            |   И НЕ ЛинииПоддержки.ПометкаУдаления";
    	
    	Запрос.УстановитьПараметр("ЛинияПоддержки", ЛинияПоддержки);
    	Запрос.УстановитьПараметр("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
        Запрос.УстановитьПараметр("ОтбиратьОрганизации", ОбслуживающаяОрганизация <> Неопределено);	
        
        Результат = Запрос.Выполнить();
        Если Не Результат.Пустой() Тогда
            ЛинииПоддержки = Результат.Выгрузить().ВыгрузитьКолонку("ЛинияПоддержки");
        КонецЕсли; 
        
    КонецЕсли;
    
    // Линия поддержки разрешена сама для себя.
    Если ОбслуживающаяОрганизация = Неопределено И ЛинииПоддержки.Найти(ЛинияПоддержки) = Неопределено Тогда
        ЛинииПоддержки.Добавить(ЛинияПоддержки);
    КонецЕсли;
    
    // Всегда доступна первая линия провайдера.
    ЛинииПоддержки.Добавить(ПерваяЛинияПоддержки);
    
    Возврат ЛинииПоддержки;
    
КонецФункции

// Возвращает массив разрешенных обслуживающих организаций
//
// Параметры:
//  ОбслуживающаяОрганизация - СправочникСсылка.ОбслуживающиеОрганизации - обслуживающая организация, 
//                             для которой нужно получить разрешенные обслуживающие организации.
// 
// Возвращаемое значение:
//  Массив - массив разрешенных обслуживающих организаций.
//
Функция РазрешенныеОбслуживающиеОрганизации(ОбслуживающаяОрганизация = Неопределено) Экспорт
    
    // Если обслуживающая организация не задана, используем обслуживающую организацию текущего пользователя.
    Если ОбслуживающаяОрганизация = Неопределено Тогда
        ОбслуживающаяОрганизация = РегистрыСведений.СведенияОПользователях.СведенияОПользователе().ОбслуживающаяОрганизация;
    КонецЕсли;
    
    Если ОбслуживающаяОрганизация = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
        Запрос = Новый Запрос;
        Запрос.Текст = 
        	"ВЫБРАТЬ
            |	ОбслуживающиеОрганизации.Ссылка
            |ИЗ
            |	Справочник.ОбслуживающиеОрганизации КАК ОбслуживающиеОрганизации
            |ГДЕ
            |	НЕ ОбслуживающиеОрганизации.ПометкаУдаления";
        Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
        
    Иначе
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |   Разрешения.РазрешеннаяЛинияПоддержки.Владелец
        |ИЗ
        |   РегистрСведений.РазрешенныеВзаимодействияЛинийПоддержки КАК Разрешения
        |ГДЕ
        |   Разрешения.ЛинияПоддержки.Владелец = &ОбслуживающаяОрганизация";
        
        Запрос.УстановитьПараметр("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
        
        Результат = Запрос.Выполнить().Выгрузить();
        Если Результат.Количество() = 0 Тогда
            ДоступныеОрганизации = Новый Массив;
        Иначе
            ДоступныеОрганизации = Результат.ВыгрузитьКолонку("Владелец"); 
        КонецЕсли;
        ДоступныеОрганизации.Добавить(Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки);
        ДоступныеОрганизации.Добавить(ОбслуживающаяОрганизация);
        
        Возврат ДоступныеОрганизации;
        
    КонецЕсли;
    
КонецФункции

// Возвращает признак разрешения взаимодействия
//
// Параметры:
//  Объект  - СправочникСсылка.ЛинииПоддержки, СправочникСсылка.ОбслуживающиеОрганизации - объект проверки. 
//  Субъект - СправочникСсылка.ЛинииПоддержки, СправочникСсылка.ОбслуживающиеОрганизации - субъект проверки.
// 
// Возвращаемое значение:
//  Булево - признак разрешения взаимодействия.
//
 Функция РазрешеноВзаимодействие(Объект, Субъект) Экспорт
    //+ Котова А.Ю. 06.06.2019 ТЗ№ 76300 { 
	//Если у пользователя линия поддержки не заполнена, то ему разрешено перенаправление обращения на любую линию.
	      Если НЕ ЗначениеЗаполнено(Объект) Тогда
		  
		  	Возврат Истина;
		  
		  КонецЕсли; 
	//- Котова А.Ю. 06.06.2019 ТЗ№ 76300 }

    // Администратор может взаимодействовать с кем захочет.
    Если РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
        Возврат Истина;
    КонецЕсли;
    
    // Объект может взаимодействовать сам с собой
    Если Объект = Субъект Тогда
    	Возврат Истина;
    КонецЕсли; 
    
    // Если объект, это основная служба поддержки, она может взаимодействовать с кем захочет.
    Если Объект = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда 
        Возврат Истина;
    КонецЕсли;
    
    // Если субъект, это основная служба поддержки или ее первая линия, с ней может взаимодействовать кто угодно.
    Если Субъект = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки 
     Или Субъект = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки.ПерваяЛинияПоддержки Тогда
    	Возврат Истина;
    КонецЕсли; 

    Если ТипЗнч(Объект) <> ТипЗнч(Субъект) Тогда
        ВызватьИсключение СтрШаблон(НСтр("ru='Можно проверить разрешение только для объектов одинаковых типов. Тип объекта ""%1"", тип субъекта ""%2"".'"), ТипЗнч(Объект), ТипЗнч(Субъект)); 
    КонецЕсли;
    
    Если ТипЗнч(Объект) = Тип("СправочникСсылка.ОбслуживающиеОрганизации") Тогда
        Запрос = Новый Запрос;
        Запрос.Текст = 
        	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
            |   Истина
            |ИЗ
            |   РегистрСведений.РазрешенныеВзаимодействияЛинийПоддержки КАК Разрешения
            |ГДЕ
            |   Разрешения.ЛинияПоддержки.Владелец = &Объект
            |   И Разрешения.РазрешеннаяЛинияПоддержки.Владелец = &Субъект";
        
        Запрос.УстановитьПараметр("Объект", Объект);
        Запрос.УстановитьПараметр("Субъект", Субъект);
        
        Возврат Не Запрос.Выполнить().Пустой();
        
    ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ЛинииПоддержки") Тогда
        // Если линия поддержки относится к основной службе поддержки, она может взаимодействовать с кем угодно.
        Если Объект.Владелец = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
            Возврат Истина;
        КонецЕсли;
        // Линия поддержки может взаимодействовать со всеми линиями своей организации.
        Если Объект.Владелец = Субъект.Владелец Тогда
            Возврат Истина;
        КонецЕсли;
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
            |   Истина
            |ИЗ
            |   РегистрСведений.РазрешенныеВзаимодействияЛинийПоддержки КАК Разрешения
            |ГДЕ
            |   Разрешения.ЛинияПоддержки = &Объект
            |   И Разрешения.РазрешеннаяЛинияПоддержки = &Субъект";
        
        Запрос.УстановитьПараметр("Объект", Объект);
        Запрос.УстановитьПараметр("Субъект", Субъект);
        
        Возврат Не Запрос.Выполнить().Пустой();
        
    Иначе
        ВызватьИсключение НСтр("ru='Возможна проверка только для справочников ""Обслуживающие организации"" или ""Линии поддержки""'"); 
        
    КонецЕсли;
	
КонецФункции

#КонецОбласти     

#КонецЕсли