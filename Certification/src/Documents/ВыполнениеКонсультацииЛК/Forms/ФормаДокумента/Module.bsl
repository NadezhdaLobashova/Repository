
&НаКлиенте
Процедура ПодобратьИзРасписания(Команда)
	ДатаРасписания = НачалоДня(Объект.ДатаВремяНачала);
	Если Не ЗначениеЗаполнено(ДатаРасписания) Тогда
		ДатаРасписания = НачалоДня(Объект.Дата);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаРасписания) Тогда
		ДатаРасписания = НачалоДня(ТекущаяДата());
	КонецЕсли;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Дата"				, ДатаРасписания);
	ПараметрыФормы.Вставить("Сотрудник"			, Объект.Сотрудник);
	ПараметрыФормы.Вставить("ДатаАктуальности"	, Объект.Дата);
	ПараметрыФормы.Вставить("ДокументСсылка"	, Объект.Ссылка);
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьИзРасписанияЗавершение", ЭтаФорма);
	//ОткрытьФорму("Документ.ВыполнениеКонсультацииЛК.Форма.ФормаПодбораРасписания", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ДополнительныеПараметры = Новый Структура;
	ИмяФормыДляОткрытия = "Документ.ВыполнениеКонсультацииЛК.Форма.ФормаПодбораРасписания";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "ПодобратьИзРасписанияЗавершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьИзРасписанияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураВозВрата = Результат;
	Если ТипЗнч(СтруктураВозВрата) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	
	Объект.Сотрудник		= СтруктураВозВрата.Сотрудник;
	Объект.ДатаВремяНачала	= СтруктураВозВрата.ДатаВремяНачала;
	Объект.Контрагент		= СтруктураВозВрата.Контрагент;
	Объект.КонтактноеЛицо	= СтруктураВозВрата.КонтактноеЛицо;
	Объект.ВидУслуги		= СтруктураВозВрата.ВидУслуги;
	Объект.ТемаВопроса		= СтруктураВозВрата.ТемаВопроса;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаВремяНачалаФакт) Тогда
		Объект.ДатаВремяНачалаФакт	= СтруктураВозВрата.ДатаВремяНачала;
		БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяНачалаПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяНачалаФакт", "Объект", Объект.Ссылка, Неопределено, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзменении(Элемент)
	Если Объект.Результат = ПредопределенноеЗначение("Перечисление.РезультатыКонсультации.ОказанаКонсультация") Тогда
		Объект.ПричинаНеоказания = Неопределено;
	КонецЕсли;
	УстановитьВидимостьДоступность(Элементы, Объект);
КонецПроцедуры

// БоР : УстановитьВидимостьДоступность() 18.01.2017 18:51:42
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Элементы, Объект) Экспорт
	
	Если Объект.Результат = ПредопределенноеЗначение("Перечисление.РезультатыКонсультации.ОказанаКонсультация") Тогда
		Элементы.ПричинаНеоказания.ТолькоПросмотр = Истина;
		Элементы.ПричинаНеоказания.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ПричинаНеоказания.ОтметкаНезаполненного = Ложь;
		Элементы.ПричинаНеоказания.АвтоВыборНезаполненного = Ложь;
	Иначе
		Элементы.ПричинаНеоказания.ТолькоПросмотр = Ложь;
		Элементы.ПричинаНеоказания.АвтоОтметкаНезаполненного = Истина;
		Элементы.ПричинаНеоказания.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Объект.ПричинаНеоказания);
		Элементы.ПричинаНеоказания.АвтоВыборНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидимостьДоступность(Элементы, Объект);
	//ЗаполнитьКатегории();
КонецПроцедуры

// БоР :  19.01.2017 20:13:57
//&НаСервере
//Процедура ЗаполнитьКатегории() Экспорт

//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	КатегорииСобытия.Категория
//	|ПОМЕСТИТЬ ВТКатегорииДокумента
//	|ИЗ
//	|	&КатегорииСобытия КАК КатегорииСобытия
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	КатегорииОбъектов.Ссылка КАК Категория,
//	|	ВЫБОР
//	|		КОГДА ВТКатегорииДокумента.Категория ЕСТЬ NULL
//	|			ТОГДА ЛОЖЬ
//	|		ИНАЧЕ ИСТИНА
//	|	КОНЕЦ КАК Включить
//	|ИЗ
//	|	Справочник.КатегорииОбъектов КАК КатегорииОбъектов
//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКатегорииДокумента КАК ВТКатегорииДокумента
//	|		ПО КатегорииОбъектов.Ссылка = ВТКатегорииДокумента.Категория
//	|ГДЕ
//	|	НЕ КатегорииОбъектов.ПометкаУдаления
//	|	И КатегорииОбъектов.НазначениеКатегории В(&НазначениеКатегорий)
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	КатегорииОбъектов.Ссылка
//	|АВТОУПОРЯДОЧИВАНИЕ";
//	
//	Запрос.УстановитьПараметр("НазначениеКатегорий"	, ОбщегоНазначения.ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке(Объект.Событие));
//	//Запрос.УстановитьПараметр("КатегорииСобытия"	, Объект.КатегорииСобытия.Выгрузить());
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	КатегорииСобытия.Загрузить(РезультатЗапроса.Выгрузить());
//	
//КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	//ТекущийОбъект.КатегорииСобытия.Очистить();
	//Для каждого СтрокаКатегорииСобытия Из КатегорииСобытия Цикл
	//	Если СтрокаКатегорииСобытия.Включить Тогда
	//		СтрокаКатегорииДокумента = ТекущийОбъект.КатегорииСобытия.Добавить();
	//		СтрокаКатегорииДокумента.Категория = СтрокаКатегорииСобытия.Категория;
	//	КонецЕсли;
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяНачалаФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяНачалаПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяНачалаФакт", "Объект", Объект.Ссылка, Неопределено, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ПродолжительностьПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ПродолжительностьФакт", "Объект", Объект.Ссылка, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяОкончанияФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяОкончанияПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяОкончанияФакт", "Объект", Объект.Ссылка, Ложь);
КонецПроцедуры

