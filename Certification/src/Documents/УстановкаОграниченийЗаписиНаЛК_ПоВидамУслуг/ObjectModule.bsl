
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ = Истина Тогда
		Отказ = ДополнительныеСвойства.Отказ;
		ВозВрат;
	КонецЕсли;

	Движения.ОграниченияЗаписиНаЛК_ПоВидамУслуг.Очистить();
	Движения.ОграниченияЗаписиНаЛК_ПоВидамУслуг.Записать();
	ДвиженияОграниченияЗаписиНаЛК_ПоВидамУслуг = ПолучитьДвиженияОграниченияЗаписиНаЛК_ПоВидамУслуг(РежимПроведения);
	Если ДвиженияОграниченияЗаписиНаЛК_ПоВидамУслуг = Неопределено Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	Движения.ОграниченияЗаписиНаЛК_ПоВидамУслуг.Загрузить(ДвиженияОграниченияЗаписиНаЛК_ПоВидамУслуг);
	Движения.ОграниченияЗаписиНаЛК_ПоВидамУслуг.Записывать = Истина;
	
	Движения.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	БоР_ОбщийМодуль.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДвиженияОграниченияЗаписиНаЛК_ПоВидамУслуг(РежимПроведения)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	#Область Запрос
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Сотрудник КАК Сотрудник,
	|	ТабличнаяЧасть.ДатаВремяНачала КАК ДатаВремяНачала
	|ПОМЕСТИТЬ ВТ_СлотыРасписания
	|ИЗ
	|	Документ.УстановкаОграниченийЗаписиНаЛК_ПоВидамУслуг.ЭлементыРасписания КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаВремяНачала,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ВидУслуги КАК ВидУслуги
	|ПОМЕСТИТЬ ВТ_Ограничения
	|ИЗ
	|	Документ.УстановкаОграниченийЗаписиНаЛК_ПоВидамУслуг.Ограничения КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.ВидУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СлотыРасписания.Сотрудник КАК Сотрудник,
	|	ВТ_СлотыРасписания.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТ_Ограничения.ВидУслуги КАК ВидУслуги
	|ПОМЕСТИТЬ ВТ_НовоеСостояние
	|ИЗ
	|	ВТ_СлотыРасписания КАК ВТ_СлотыРасписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ограничения КАК ВТ_Ограничения
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаВремяНачала,
	|	Сотрудник,
	|	ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОграниченияЗаписиНаЛК_ПоВидамУслугСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОграниченияЗаписиНаЛК_ПоВидамУслугСрезПоследних.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ОграниченияЗаписиНаЛК_ПоВидамУслугСрезПоследних.ВидУслуги КАК ВидУслуги
	|ПОМЕСТИТЬ ВТ_ТекущееСостояние
	|ИЗ
	|	РегистрСведений.ОграниченияЗаписиНаЛК_ПоВидамУслуг.СрезПоследних(
	|			&МоментВремени,
	|			(Сотрудник, ДатаВремяНачала) В
	|				(ВЫБРАТЬ
	|					ВТ_СлотыРасписания.Сотрудник,
	|					ВТ_СлотыРасписания.ДатаВремяНачала
	|				ИЗ
	|					ВТ_СлотыРасписания КАК ВТ_СлотыРасписания)) КАК ОграниченияЗаписиНаЛК_ПоВидамУслугСрезПоследних
	|ГДЕ
	|	НЕ ОграниченияЗаписиНаЛК_ПоВидамУслугСрезПоследних.НеДействует
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаВремяНачала,
	|	Сотрудник,
	|	ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_НовоеСостояние.Сотрудник, ВТ_ТекущееСостояние.Сотрудник) КАК Сотрудник,
	|	ЕСТЬNULL(ВТ_НовоеСостояние.ДатаВремяНачала, ВТ_ТекущееСостояние.ДатаВремяНачала) КАК ДатаВремяНачала,
	|	ЕСТЬNULL(ВТ_НовоеСостояние.ВидУслуги, ВТ_ТекущееСостояние.ВидУслуги) КАК ВидУслуги,
	|	ВЫБОР
	|		КОГДА ВТ_НовоеСостояние.Сотрудник ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеДействует,
	|	&Период
	|ИЗ
	|	ВТ_НовоеСостояние КАК ВТ_НовоеСостояние
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ТекущееСостояние КАК ВТ_ТекущееСостояние
	|		ПО ВТ_НовоеСостояние.Сотрудник = ВТ_ТекущееСостояние.Сотрудник
	|			И ВТ_НовоеСостояние.ДатаВремяНачала = ВТ_ТекущееСостояние.ДатаВремяНачала
	|			И ВТ_НовоеСостояние.ВидУслуги = ВТ_ТекущееСостояние.ВидУслуги";
	#КонецОбласти
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		МоментВремени = Неопределено;
	Иначе
		МоментВремени = МоментВремени();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментВремени"		, МоментВремени);
	Запрос.УстановитьПараметр("Период"				, Дата);
	Запрос.УстановитьПараметр("Ссылка"				, Ссылка);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	ВозВрат РезультатЗапроса.Выгрузить();
	
	
КонецФункции
