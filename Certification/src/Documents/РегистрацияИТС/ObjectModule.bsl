
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
     УстановитьФлагСделатьДвижениеВТЧ();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
        
    Если Не РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        Возврат;
    КонецЕсли;
    
    МассивСтрокДелающихДвижения = ПодпискиИТС.НайтиСтроки(Новый Структура("СделатьДвижение",Истина));
    Если Не МассивСтрокДелающихДвижения.Количество() Тогда
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В докуменет нет строк делающих вдижение!'"));
        Отказ = Истина;
    КонецЕсли;
    
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Отказ = Истина Тогда
		ВозВрат;
    КонецЕсли;
    
	ДанныеДляПроведения = ДанныеДляПроведенияДокумента();
    ПодпискиНаСервисИТСДвижение = Движения.ПодпискиНаСервисИТС;
    ПодпискиНаСервисИТСДвижение.Очистить();
	ПодпискиНаСервисИТСДвижение.Записать();
    ПодпискиНаСервисИТСДвижение.Записывать = Истина;
    Пока ДанныеДляПроведения.Следующий() Цикл
         НовоеДвижение = ПодпискиНаСервисИТСДвижение.Добавить();
         ЗаполнитьЗначенияСвойств(НовоеДвижение,ДанныеДляПроведения);
    КонецЦикла;
	ПодпискиНаСервисИТСДвижение.Записать();
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведенияДокумента()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   &Ссылка КАК Регистратор,
    |   &Период КАК Период,
    |   РегистрацияИТСПодпискиИТС.НомерСтроки       КАК НомерСтрокиТЧ,
    |   РегистрацияИТСПодпискиИТС.Абонент           КАК Абонент,
    |   РегистрацияИТСПодпискиИТС.РегНомер          КАК РегНомер,
    |   РегистрацияИТСПодпискиИТС.СервисИТС         КАК СервисИТС,
    |   РегистрацияИТСПодпискиИТС.ДатаПокупки       КАК ДатаПокупки,
    |   РегистрацияИТСПодпискиИТС.КоличествоМесяцев КАК КоличествоМесяцев,
    |   РегистрацияИТСПодпискиИТС.ДатаНачала        КАК ДатаНачала,
    |   РегистрацияИТСПодпискиИТС.ДатаОкончания     КАК ДатаОкончания,
    |   РегистрацияИТСПодпискиИТС.Поддержка         КАК Поддержка,
    |   РегистрацияИТСПодпискиИТС.СделатьДвижение   КАК СделатьДвижение
    |ИЗ
    |   Документ.РегистрацияИТС.ПодпискиИТС КАК РегистрацияИТСПодпискиИТС
    |ГДЕ
    |   РегистрацияИТСПодпискиИТС.Ссылка = &Ссылка
    |   И РегистрацияИТСПодпискиИТС.СделатьДвижение";;
    
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("Период", Дата);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Возврат Выборка;
    
КонецФункции

Процедура УстановитьФлагСделатьДвижениеВТЧ() Экспорт
           
    Запрос = Новый Запрос;
    запрос.УстановитьПараметр("Таблица",ПодпискиИТС.Выгрузить());
    запрос.УстановитьПараметр("Ссылка",Ссылка);
    запрос.УстановитьПараметр("Дата",Дата);
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   РегистрацияИТСПодпискиИТС.НомерСтроки КАК НомерСтроки,
    |   РегистрацияИТСПодпискиИТС.Абонент КАК Абонент,
    |   РегистрацияИТСПодпискиИТС.РегНомер КАК РегНомер,
    |   РегистрацияИТСПодпискиИТС.СервисИТС КАК СервисИТС,
    |   РегистрацияИТСПодпискиИТС.ДатаПокупки КАК ДатаПокупки,
    |   РегистрацияИТСПодпискиИТС.ДатаНачала КАК ДатаНачала,
    |   РегистрацияИТСПодпискиИТС.ДатаОкончания КАК ДатаОкончания,
    |   РегистрацияИТСПодпискиИТС.КоличествоМесяцев КАК КоличествоМесяцев,
    |   РегистрацияИТСПодпискиИТС.Поддержка КАК Поддержка,
    |   РегистрацияИТСПодпискиИТС.СделатьДвижение КАК СделатьДвижение
    |ПОМЕСТИТЬ ТЧ_Документа
    |ИЗ
    |   &Таблица КАК РегистрацияИТСПодпискиИТС
    |
    |
    |ИНДЕКСИРОВАТЬ ПО
    |   НомерСтроки,
    |   Абонент,
    |   РегНомер,
    |   СервисИТС,
    |   ДатаПокупки,
    |   ДатаНачала,
    |   ДатаОкончания,
    |   КоличествоМесяцев,
    |   Поддержка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ТЧ_Документа.НомерСтроки КАК НомерСтроки,
    |   ТЧ_Документа.Абонент КАК Абонент,
    |   ТЧ_Документа.РегНомер КАК РегНомер,
    |   ТЧ_Документа.СервисИТС КАК СервисИТС,
    |   ТЧ_Документа.ДатаПокупки КАК ДатаПокупки,
    |   ТЧ_Документа.ДатаНачала КАК ДатаНачала,
    |   ТЧ_Документа.ДатаОкончания КАК ДатаОкончания,
    |   ТЧ_Документа.КоличествоМесяцев КАК КоличествоМесяцев,
    |   ТЧ_Документа.Поддержка КАК Поддержка,
    |   ВЫБОР
    |       КОГДА ПодпискиНаСервисИТССрезПоследних.Регистратор ЕСТЬ NULL
    |           ТОГДА ИСТИНА
    |       ИНАЧЕ ЛОЖЬ
    |   КОНЕЦ КАК СделатьДвижение,
    |   ПодпискиНаСервисИТССрезПоследних.Период КАК Период,
    |   ПодпискиНаСервисИТССрезПоследних.Регистратор КАК Регистратор
    |ИЗ
    |   ТЧ_Документа КАК ТЧ_Документа
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодпискиНаСервисИТС.СрезПоследних(&Дата, 
    |       //НЕ Регистратор = &Ссылка
    |       ) КАК ПодпискиНаСервисИТССрезПоследних
    |       ПО ТЧ_Документа.Абонент = ПодпискиНаСервисИТССрезПоследних.Абонент
    |           И ТЧ_Документа.СервисИТС = ПодпискиНаСервисИТССрезПоследних.СервисИТС
    |           И ТЧ_Документа.ДатаПокупки = ПодпискиНаСервисИТССрезПоследних.ДатаПокупки
    |           И ТЧ_Документа.ДатаНачала = ПодпискиНаСервисИТССрезПоследних.ДатаНачала
    |           И ТЧ_Документа.ДатаОкончания = ПодпискиНаСервисИТССрезПоследних.ДатаОкончания
    |           И ТЧ_Документа.КоличествоМесяцев = ПодпискиНаСервисИТССрезПоследних.КоличествоМесяцев
    |           И ТЧ_Документа.Поддержка = ПодпискиНаСервисИТССрезПоследних.Поддержка";
    
    РезультатЗапроса = Запрос.Выполнить();
    Таблица = РезультатЗапроса.Выгрузить();
    ПодпискиИТС.Загрузить(Таблица);
        
КонецПроцедуры
 
 #КонецОбласти

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
    Если ЭтоНовый() Тогда
        Ответственный = Пользователи.ТекущийПользователь();
        Дата 	= ТекущаяДата();
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Прочее 
 
#КонецОбласти
