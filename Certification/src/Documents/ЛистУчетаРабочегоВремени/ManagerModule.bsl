Процедура Печать(ТабДок, Ссылка, ПечатьСИнициаторами = Ложь) Экспорт
	МассивСсылок = Ссылка;
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		
		Макет = Документы.ЛистУчетаРабочегоВремени.ПолучитьМакет("ЛУРВПоЗадачам");
		
		ИмяПодвала2 = "Подвал2_Платные";

		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал1 = Макет.ПолучитьОбласть("Подвал1");
		ОбластьПодвал2 = Макет.ПолучитьОбласть(ИмяПодвала2);
		ОбластьПодвал3 = Макет.ПолучитьОбласть("Подвал3");
		
		//ОбластьПодвал3.Параметры.УполномоченноеЛицо = ПолучитьУполномоченноеЛицо(ЭтотОбъект.Проект, ЭтотОбъект.Дата);
		//ОбластьПодвал3.Параметры.РуководительОрганизации = ПолучитьУполномоченноеЛицо(ЭтотОбъект.Договор.Организация, ЭтотОбъект.Дата);
		ОбластьПодвал3.Параметры.Год = Формат(Ссылка.Дата, "ДФ=yyyy");
		ОбластьПодвал3.Параметры.ОтИмени = Ссылка.Организация;//"1С-Рарус Новосибирск";//ЭтотОбъект.Договор.Организация.ПолноеНаименование;

		ОбластьШапка.Параметры.Номер = Ссылка.НомерЛУРВДляКлиента;
		ОбластьШапка.Параметры.ОтИмени = Ссылка.Организация;//"1С-Рарус Новосибирск";
		ОбластьШапка.Параметры.НаименованиеКонтрагента = Ссылка.КонтрагентАбонент.Наименование;
		
		//Если НЕ ЭтотОбъект.Договор.ДополнительноеСоглашение Тогда
			ОбластьШапка.Параметры.НомерДС = "";
			ОбластьШапка.Параметры.НомерДоговора = Ссылка.НомерДоговора;//"_________";//ЭтотОбъект.Договор.НомерДляПечати;
			ОбластьШапка.Параметры.ДатаДоговора = Формат(Ссылка.ДатаДоговора, "ДЛФ=DD");//"___.___.20___";//Формат(ЭтотОбъект.Договор.ДатаЗаключения, "ДЛФ=DD");
		//Иначе
		//	ОбластьШапка.Параметры.НомерДС = " дополнительному соглашению №" + ЭтотОбъект.Договор.НомерДляПечати + " к";
		//	ОбластьШапка.Параметры.НомерДоговора = ЭтотОбъект.Договор.ОсновнойДоговор.НомерДляПечати;
		//	ОбластьШапка.Параметры.ДатаДоговора = Формат(ЭтотОбъект.Договор.ОсновнойДоговор.ДатаЗаключения, "ДЛФ=DD");
		//КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапка);

		НомерСтраницы = 1;
		ИтогПоСтранице = '00010101';
		
		Запрос = Новый Запрос;			
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период,
			|	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТ_МаксКадроваяисторияПредв
			|ИЗ
			|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаОкончания, ) КАК КадроваяИсторияСрезПоследних
			|ГДЕ
			|	КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
			|
			|СГРУППИРОВАТЬ ПО
			|	КадроваяИсторияСрезПоследних.Сотрудник
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	МАКСИМУМ(КадроваяИстория.Период),
			|	КадроваяИстория.Сотрудник
			|ИЗ
			|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаНачала, ) КАК КадроваяИстория
			|ГДЕ
			|	КадроваяИстория.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
			|
			|СГРУППИРОВАТЬ ПО
			|	КадроваяИстория.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(ВТ_МаксКадроваяисторияПредв.Период) КАК Период,
			|	ВТ_МаксКадроваяисторияПредв.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТ_МаксКадроваяистория
			|ИЗ
			|	ВТ_МаксКадроваяисторияПредв КАК ВТ_МаксКадроваяисторияПредв
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_МаксКадроваяисторияПредв.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КадроваяИстория.Подразделение КАК Подразделение,
			|	КадроваяИстория.Регион КАК Регион,
			|	КадроваяИстория.Должность КАК Должность,
			|	ВТ_МаксКадроваяистория.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТ_КадроваяИстория
			|ИЗ
			|	ВТ_МаксКадроваяистория КАК ВТ_МаксКадроваяистория
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
			|		ПО ВТ_МаксКадроваяистория.Период = КадроваяИстория.Период
			|			И ВТ_МаксКадроваяистория.Сотрудник = КадроваяИстория.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЛУРВРаботы.Ссылка КАК Ссылка,
			|	ЛУРВРаботы.НомерСтроки КАК НомерСтроки,
			|	ЛУРВРаботы.Дата КАК Дата,
			|	ЛУРВРаботы.ВремяНачала КАК ВремяС,
			|	ЛУРВРаботы.ВремяОкончания КАК ВремяПо,
			|	ЛУРВРаботы.Время КАК Время,
			|	ЛУРВРаботы.КоличествоЧасов КАК Часы,
			|	ЛУРВРаботы.Описание КАК ОписаниеРаботы,
			|	ЛУРВРаботы.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	ЛУРВРаботы.Сотрудник КАК Сотрудник,
			|	NULL КАК Инициатор,
			|	ЛУРВРаботы.Задача КАК Задача
			|ПОМЕСТИТЬ ВТ_Работы
			|ИЗ
			|	Документ.ЛистУчетаРабочегоВремени.ДанныеЛУРВ КАК ЛУРВРаботы
			|ГДЕ
			|	ЛУРВРаботы.Ссылка = &Ссылка
			|	И НЕ ЛУРВРаботы.Задача = ЗНАЧЕНИЕ(Справочник.Задачи.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЛУРВРаботы.Ссылка,
			|	ЛУРВРаботы.НомерСтроки,
			|	ЛУРВРаботы.Дата,
			|	ЛУРВРаботы.ВремяНачала,
			|	ЛУРВРаботы.ВремяОкончания,
			|	ЛУРВРаботы.Время,
			|	ЛУРВРаботы.КоличествоЧасов,
			|	ЛУРВРаботы.Описание,
			|	ЛУРВРаботы.ИдентификаторСтроки,
			|	ЛУРВРаботы.Сотрудник,
			|	ЛУРВРаботы.Обращение.Инициатор,
			|	ЛУРВРаботы.Обращение
			|ИЗ
			|	Документ.ЛистУчетаРабочегоВремени.ДанныеЛУРВ КАК ЛУРВРаботы
			|ГДЕ
			|	ЛУРВРаботы.Ссылка = &Ссылка
			|	И ЛУРВРаботы.Задача = ЗНАЧЕНИЕ(Справочник.Задачи.пустаяссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Работы.Задача КАК Задача,
			|	ВТ_Работы.Дата КАК Дата,
			|	ВТ_Работы.ВремяС КАК ВремяС,
			|	ВТ_Работы.ВремяПо КАК ВремяПо,
			|	ВТ_Работы.Часы КАК ФактическиеТрудозатраты,
			|	ВТ_Работы.Часы КАК Часы,
			|	ВТ_Работы.ОписаниеРаботы КАК ОписаниеРаботы,
			|	ВТ_Работы.Задача.Трудозатраты КАК ПлановыеТрудозатраты,
			|	ВТ_Работы.Время КАК Время,
			|	ВТ_Работы.Задача.Наименование КАК Наименование,
			|	ВТ_Работы.Сотрудник КАК Специалист,
			|	ВТ_Работы.Инициатор КАК Инициатор,
			|	ВТ_КадроваяИстория.Должность КАК Должность
			|ИЗ
			|	ВТ_Работы КАК ВТ_Работы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадроваяИстория КАК ВТ_КадроваяИстория
			|		ПО ВТ_Работы.Сотрудник = ВТ_КадроваяИстория.Сотрудник
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата
			|ИТОГИ
			|	СУММА(ФактическиеТрудозатраты),
			|	МАКСИМУМ(ПлановыеТрудозатраты)
			|ПО
			|	Инициатор,
			|	Задача";
			
		//Лобашова 23.07.2019 90164 +
		Если не ПечатьСИнициаторами Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "NULL КАК Инициатор,", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЛУРВРаботы.Обращение.Инициатор,", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Работы.Инициатор КАК Инициатор,", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Инициатор,", "");
			
		КонецЕсли;
		//Лобашова 23.07.2019 90164 -
			
		////Лобашова 19.06.2019 88371 +
		//Запрос.Текст = 
		//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	|	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период,
		//	|	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник
		//	|ПОМЕСТИТЬ ВТ_МаксКадроваяисторияПредв
		//	|ИЗ
		//	|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаОкончания, ) КАК КадроваяИсторияСрезПоследних
		//	|ГДЕ
		//	|	КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	КадроваяИсторияСрезПоследних.Сотрудник
		//	|
		//	|ОБЪЕДИНИТЬ ВСЕ
		//	|
		//	|ВЫБРАТЬ
		//	|	МАКСИМУМ(КадроваяИстория.Период),
		//	|	КадроваяИстория.Сотрудник
		//	|ИЗ
		//	|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаНачала, ) КАК КадроваяИстория
		//	|ГДЕ
		//	|	КадроваяИстория.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	КадроваяИстория.Сотрудник
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	|	МАКСИМУМ(ВТ_МаксКадроваяисторияПредв.Период) КАК Период,
		//	|	ВТ_МаксКадроваяисторияПредв.Сотрудник КАК Сотрудник
		//	|ПОМЕСТИТЬ ВТ_МаксКадроваяистория
		//	|ИЗ
		//	|	ВТ_МаксКадроваяисторияПредв КАК ВТ_МаксКадроваяисторияПредв
		//	|
		//	|СГРУППИРОВАТЬ ПО
		//	|	ВТ_МаксКадроваяисторияПредв.Сотрудник
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	КадроваяИстория.Подразделение КАК Подразделение,
		//	|	КадроваяИстория.Регион КАК Регион,
		//	|	КадроваяИстория.Должность КАК Должность,
		//	|	ВТ_МаксКадроваяистория.Сотрудник КАК Сотрудник
		//	|ПОМЕСТИТЬ ВТ_КадроваяИстория
		//	|ИЗ
		//	|	ВТ_МаксКадроваяистория КАК ВТ_МаксКадроваяистория
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
		//	|		ПО ВТ_МаксКадроваяистория.Период = КадроваяИстория.Период
		//	|			И ВТ_МаксКадроваяистория.Сотрудник = КадроваяИстория.Сотрудник
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ЛУРВРаботы.Ссылка КАК Ссылка,
		//	|	ЛУРВРаботы.НомерСтроки КАК НомерСтроки,
		//	|	ЛУРВРаботы.Дата КАК Дата,
		//	|	ЛУРВРаботы.ВремяНачала КАК ВремяС,
		//	|	ЛУРВРаботы.ВремяОкончания КАК ВремяПо,
		//	|	ЛУРВРаботы.Время КАК Время,
		//	|	ЛУРВРаботы.КоличествоЧасов КАК Часы,
		//	|	ЛУРВРаботы.Описание КАК ОписаниеРаботы,
		//	|	ЛУРВРаботы.ИдентификаторСтроки КАК ИдентификаторСтроки,
		//	|	ЛУРВРаботы.Сотрудник КАК Сотрудник,
		//	|	ЛУРВРаботы.Задача КАК Задача
		//	|ПОМЕСТИТЬ ВТ_Работы
		//	|ИЗ
		//	|	Документ.ЛистУчетаРабочегоВремени.ДанныеЛУРВ КАК ЛУРВРаботы
		//	|ГДЕ
		//	|	ЛУРВРаботы.Ссылка = &Ссылка
		//	|	И НЕ ЛУРВРаботы.Задача = ЗНАЧЕНИЕ(Справочник.Задачи.ПустаяСсылка)
		//	|
		//	|ОБЪЕДИНИТЬ ВСЕ
		//	|
		//	|ВЫБРАТЬ
		//	|	ЛУРВРаботы.Ссылка,
		//	|	ЛУРВРаботы.НомерСтроки,
		//	|	ЛУРВРаботы.Дата,
		//	|	ЛУРВРаботы.ВремяНачала,
		//	|	ЛУРВРаботы.ВремяОкончания,
		//	|	ЛУРВРаботы.Время,
		//	|	ЛУРВРаботы.КоличествоЧасов,
		//	|	ЛУРВРаботы.Описание,
		//	|	ЛУРВРаботы.ИдентификаторСтроки,
		//	|	ЛУРВРаботы.Сотрудник,
		//	|	ЛУРВРаботы.Обращение
		//	|ИЗ
		//	|	Документ.ЛистУчетаРабочегоВремени.ДанныеЛУРВ КАК ЛУРВРаботы
		//	|ГДЕ
		//	|	ЛУРВРаботы.Ссылка = &Ссылка
		//	|	И ЛУРВРаботы.Задача = ЗНАЧЕНИЕ(Справочник.Задачи.пустаяссылка)
		//	|;
		//	|
		//	|////////////////////////////////////////////////////////////////////////////////
		//	|ВЫБРАТЬ
		//	|	ВТ_Работы.Задача КАК Задача,
		//	|	ВТ_Работы.Дата КАК Дата,
		//	|	ВТ_Работы.ВремяС КАК ВремяС,
		//	|	ВТ_Работы.ВремяПо КАК ВремяПо,
		//	|	ВТ_Работы.Часы КАК ФактическиеТрудозатраты,
		//	|	ВТ_Работы.Часы КАК Часы,
		//	|	ВТ_Работы.ОписаниеРаботы КАК ОписаниеРаботы,
		//	|	ВТ_Работы.Задача.Трудозатраты КАК ПлановыеТрудозатраты,
		//	|	ВТ_Работы.Время КАК Время,
		//	|	ВТ_Работы.Задача.Наименование КАК Наименование,
		//	|	ВТ_Работы.Сотрудник КАК Специалист,
		//	|	ВТ_КадроваяИстория.Должность КАК Должность
		//	|ИЗ
		//	|	ВТ_Работы КАК ВТ_Работы
		//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадроваяИстория КАК ВТ_КадроваяИстория
		//	|		ПО ВТ_Работы.Сотрудник = ВТ_КадроваяИстория.Сотрудник
		//	|
		//	|УПОРЯДОЧИТЬ ПО
		//	|	Дата
		//	|ИТОГИ
		//	|	СУММА(ФактическиеТрудозатраты),
		//	|	МАКСИМУМ(ПлановыеТрудозатраты)
		//	|ПО
		//	|	Задача";
		////Лобашова 19.06.2019 88371 -
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДатаНачала", Ссылка.ДатаНачалаПериода);
		Запрос.УстановитьПараметр("ДатаОкончания", Ссылка.ДатаОкончанияПериода);
		
		РезультатЗапроса = Запрос.Выполнить();
		//Лобашова 25.07.2019 90164 +
		Если ПечатьСИнициаторами Тогда
			ВыборкаИнициатор = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Инициатор");
			ИтогоФактическиеТрудозатраты = 0;
			Пока ВыборкаИнициатор.Следующий() Цикл
				ИтогВремениПоИнициатору = '00010101';
				ОбластьСтрокаИнициатор = Макет.ПолучитьОбласть("Инициатор");
				ШрифтШапки = Новый Шрифт(ОбластьСтрокаИнициатор.ТекущаяОбласть.Шрифт, , , Истина, , , , ); 
				ОбластьСтрокаИнициатор.Области.Инициатор.Шрифт = ШрифтШапки;
				ОбластьСтрокаИнициатор.Параметры.Инициатор			= СокрЛП(ВыборкаИнициатор.Инициатор);
				
				МассивОбластей = Новый Массив();
				МассивОбластей.Добавить(ОбластьСтрокаИнициатор);
				
				ТабДок.Вывести(ОбластьСтрокаИнициатор);
							
				//ВыборкаЗадача = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				ВыборкаЗадача = ВыборкаИнициатор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Задача");
			
			//Лобашова 25.07.2019 90164 -
			
				
				//ИтогоФактическиеТрудозатраты = 0;
			
				Пока ВыборкаЗадача.Следующий() Цикл
					//Лобашова 11.02.2019 81021 +
					ИтогВремениПоЗадаче = '00010101';
					//Лобашова 11.02.2019 81021 -
					ОбластьСтрокаЗадачи = Макет.ПолучитьОбласть("Задача");
					ШрифтШапки = Новый Шрифт(ОбластьСтрокаЗадачи.ТекущаяОбласть.Шрифт, , , Истина, , , , ); 
					ОбластьСтрокаЗадачи.Области.Задача.Шрифт = ШрифтШапки;
					ОбластьСтрокаЗадачи.Параметры.Задача			= СокрЛП(ВыборкаЗадача.ЗАдача);
					//ОбластьСтрокаЗадачи.Параметры.ПлановыеТрудозатраты 	= СокрЛП(?(ВыборкаЗадача.ПлановыеТрудозатраты = 0,"",ВыборкаЗадача.ПлановыеТрудозатраты));
					ОбластьСтрокаЗадачи.Параметры.ИтогоПоЗадаче = СокрЛП(ВыборкаЗадача.ФактическиеТрудозатраты);
					
					ИтогоФактическиеТрудозатраты = ИтогоФактическиеТрудозатраты + ВыборкаЗадача.ФактическиеТрудозатраты;
					
					//МассивОбластей = Новый Массив();
					МассивОбластей.Добавить(ОбластьСтрокаЗадачи);
					
					//Лобашова 19.02.2019 81021  +
					Стр = ВыборкаЗадача.Выбрать();
					Пока Стр.Следующий() Цикл
						Часы = УдалитьСекунды(стр.Часы);
						ИтогВремениПоЗадаче = ИтогВремениПоЗадаче + Окр(Часы * 3600);
					КонецЦикла;
					ОбластьСтрокаЗадачи.Параметры.ВремяПоЗадаче = ПолучитьСтруктуруПараметровВремени(ИтогВремениПоЗадаче).ИтогоЧасов;
					//Лобашова 19.02.2019 81021  - 
					
					ТабДок.Вывести(ОбластьСтрокаЗадачи);

					Строка = ВыборкаЗадача.Выбрать();
					
					Пока Строка.Следующий() Цикл
						
						Часы = УдалитьСекунды(строка.Часы);
						
						ОбластьПодвал1.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));
						ОбластьПодвал2.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));
						
						ОбластьСтрока.Параметры.Дата = строка.Дата;
						ОбластьСтрока.Параметры.ВремяС = строка.ВремяС;
						ОбластьСтрока.Параметры.ВремяПо = строка.ВремяПо;
						
						ОбластьСтрока.Параметры.Время = Формат(Цел(Часы), "ЧЦ=2; ЧДЦ=0; ЧН=; ЧВН=") + ":" + Формат((Часы - Цел(Часы))*60, "ЧЦ=2; ЧДЦ=0; ЧН=; ЧВН=");
						ОбластьСтрока.Параметры.ОписаниеРаботы = СокрЛП(строка.ОписаниеРаботы);        
						
						ОбластьСтрока.Параметры.Специалист 	= строка.Специалист;
						ОбластьСтрока.Параметры.Квалификация 	= строка.Должность;
						ОбластьСтрока.Параметры.ФактическиеТрудозатраты = СокрЛП(Строка.ФактическиеТрудозатраты);
					
						МассивОбластей = Новый Массив();
						МассивОбластей.Добавить(ОбластьСтрока);
						
						Если ТабДок.ПроверитьВывод(МассивОбластей) Тогда
							ТабДок.Вывести(ОбластьСтрока);
							ИтогПоСтранице = ИтогПоСтранице + Окр(Часы * 3600); // (Время - '00010101');
						Иначе
							
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							
							ИтогПоСтранице = ИтогПоСтранице + Окр(Часы * 3600); // Время;
							НомерСтраницы = НомерСтраницы + 1;
							ОбластьШапка.Параметры.Номер = Ссылка.Номер + "/" + НомерСтраницы;
							
							ТабДок.Вывести(ОбластьШапкаТаблицы);
							ТабДок.Вывести(ОбластьСтрока);
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
			//Лобашова 25.07.2019 90164 +
			КонецЦикла;
			//Лобашова 25.07.2019 90164 -
		Иначе
			ВыборкаЗадача = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ИтогоФактическиеТрудозатраты = 0;
		
			Пока ВыборкаЗадача.Следующий() Цикл
				//Лобашова 11.02.2019 81021 +
				ИтогВремениПоЗадаче = '00010101';
				//Лобашова 11.02.2019 81021 -
				ОбластьСтрокаЗадачи = Макет.ПолучитьОбласть("Задача");
				ШрифтШапки = Новый Шрифт(ОбластьСтрокаЗадачи.ТекущаяОбласть.Шрифт, , , Истина, , , , ); 
				ОбластьСтрокаЗадачи.Области.Задача.Шрифт = ШрифтШапки;
				ОбластьСтрокаЗадачи.Параметры.Задача			= СокрЛП(ВыборкаЗадача.ЗАдача);
				//ОбластьСтрокаЗадачи.Параметры.ПлановыеТрудозатраты 	= СокрЛП(?(ВыборкаЗадача.ПлановыеТрудозатраты = 0,"",ВыборкаЗадача.ПлановыеТрудозатраты));
				ОбластьСтрокаЗадачи.Параметры.ИтогоПоЗадаче = СокрЛП(ВыборкаЗадача.ФактическиеТрудозатраты);
				
				ИтогоФактическиеТрудозатраты = ИтогоФактическиеТрудозатраты + ВыборкаЗадача.ФактическиеТрудозатраты;
				
				МассивОбластей = Новый Массив();
				МассивОбластей.Добавить(ОбластьСтрокаЗадачи);
				
				//Лобашова 19.02.2019 81021  +
				Стр = ВыборкаЗадача.Выбрать();
				Пока Стр.Следующий() Цикл
					Часы = УдалитьСекунды(стр.Часы);
					ИтогВремениПоЗадаче = ИтогВремениПоЗадаче + Окр(Часы * 3600);
				КонецЦикла;
				ОбластьСтрокаЗадачи.Параметры.ВремяПоЗадаче = ПолучитьСтруктуруПараметровВремени(ИтогВремениПоЗадаче).ИтогоЧасов;
				//Лобашова 19.02.2019 81021  - 
				
				ТабДок.Вывести(ОбластьСтрокаЗадачи);

				Строка = ВыборкаЗадача.Выбрать();
				
				Пока Строка.Следующий() Цикл
					
					Часы = УдалитьСекунды(строка.Часы);
					
					ОбластьПодвал1.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));
					ОбластьПодвал2.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));
					
					ОбластьСтрока.Параметры.Дата = строка.Дата;
					ОбластьСтрока.Параметры.ВремяС = строка.ВремяС;
					ОбластьСтрока.Параметры.ВремяПо = строка.ВремяПо;
					
					ОбластьСтрока.Параметры.Время = Формат(Цел(Часы), "ЧЦ=2; ЧДЦ=0; ЧН=; ЧВН=") + ":" + Формат((Часы - Цел(Часы))*60, "ЧЦ=2; ЧДЦ=0; ЧН=; ЧВН=");
					ОбластьСтрока.Параметры.ОписаниеРаботы = СокрЛП(строка.ОписаниеРаботы);        
					
					ОбластьСтрока.Параметры.Специалист 	= строка.Специалист;
					ОбластьСтрока.Параметры.Квалификация 	= строка.Должность;
					ОбластьСтрока.Параметры.ФактическиеТрудозатраты = СокрЛП(Строка.ФактическиеТрудозатраты);
				
					МассивОбластей = Новый Массив();
					МассивОбластей.Добавить(ОбластьСтрока);
					
					Если ТабДок.ПроверитьВывод(МассивОбластей) Тогда
						ТабДок.Вывести(ОбластьСтрока);
						ИтогПоСтранице = ИтогПоСтранице + Окр(Часы * 3600); // (Время - '00010101');
					Иначе
						
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
						
						ИтогПоСтранице = ИтогПоСтранице + Окр(Часы * 3600); // Время;
						НомерСтраницы = НомерСтраницы + 1;
						ОбластьШапка.Параметры.Номер = Ссылка.Номер + "/" + НомерСтраницы;
						
						ТабДок.Вывести(ОбластьШапкаТаблицы);
						ТабДок.Вывести(ОбластьСтрока);
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
		ОбластьПодвал1.Параметры.ИтогоФактическиеТрудозатраты = ИтогоФактическиеТрудозатраты;
				
		//МассивОбластей = Новый Массив();
		//МассивОбластей.Добавить(ОбластьСтрока);
		//МассивОбластей.Добавить(ОбластьПодвал1);
		//МассивОбластей.Добавить(ОбластьПодвал2);
		//МассивОбластей.Добавить(ОбластьПодвал3);

		//ОбластьСтрока.Параметры.Дата					= "---";
		//ОбластьСтрока.Параметры.ВремяС					= "---";
		//ОбластьСтрока.Параметры.ВремяПо					= "---";
		//ОбластьСтрока.Параметры.Время					= "---";
		//ОбластьСтрока.Параметры.ОписаниеРаботы			= "---";
		////ОбластьСтрока.Параметры.ПлановыеТрудозатраты	= "---";
		//ОбластьСтрока.Параметры.ФактическиеТрудозатраты	= "---";
		//										
		//Пока ТабДок.ПроверитьВывод(МассивОбластей) Цикл	
		//    ТабДок.Вывести(ОбластьСтрока);
		//	МассивОбластей = Новый Массив();
		//	МассивОбластей.Добавить(ОбластьСтрока);
		//	МассивОбластей.Добавить(ОбластьПодвал1);
		//	МассивОбластей.Добавить(ОбластьПодвал2);
		//	МассивОбластей.Добавить(ОбластьПодвал3);
		//КонецЦикла;

		ОбластьПодвал1.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));
		ОбластьПодвал2.Параметры.Заполнить(ПолучитьСтруктуруПараметровВремени(ИтогПоСтранице));

		//Если ЭтотОбъект.Статус = Перечисления.СтатусыЛУРВ.Пустой Тогда
		//	ОбластьПодвал1.Параметры.ИтогоЧасов = Неопределено;
		//	ОбластьПодвал2.Параметры.ИтогоЧасовПрописью = Неопределено;	
		//КонецЕсли;

		ТабДок.Вывести(ОбластьПодвал1);
		ТабДок.Вывести(ОбластьПодвал2);
		ТабДок.Вывести(ОбластьПодвал3);
	
	КонецЦикла;
КонецПроцедуры

Функция УдалитьСекунды(Знач Время) Экспорт
	Если ТипЗнч(Время) = Тип("Дата") Тогда
		Возврат НачалоМинуты(Время);
	Иначе
		Возврат Цел(Время) + Окр((Время - Цел(Время)) * 60) / 60;
	КонецЕсли;
КонецФункции

Функция ПолучитьСтруктуруПараметровВремени(ИтогоВремя)
	
	Время = Новый Структура("Часы, Минуты", 24 * (День(ИтогоВремя) - 1) + Час(ИтогоВремя), Минута(ИтогоВремя));
	ТекстПрописью = ЧислоПрописьюБезДробнойЧасти(Время.Часы, "час,часа,часов,м") + " " + НРег(ЧислоПрописьюБезДробнойЧасти(Время.Минуты, "минута,минуты,минут,ж"));

	Структура = Новый Структура("ИтогоЧасов, ИтогоЧасовПрописью");
	Структура.ИтогоЧасов = Формат(Время.Часы, "ЧН=; ЧВН=") + ":" + Формат(Время.Минуты, "ЧЦ=2; ЧН=; ЧВН=");
	Структура.ИтогоЧасовПрописью = ТекстПрописью;

	Возврат Структура;
	
КонецФункции

Функция ЧислоПрописьюБезДробнойЧасти(Число, Формат) Экспорт
	Текст = ЧислоПрописью(Число, , Формат);
	Возврат СокрЛП(Лев(Текст, СтрДлина(Текст)-3));
КонецФункции


