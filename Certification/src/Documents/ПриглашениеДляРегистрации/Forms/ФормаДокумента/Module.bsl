
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ОбслуживающаяОрганизация = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
		Элементы.ВидПриглашения.СписокВыбора.Добавить(Перечисления.ВидыПриглашений.Эксперту);
	КонецЕсли; 
	
	ДоступноИзменениеСвойствПользователя = Не ЗначениеЗаполнено(Объект.Пользователь);
	
	Элементы.ПолноеИмяПользователя.ТолькоПросмотр = Не ДоступноИзменениеСвойствПользователя;
	Элементы.АдресЭлектроннойПочты.ТолькоПросмотр = Не ДоступноИзменениеСвойствПользователя;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПриглашение(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	ОтправитьПриглашениеНаСервере();
	Оповещение = Новый ОписаниеОповещения("ОтправитьПриглашениеЗавершение", ЭтотОбъект);
	
	ПоказатьПредупреждение(Оповещение, НСтр("ru='Приглашение отправлено.'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбслуживающаяОрганизацияПриИзменении(Элемент)
	
	ВидПриглашенияЭксперту = ПредопределенноеЗначение("Перечисление.ВидыПриглашений.Эксперту");
	СлужбаПоддержки = ПредопределенноеЗначение("Справочник.ОбслуживающиеОрганизации.СлужбаПоддержки");
	
	Если Объект.ОбслуживающаяОрганизация = СлужбаПоддержки Тогда
		Если Элементы.ВидПриглашения.СписокВыбора.НайтиПоЗначению(ВидПриглашенияЭксперту) = Неопределено Тогда
			Элементы.ВидПриглашения.СписокВыбора.Добавить(ВидПриглашенияЭксперту);
		КонецЕсли; 
	Иначе
		ЭлементВидПриглашенияЭксперту = Элементы.ВидПриглашения.СписокВыбора.НайтиПоЗначению(ВидПриглашенияЭксперту);
		Если ЭлементВидПриглашенияЭксперту <> Неопределено Тогда
			Элементы.ВидПриглашения.СписокВыбора.Удалить(ЭлементВидПриглашенияЭксперту);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтправитьПриглашениеЗавершение(ПараметрыОповещения) Экспорт
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПриглашениеНаСервере()
	
	ПроверитьСоздатьОбновитьПользователя();
    Записать();	
	Документы.ПриглашениеДляРегистрации.ОтправитьПисьмоПоПриглашению(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСоздатьОбновитьПользователя()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Объект.ПарольПользователя) Тогда
		Объект.ПарольПользователя = Обслуживание.НовыйПароль();
	КонецЕсли; 
		
	Если Не ЗначениеЗаполнено(Объект.Пользователь) Тогда
		ПользовательОбъект = Справочники.Пользователи.СоздатьЭлемент();
	Иначе
		ПользовательОбъект = Объект.Пользователь.ПолучитьОбъект(); 
	КонецЕсли; 
	
	ПользовательОбъект.Наименование = Объект.ПолноеИмяПользователя;
	
	ОписаниеПользователяИБ = Новый Структура;
	ОписаниеПользователяИБ.Вставить("Действие", "Записать");
	ОписаниеПользователяИБ.Вставить("Имя", Объект.АдресЭлектроннойПочты);
	ОписаниеПользователяИБ.Вставить("ПолноеИмя", Объект.ПолноеИмяПользователя);
	ОписаниеПользователяИБ.Вставить("Пароль", Объект.ПарольПользователя);
	ОписаниеПользователяИБ.Вставить("ВходВПрограммуРазрешен", Истина);
	ОписаниеПользователяИБ.Вставить("АутентификацияСтандартная", Истина);
	ОписаниеПользователяИБ.Вставить("УникальныйИдентификатор", ПользовательОбъект.ИдентификаторПользователяИБ);
	
	ПользовательОбъект.ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ", ОписаниеПользователяИБ);
	
	Если ПользовательОбъект.КонтактнаяИнформация.Количество() > 0 Тогда
		КИПочта = ПользовательОбъект.КонтактнаяИнформация[0];
	Иначе
		КИПочта = ПользовательОбъект.КонтактнаяИнформация.Добавить();
		КИПочта.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		КИПочта.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя;
		КИПочта.АдресЭП = Объект.АдресЭлектроннойПочты;
		КИПочта.Представление = Объект.АдресЭлектроннойПочты;
	КонецЕсли;
	
	ПользовательОбъект.Записать();
	
	СведенияОПользователе = РегистрыСведений.СведенияОПользователях.СоздатьМенеджерЗаписи();
	СведенияОПользователе.Пользователь = ПользовательОбъект.Ссылка;
	СведенияОПользователе.ОбслуживающаяОрганизация = Объект.ОбслуживающаяОрганизация;
	СведенияОПользователе.ЛинияПоддержки = Объект.ЛинияПоддержки;
	СведенияОПользователе.Записать();
	
	Если Не ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Объект.Пользователь = ПользовательОбъект.Ссылка;
	КонецЕсли;
	
	РеквизитыЛинииПоддержки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ЛинияПоддержки, 
		"ОграничениеДоступаПоКомпонентам, ГруппаМенеджеров, ГруппаКонсультантов, ГруппаЭкспертов");
        
    ОграничениеПоКомпонентам = РеквизитыЛинииПоддержки.ОграничениеДоступаПоКомпонентам;
    Если ТипЗнч(ОграничениеПоКомпонентам) <> Тип("Булево") Тогда
        ОграничениеПоКомпонентам = Ложь;
    КонецЕсли;
    
	Если Объект.ВидПриглашения = Перечисления.ВидыПриглашений.Менеджеру Тогда
        ПолеГруппы = "ГруппаМенеджеров";
    ИначеЕсли Объект.ВидПриглашения = Перечисления.ВидыПриглашений.Консультанту Тогда
        ПолеГруппы = "ГруппаКонсультантов";
	Иначе
        ПолеГруппы = "ГруппаЭкспертов";
	КонецЕсли; 
	
    ГруппаПользователя = ?(ОграничениеПоКомпонентам, РеквизитыЛинииПоддержки[ПолеГруппы], 
        ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ОбслуживающаяОрганизация, ПолеГруппы));
        
    ГруппаОбъект = ГруппаПользователя.ПолучитьОбъект();
	
	Если ГруппаОбъект.Состав.Найти(Объект.Пользователь, "Пользователь") = Неопределено Тогда
		СтрокаПользователя = ГруппаОбъект.Состав.Добавить();
		СтрокаПользователя.Пользователь = Объект.Пользователь;
		ГруппаОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

