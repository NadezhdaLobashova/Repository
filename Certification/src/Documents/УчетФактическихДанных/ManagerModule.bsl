Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетФактическихДанныхВремя.Ссылка КАК Ссылка,
	|	УчетФактическихДанныхВремя.Ссылка.Сотрудник КАК Сотрудник,
	|	УчетФактическихДанныхВремя.Ссылка.Месяц КАК Месяц,
	|	УчетФактическихДанныхВремя.Работа КАК Работа,
	|	УчетФактическихДанныхВремя.Дата КАК Дата,
	|	СУММА(УчетФактическихДанныхВремя.Часов) КАК Часов,
	|	УчетФактическихДанныхВремя.Проект КАК Проект,
	|	УчетФактическихДанныхВремя.ЭтапПроекта КАК ЭтапПроекта,
	|	УчетФактическихДанныхВремя.Задача КАК Задача,
	|	УчетФактическихДанныхВремя.КонтрагентАбонент КАК КонтрагентАбонент,
	|	СУММА(УчетФактическихДанныхВремя.Сумма) КАК Сумма,
	|	УчетФактическихДанныхВремя.Задание КАК Задание,
	|	УчетФактическихДанныхВремя.ВремяНачала КАК ВремяНачала,
	|	УчетФактическихДанныхВремя.ВремяОкончания КАК ВремяОкончания,
	|	УчетФактическихДанныхВремя.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(УчетФактическихДанныхВремя.Дата, ЧАС, ЧАС(УчетФактическихДанныхВремя.ВремяНачала)), МИНУТА, МИНУТА(УчетФактическихДанныхВремя.ВремяНачала)) КАК ПериодЗаписей,
	|	УчетФактическихДанныхВремя.ВидРабочегоВремени КАК ВидРабочегоВремени,
	|	УчетФактическихДанныхВремя.Обращение КАК Обращение
	|ПОМЕСТИТЬ втДокумент
	|ИЗ
	|	Документ.УчетФактическихДанных.Время КАК УчетФактическихДанныхВремя
	|ГДЕ
	|	УчетФактическихДанныхВремя.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетФактическихДанныхВремя.ВремяОкончания,
	|	УчетФактическихДанныхВремя.ВремяНачала,
	|	УчетФактическихДанныхВремя.КонтрагентАбонент,
	|	УчетФактическихДанныхВремя.Работа,
	|	УчетФактическихДанныхВремя.Задача,
	|	УчетФактическихДанныхВремя.Задание,
	|	УчетФактическихДанныхВремя.Ссылка,
	|	УчетФактическихДанныхВремя.Дата,
	|	УчетФактическихДанныхВремя.Проект,
	|	УчетФактическихДанныхВремя.ЭтапПроекта,
	|	УчетФактическихДанныхВремя.Ссылка.Сотрудник,
	|	УчетФактическихДанныхВремя.Ссылка.Месяц,
	|	УчетФактическихДанныхВремя.ИдентификаторСтроки,
	|	УчетФактическихДанныхВремя.ВидРабочегоВремени,
	|	УчетФактическихДанныхВремя.Обращение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период,
	|	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ вт_МаксПоКадровым
	|ИЗ
	|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК КадроваяИсторияСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	КадроваяИсторияСрезПоследних.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_МаксПоКадровым.Сотрудник КАК Сотрудник,
	|	КадроваяИстория.Подразделение КАК ПодразделениеСотрудника
	|ПОМЕСТИТЬ ВТ_КадровыеДанные
	|ИЗ
	|	вт_МаксПоКадровым КАК вт_МаксПоКадровым
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
	|		ПО вт_МаксПоКадровым.Период = КадроваяИстория.Период
	|			И вт_МаксПоКадровым.Сотрудник = КадроваяИстория.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПривлечениеСотрудникаНаПроект.Сотрудник КАК Сотрудник,
	|	ПривлечениеСотрудникаНаПроект.Проект КАК Проект,
	|	ПривлечениеСотрудникаНаПроект.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ПривлечениеСотрудникаНаПроект.ДатаНачала КАК ДатаНачала,
	|	ПривлечениеСотрудникаНаПроект.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ втПривлечениеНаПроект
	|ИЗ
	|	РегистрСведений.ПривлечениеСотрудникаНаПроект КАК ПривлечениеСотрудникаНаПроект
	|ГДЕ
	|	ПривлечениеСотрудникаНаПроект.Сотрудник = &Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ПланированиеПроектов_Факт"" КАК ИмяРегистра_,
	|	втДокумент.Ссылка КАК Регистратор,
	|	втДокумент.Проект КАК Проект,
	|	втДокумент.ЭтапПроекта КАК ЭтапПроекта,
	|	втДокумент.Дата КАК ПериодПланирования,
	|	ВЫБОР
	|		КОГДА втДокумент.Работа.ВидыРабот.ОсновнаяСтатья = ЗНАЧЕНИЕ(Справочник.СтатьиПланирования.Пустаяссылка)
	|			ТОГДА втДокумент.Проект.ОсновнаяСтатья
	|		ИНАЧЕ втДокумент.Работа.ВидыРабот.ОсновнаяСтатья
	|	КОНЕЦ КАК Статья,
	|	&Сотрудник КАК Сотрудник,
	|	&ДатаСреза КАК Период,
	|	втДокумент.КонтрагентАбонент КАК КонтрагентАбонент,
	|	втДокумент.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	втДокумент.Часов КАК Время,
	|	втДокумент.Сумма КАК Сумма,
	|	втДокумент.Работа КАК Работа,
	|	втДокумент.Проект.Подразделение КАК Подразделение,
	|	ВТ_КадровыеДанные.ПодразделениеСотрудника КАК ПодразделениеСотрудника
	|ИЗ
	|	втДокумент КАК втДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадровыеДанные КАК ВТ_КадровыеДанные
	|		ПО втДокумент.Сотрудник = ВТ_КадровыеДанные.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОтработанноеВремя"" КАК ИмяРегистра_,
	|	&ДатаСреза КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЕСТЬNULL(втПривлечениеНаПроект.ПодразделениеЗатрат, втДокумент.Проект.Подразделение) КАК Подразделение,
	|	втДокумент.Проект КАК Проект,
	|	втДокумент.ЭтапПроекта КАК ЭтапПроекта,
	|	втДокумент.ПериодЗаписей КАК Дата,
	|	втДокумент.Сотрудник КАК Сотрудник,
	|	втДокумент.Работа КАК Работа,
	|	втДокумент.Задача КАК Задача,
	|	втДокумент.Обращение КАК Обращение,
	|	втДокумент.Часов КАК Часы,
	|	втДокумент.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	втДокумент.Месяц КАК Месяц,
	|	втДокумент.ВидРабочегоВремени КАК ВидРабочегоВремени
	|ИЗ
	|	втДокумент КАК втДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПривлечениеНаПроект КАК втПривлечениеНаПроект
	|		ПО втДокумент.Сотрудник = втПривлечениеНаПроект.Сотрудник
	|			И втДокумент.Проект = втПривлечениеНаПроект.Проект
	|			И втДокумент.ПериодЗаписей >= втПривлечениеНаПроект.ДатаНачала
	|			И втДокумент.ПериодЗаписей <= втПривлечениеНаПроект.ДатаОкончания";
	Запрос.УстановитьПараметр("Ссылка"    , ДокументСсылка);
	Запрос.УстановитьПараметр("Сотрудник" , ДокументСсылка.Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза" , ДокументСсылка.Дата);
		
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаОтработанноеВремя"			, Результат[Результат.Количество() - 1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПланированиеПроектов_Факт"	, Результат[Результат.Количество() - 2].Выгрузить());
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.УчетФактическихДанных.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовОтменыПроведения(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.УчетФактическихДанных.СоздатьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКонтрольПередПроведением(Объект, Отказ) Экспорт
	
	Если Ложь Тогда
		Объект = Документы.УчетФактическихДанных.СоздатьДокумент();
	КонецЕсли;
КонецПроцедуры

Функция ТекущиеДанныеПоСотруднику(Сотрудник,ДатаСреза) Экспорт
	СтруктураВозврата = Новый Структура("ТекущаяДолжность,ТекущееПодразделение, ТекущийРегион");
	Запрос = Новый Запрос( "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                       |	КадроваяИсторияСрезПоследних.Подразделение КАК ТекущееПодразделение,
	                       |	КадроваяИсторияСрезПоследних.Должность КАК ТекущаяДолжность,
	                       |	КадроваяИсторияСрезПоследних.Регион КАК ТекущийРегион
	                       |ИЗ
	                       |	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК КадроваяИсторияСрезПоследних
	                       |ГДЕ
	                       |	КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)");
	 Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	 Запрос.УстановитьПараметр("ДатаСреза",ДатаСреза);
	 Выборка = Запрос.Выполнить().Выбрать();
	 Если Выборка.Следующий() Тогда
		 ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	 КонецЕсли;
	 Возврат СтруктураВозврата
 КонецФункции
 
 Функция РассчитатьСуммуНаСервере(Сотрудник, ДатаСреза, ВидРаботы, Часов, ДатаДокумента, ВидРабочегоВремени) Экспорт
	 Запрос = Новый Запрос("ВЫБРАТЬ
	                       |	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник,
	                       |	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период
	                       |ПОМЕСТИТЬ ВТ_МаксПоДолжности
	                       |ИЗ
	                       |	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК КадроваяИсторияСрезПоследних
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	КадроваяИсторияСрезПоследних.Сотрудник
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ВТ_МаксПоДолжности.Сотрудник КАК Сотрудник,
	                       |	КадроваяИстория.Подразделение КАК Подразделение,
	                       |	КадроваяИстория.Должность КАК Должность,
	                       |	КадроваяИстория.Регион
	                       |ПОМЕСТИТЬ ВТ_Должность
	                       |ИЗ
	                       |	ВТ_МаксПоДолжности КАК ВТ_МаксПоДолжности
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
	                       |		ПО ВТ_МаксПоДолжности.Сотрудник = КадроваяИстория.Сотрудник
	                       |			И ВТ_МаксПоДолжности.Период = КадроваяИстория.Период
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ОкладыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	                       |	ОкладыСотрудниковСрезПоследних.Оклад
	                       |ПОМЕСТИТЬ втОклады
	                       |ИЗ
	                       |	РегистрСведений.ОкладыСотрудников.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК ОкладыСотрудниковСрезПоследних
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регистратор КАК Регистратор,
	                       |	МАКСИМУМ(СтавкиСотрудниковПоВидамРаботСрезПоследних.Период) КАК Период
	                       |ПОМЕСТИТЬ ВТ_МаскПоСтавке
	                       |ИЗ
	                       |	ВТ_Должность КАК ВТ_Должность
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиСотрудниковПоВидамРабот.СрезПоследних(&ДатаСреза, ) КАК СтавкиСотрудниковПоВидамРаботСрезПоследних
	                       |		ПО ВТ_Должность.Подразделение = СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение
	                       |			И ВТ_Должность.Должность = СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность
	                       |ГДЕ
	                       |	СтавкиСотрудниковПоВидамРаботСрезПоследних.ВидРаботы = &ВидРаботы
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регистратор
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	СтавкиСотрудниковПоВидамРабот.Подразделение КАК Подразделение,
	                       |	СтавкиСотрудниковПоВидамРабот.Должность КАК Должность,
	                       |	СтавкиСотрудниковПоВидамРабот.Регион,
	                       |	СтавкиСотрудниковПоВидамРабот.Ставка КАК Ставка,
	                       |	СтавкиСотрудниковПоВидамРабот.Оклад КАК Оклад,
	                       |	СтавкиСотрудниковПоВидамРабот.ВидРаботы КАК ВидРаботы
	                       |ПОМЕСТИТЬ ВТ_Ставки
	                       |ИЗ
	                       |	ВТ_МаскПоСтавке КАК ВТ_МаскПоСтавке
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиСотрудниковПоВидамРабот КАК СтавкиСотрудниковПоВидамРабот
	                       |		ПО ВТ_МаскПоСтавке.Регистратор = СтавкиСотрудниковПоВидамРабот.Регистратор
	                       |			И ВТ_МаскПоСтавке.Период = СтавкиСотрудниковПоВидамРабот.Период
	                       |ГДЕ
	                       |	СтавкиСотрудниковПоВидамРабот.ВидРаботы = &ВидРаботы
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                       |	ВЫБОР
	                       |		КОГДА &ВидРаботыПоОкладу
	                       |			ТОГДА ЕСТЬNULL(втОклады.Оклад, 0) / &НормаЧасов * ЕСТЬNULL(&Часов, 0)
	                       |		ИНАЧЕ (ЕСТЬNULL(ВТ_Ставки.Ставка, 0) * ЕСТЬNULL(&Часов, 0) + ЕСТЬNULL(ВТ_Ставки.Оклад, 0) * ЕСТЬNULL(&Часов, 0) / &НормаЧасов) * &Коэффициент
	                       |	КОНЕЦ КАК Сумма
	                       |ИЗ
	                       |	ВТ_Должность КАК ВТ_Должность
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ставки КАК ВТ_Ставки
	                       |		ПО ВТ_Должность.Подразделение = ВТ_Ставки.Подразделение
	                       |			И ВТ_Должность.Должность = ВТ_Ставки.Должность
	                       |			И ВТ_Должность.Регион = ВТ_Ставки.Регион
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ втОклады КАК втОклады
	                       |		ПО (ИСТИНА)");
	Запрос.УстановитьПараметр("ДатаСреза" , ДатаСреза);
	Запрос.УстановитьПараметр("Часов"     , Часов);
	Запрос.УстановитьПараметр("Сотрудник" , Сотрудник);
	Запрос.УстановитьПараметр("НормаЧасов", СотрудникиСервер.ПолучитьНормуЧасовВПериоде(НачалоМесяца(ДатаДокумента),КонецМесяца(ДатаДокумента)));
	Запрос.УстановитьПараметр("Коэффициент"  , ?(Не ЗначениеЗаполнено(ВидРабочегоВремени.Коэффициент), 1, ВидРабочегоВремени.Коэффициент));
	Запрос.УстановитьПараметр("ВидРаботы" , ВидРаботы);
	Запрос.УстановитьПараметр("ВидРаботыПоОкладу" , ВидРаботы.ВидРаботы = Перечисления.ВидыРабот.ОкладнаяРабота);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Сумма
КонецФункции














 
 
 
 
 
 
 
 
 