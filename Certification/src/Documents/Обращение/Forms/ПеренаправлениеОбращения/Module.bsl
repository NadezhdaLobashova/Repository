
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Сервис = Параметры.Сервис;
	Если Не ЗначениеЗаполнено(Сервис) Тогда
		Если Параметры.Свойство("Объекты") И Параметры.Объекты.Количество() > 0 Тогда
			Сервис = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объекты[0], "Сервис");
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.КоличествоОбъектов > 1 Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Перенаправление обращений (%1)'"), Параметры.КоличествоОбъектов); 
	Иначе
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Перенаправление обращения: %1'"), Параметры.Объекты[0]); 
	КонецЕсли; 
	
	Пользователь = Пользователи.АвторизованныйПользователь();
	СведенияОПользователе = РегистрыСведений.СведенияОПользователях.СведенияОПользователе(Пользователь);
	ОбслуживающаяОрганизация = СведенияОПользователе.ОбслуживающаяОрганизация;
	ОбслуживающаяОрганизацияПользователя = СведенияОПользователе.ОбслуживающаяОрганизация;
	ЛинияПоддержки = СведенияОПользователе.ЛинияПоддержки;
	ЛинияПоддержкиПользователя = СведенияОПользователе.ЛинияПоддержки;
	
	ДоступныеОрганизации = Новый СписокЗначений;
	ДобавитьРазрешенныеОрганизации(ЛинияПоддержкиПользователя, ДоступныеОрганизации);
	
	Если ОбслуживающаяОрганизацияПользователя <> Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
		ДоступныеОрганизации.Добавить(ОбслуживающаяОрганизация);
		ДоступныеОрганизации.Добавить(Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки);
		
		ПараметрыДляВыбора = Новый Массив();
		ПараметрыДляВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ДоступныеОрганизации));
		Элементы.ОбслуживающаяОрганизация.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыДляВыбора);
		
		ВнутренняяПереписка = Ложь;
		Элементы.ВнутренняяПереписка.Видимость = Ложь;
		Элементы.Пользователь.ФормаВыбора = "Справочник.Пользователи.Форма.ФормаВыбораИсполнителя";
	Иначе
		ВнутренняяПереписка = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Обращения") Тогда
		Обращения.ЗагрузитьЗначения(Параметры.Обращения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ОбслуживающаяОрганизация) Тогда
		ОбслуживающаяОрганизация = Параметры.ОбслуживающаяОрганизация;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Параметры.ЛинияПоддержки) Тогда
		ЛинияПоддержки = Параметры.ЛинияПоддержки;
	КонецЕсли;
	
	УстановитьОтборыПоОбслуживающейОрганизации();
	
	НастройкиЗаполнения = ХранилищеСистемныхНастроек.Загрузить(
		ЭтотОбъект.ИмяФормы + "." + Строка(Пользователи.АвторизованныйПользователь().УникальныйИдентификатор()), 
		"НастройкиЗаполнения");
	
	Если ЗначениеЗаполнено(НастройкиЗаполнения) Тогда
		НастройкиСервиса = НастройкиЗаполнения.Получить(Сервис);
		Если НастройкиСервиса <> Неопределено Тогда
			НастройкиСервиса.Свойство("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
			НастройкиСервиса.Свойство("ЛинияПоддержки", ЛинияПоддержки);
			НастройкиСервиса.Свойство("Пользователь", Пользователь);
			НастройкиСервиса.Свойство("ТипПеренаправления", ТипПеренаправления);
			НастройкиСервиса.Свойство("ВнутренняяПереписка", ВнутренняяПереписка);
			Если Элементы.ВнутренняяПереписка.Видимость = Ложь Тогда
				ВнутренняяПереписка = Ложь;
			КонецЕсли; 
			УстановитьОтборыПоОбслуживающейОрганизации();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипПеренаправления = 0 Тогда
		ПроверяемыеРеквизиты.Добавить("ЛинияПоддержки");
		Исполнитель = ЛинияПоддержки;
		Поле = "ЛинияПоддержки";
	ИначеЕсли ТипПеренаправления = 1 Тогда
		ПроверяемыеРеквизиты.Добавить("Пользователь");
		Исполнитель = Пользователь;
		Поле = "Пользователь";
	КонецЕсли;
	
	Если Обращения.Количество() = 1 Тогда
		РеквизитыОбращения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Обращения[0].Значение,"Исполнитель, ЛинияПоддержки, Состояние");
		Если РеквизитыОбращения.Состояние = Перечисления.СостоянияОбращений.ОжиданиеИнициатора 
			И Исполнитель <> РеквизитыОбращения.Исполнитель 
			И Исполнитель <> Пользователи.АвторизованныйПользователь() 
			И Исполнитель <> РеквизитыОбращения.ЛинияПоддержки Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Нельзя выполнить перенаправление обращения в статусе ""Ожидание инициатора"" выбранному исполнителю.'");
			Сообщение.Поле = Поле;
			Сообщение.Сообщить();
			
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	 ПриИзмененииТипаПеренаправления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    
    Если ЗавершениеРаботы Тогда
        Возврат;
    КонецЕсли;
    
    Если Модифицированность Тогда
        Отказ = Истина;
        Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
        ПоказатьВопрос(Оповещение, НСтр("ru='Закрыть форму?'"), РежимДиалогаВопрос.ДаНет); 
    Иначе                    
	    ПередЗакрытиемНаСервере();
    КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбслуживающаяОрганизацияПриИзменении(Элемент)
	
	 УстановитьОтборыПоОбслуживающейОрганизации();
	
	Если ОбслуживающаяОрганизация <> ПредопределенноеЗначение("Справочник.ОбслуживающиеОрганизации.СлужбаПоддержки") Тогда
		ВнутренняяПереписка = Ложь;
	Иначе
		Если ОбслуживающаяОрганизацияПользователя = ПредопределенноеЗначение("Справочник.ОбслуживающиеОрганизации.СлужбаПоддержки") Тогда
			ВнутренняяПереписка = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПеренаправленияПриИзменении(Элемент)
	
	 ПриИзмененииТипаПеренаправления(); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенаправить(Команда)
	
	РеквизитыЗаполнены = ПроверитьЗаполнение();
	
	Если Не РеквизитыЗаполнены Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
	СтруктураВозврата.Вставить("Исполнитель", ?(ТипПеренаправления = 0, ЛинияПоддержки, Пользователь));
	СтруктураВозврата.Вставить("Комментарий", Комментарий);
	СтруктураВозврата.Вставить("ВнутренняяПереписка", ВнутренняяПереписка);
	Модифицированность = Ложь;
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборыПоОбслуживающейОрганизации()
	
	ПользователиОбслуживающейОрганизации.Очистить();
	
	Если ОбслуживающаяОрганизацияПользователя = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки 
		Или ОбслуживающаяОрганизация = ОбслуживающаяОрганизацияПользователя Тогда
		ПользователиОбслуживающейОрганизации.ЗагрузитьЗначения(
			РегистрыСведений.СведенияОПользователях.ПользователиОбслуживающейОрганизации(ОбслуживающаяОрганизация));
	КонецЕсли;
	
	Если ПользователиОбслуживающейОрганизации.НайтиПоЗначению(Пользователь) = Неопределено Тогда
		Пользователь = Неопределено;
	КонецЕсли;
	
	ЛинииПоддержки = Новый Массив;
	
	УстанавливатьОтборПоЛиниямПоддержки = Истина;
	
	Если ОбслуживающаяОрганизация = Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки 
		И ОбслуживающаяОрганизацияПользователя <> Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
		ЛинииПоддержки.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбслуживающаяОрганизация, "ПерваяЛинияПоддержки"));
		Элементы.Пользователь.ТолькоПросмотр = Истина;
		Элементы.ТипПеренаправления.ТолькоПросмотр = Истина;
		ТипПеренаправления = 0;
	ИначеЕсли ОбслуживающаяОрганизация <> ОбслуживающаяОрганизацияПользователя 
		И ОбслуживающаяОрганизацияПользователя <> Справочники.ОбслуживающиеОрганизации.СлужбаПоддержки Тогда
		Элементы.Пользователь.ТолькоПросмотр = Истина;
		Элементы.ТипПеренаправления.ТолькоПросмотр = Истина;
		ТипПеренаправления = 0;
	Иначе
		ЛинииПоддержки = Справочники.ОбслуживающиеОрганизации.ЛинииПоддержкиОбслуживающейОрганизации(ОбслуживающаяОрганизация);
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ТипПеренаправления.ТолькоПросмотр = Ложь;
		УстанавливатьОтборПоЛиниямПоддержки = Ложь;
	КонецЕсли;
	
	ДобавитьРазрешенныеЛинииПоддержки(ЛинияПоддержкиПользователя, ОбслуживающаяОрганизация, ЛинииПоддержки);
	
	Элементы.ЛинияПоддержки.Доступность = (ТипПеренаправления = 0);
	
	ПараметрыДляВыбора = Новый Массив();
	
	Если УстанавливатьОтборПоЛиниямПоддержки Тогда
		ПараметрыДляВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ЛинииПоддержки));
	КонецЕсли;
	
	Элементы.ЛинияПоддержки.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыДляВыбора);
	
	Если ЛинииПоддержки.Найти(ЛинияПоддержки) = Неопределено Тогда
		Если ЛинииПоддержки.Количество() > 0 Тогда 
			ЛинияПоддержки = ЛинииПоддержки[0];
		Иначе
			ЛинияПоддержки = Неопределено;
		КонецЕсли;
	КонецЕсли; 
		
	ПараметрыДляВыбора = Новый Массив();
	ПараметрыДляВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ПользователиОбслуживающейОрганизации.ВыгрузитьЗначения()));
	Элементы.Пользователь.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыДляВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииТипаПеренаправления()
	
	Элементы.ЛинияПоддержки.Доступность = (ТипПеренаправления = 0);
	Элементы.Пользователь.Доступность = (ТипПеренаправления = 1);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРазрешенныеОрганизации(ЛинияПоддержкиПользователя, ДоступныеОрганизации)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РазрешенныеВзаимодействия.РазрешеннаяЛинияПоддержки.Владелец КАК ДоступнаяОрганизация
		|ИЗ
		|	РегистрСведений.РазрешенныеВзаимодействияЛинийПоддержки КАК РазрешенныеВзаимодействия
		|ГДЕ
		|	РазрешенныеВзаимодействия.ЛинияПоддержки = &ЛинияПоддержки";
	
	Запрос.УстановитьПараметр("ЛинияПоддержки", ЛинияПоддержки);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДоступныеОрганизации.Добавить(Выборка.ДоступнаяОрганизация);
	КонецЦикла;
	 	
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура ДобавитьРазрешенныеЛинииПоддержки(ЛинияПоддержкиПользователя, ОбслуживающаяОрганизация, ЛинииПоддержки)
	
	РазрешенныеЛинии = РегистрыСведений.РазрешенныеВзаимодействияЛинийПоддержки.РазрешенныеЛинииПоддержки(
        ЛинияПоддержкиПользователя, ОбслуживающаяОрганизация);
    
    Для Каждого Линия Из РазрешенныеЛинии  Цикл
		ЛинииПоддержки.Добавить(Линия);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
     
     Если Результат = КодВозвратаДиалога.Да Тогда
 	     Модифицированность = Ложь;
         Закрыть();
     КонецЕсли;
     
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	НастройкиЗаполнения = ХранилищеСистемныхНастроек.Загрузить(
		ЭтотОбъект.ИмяФормы + "." + Строка(Пользователи.АвторизованныйПользователь().УникальныйИдентификатор()), 
		"НастройкиЗаполнения");
	
	Если Не ЗначениеЗаполнено(НастройкиЗаполнения) Тогда
		НастройкиЗаполнения = Новый Соответствие;
	КонецЕсли;
	
	НастройкаСервиса = Новый Структура;
	НастройкаСервиса.Вставить("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
	НастройкаСервиса.Вставить("ЛинияПоддержки", ЛинияПоддержки);
	НастройкаСервиса.Вставить("Пользователь", Пользователь);
	НастройкаСервиса.Вставить("ТипПеренаправления", ТипПеренаправления);
	НастройкаСервиса.Вставить("ВнутренняяПереписка", ВнутренняяПереписка);
	
	НастройкиЗаполнения.Вставить(Сервис, НастройкаСервиса);
	
	ХранилищеСистемныхНастроек.Сохранить(
		ЭтотОбъект.ИмяФормы + "." + Строка(Пользователи.АвторизованныйПользователь().УникальныйИдентификатор()), 
		"НастройкиЗаполнения", НастройкиЗаполнения);
	
КонецПроцедуры

#КонецОбласти
