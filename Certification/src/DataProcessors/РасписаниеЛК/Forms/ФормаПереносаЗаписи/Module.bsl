
&НаКлиенте
Процедура ОК(Команда)
	ВыбраннаяСтрока = Элементы.ТаблицаРасписания.ТекущиеДанные;
	Если ВыбраннаяСтрока = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	ОбработатьВыборСтроки(ВыбраннаяСтрока)
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасписанияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыборСтроки(Элементы.ТаблицаРасписания.ДанныеСтроки(ВыбраннаяСтрока));
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработатьВыборСтроки(ВыбраннаяСтрока)
	
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("Сотрудник"			, ВыбраннаяСтрока.Сотрудник);
	СтруктураСтроки.Вставить("ДатаВремяНачала"		, ВыбраннаяСтрока.ДатаВремяНачала);

	ТекстОшибки = "";
	Если Не СоздатьДокументыНаСервере(СтруктураСтроки, ТекстОшибки) Тогда
		ВозВрат;
	КонецЕсли;
	
	СтруктураВозВрата = Новый Структура;
	СтруктураВозВрата.Вставить("РезультатОткрытия"			, Истина);
	Закрыть(СтруктураВозВрата);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРасписанияНаСервере()
	
	ТекущаяДата = ТекущаяДата();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	#Область Запрос
	"ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала КАК ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Продолжительность,
	|	РасписаниеКонсультацийСрезПоследних.Работа КАК Работа,
	|	РасписаниеКонсультацийСрезПоследних.Проект КАК Проект
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&Момент,
	|			&УсловиеПоСотруднику
	|				И ДатаВремяНачала >= &ДатаНачала
	|				И ДатаВремяНачала <= &ДатаОкончания) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|	И РасписаниеКонсультацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Запланировано)
	|	И РасписаниеКонсультацийСрезПоследних.Работа = &Работа
	|	И РасписаниеКонсультацийСрезПоследних.Проект = &Проект
	|	И НЕ(РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала = &ДатаВремяНачала
	|				И РасписаниеКонсультацийСрезПоследних.Сотрудник = &ИсходныйСотрудник)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаВремяНачала";
	#КонецОбласти
	
	Момент = Неопределено;
	
	ДР = Бор_ПовторноеИспользованиеКлиентСервер.ПолучитьДоступностьРолей();
	ДоступностьПодчиненныхПодразделенийЛК	= Истина;
	ДоступностьСвоегоПодразделенияЛК		= Истина;
	ДоступностьВсегоДляПП					= БоР_ОбщийМодульКлиентСервер.ВБулево(БоР_ОбщийМодуль.ПолучитьНастройку("ЛК_ПолнымПравамДоступныВсеСотрудники"));
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотруднику", "Сотрудник = &Сотрудник");
		Запрос.УстановитьПараметр("Сотрудник"		, Сотрудник);
	ИначеЕсли ДР.ПолныеПрава И ДоступностьВсегоДляПП Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотруднику", "ИСТИНА");
	Иначе // все доступные
		// возможно, надо заменить "В" на соединения с ВТ, но при малом объеме списка - и так неплохо
		МассивСотрудников = РегистрыСведений.РолиСотрудниковЛК.ПолучитьМассивДоступныхСотрудников(ДоступностьПодчиненныхПодразделенийЛК, ДоступностьСвоегоПодразделенияЛК);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотруднику", "Сотрудник В (&МассивСотрудников)");
		Запрос.УстановитьПараметр("МассивСотрудников"			, МассивСотрудников);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Момент"				, Момент);
	Запрос.УстановитьПараметр("ИсходныйСотрудник"	, ИсходныйСотрудник);
	Запрос.УстановитьПараметр("ДатаВремяНачала"		, ДатаВремяНачала);
	Запрос.УстановитьПараметр("ДатаНачала"			, НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания"		, КонецДня(Дата));
	Запрос.УстановитьПараметр("Работа"				, Работа);
	Запрос.УстановитьПараметр("Проект"				, Проект);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	
	ТаблицаРасписания.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БоР_ОбщийМодуль.ЗаполнитьРеквизитыИзПараметров(ЭтаФорма, Неопределено);
	Дата				= ИсходнаяСтруктура.ДатаВремяНачала;
	ИсходныйСотрудник	= ИсходнаяСтруктура.Сотрудник;
	ЗаполнитьТаблицуРасписанияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьТаблицуРасписанияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ЗаполнитьТаблицуРасписанияНаСервере();
КонецПроцедуры

&НаСервере
Функция СоздатьДокументыНаСервере(ВыбраннаяСтрока, ТекстОшибки = Неопределено) Экспорт
	
	ТекущаяДата = ТекущаяДата();
	
	МассивДокументов = Новый Массив;
	
	ДокументОбъект = Документы.ОтменаЗаписиНаЛК.СоздатьДокумент();
	ДокументОбъект.Дата					= ТекущаяДата;
	ДокументОбъект.ИсточникСоздания		= "РасписаниеЛК";
	ДокументОбъект.Сотрудник			= ИсходнаяСтруктура.Сотрудник;
	ДокументОбъект.ДатаВремяНачала		= ИсходнаяСтруктура.ДатаВремяНачала;
	ДокументОбъект.ПричинаОтмены		= ПредопределенноеЗначение("Справочник.ПричиныОтменыЗаписиНаЛК.Перенос");
	МассивДокументов.Добавить(ДокументОбъект);
	
	ДокументОбъект = Документы.ЗаписьНаЛК.СоздатьДокумент();
	ДокументОбъект.Дата					= ТекущаяДата;
	ДокументОбъект.ИсточникСоздания		= "РасписаниеЛК";
	ДокументОбъект.Сотрудник			= ВыбраннаяСтрока.Сотрудник;
	ДокументОбъект.ДатаВремяНачала		= ВыбраннаяСтрока.ДатаВремяНачала;
	ДокументОбъект.Контрагент			= ИсходнаяСтруктура.Контрагент;
	ДокументОбъект.КонтактноеЛицо		= ИсходнаяСтруктура.КонтактноеЛицо;
	ДокументОбъект.ВидУслуги			= ИсходнаяСтруктура.ВидУслуги;
	ДокументОбъект.ТемаВопроса			= ИсходнаяСтруктура.ТемаВопроса;
	ДокументОбъект.КомментарийЗаписи	= ИсходнаяСтруктура.КомментарийЗаписи;
	ДокументОбъект.ТипЗаписи			= ИсходнаяСтруктура.ТипЗаписи;
	//Лобашова 89291 17.07.2019 +
	ДокументОбъект.Событие				= ПолучитьОбращение();
	//Лобашова 89291 17.07.2019 -
	ДокументОбъект.СрочнаяЗапись		= СрочнаяЗапись;
	ДокументОбъект.КонтактныеТелефоны	= ИсходнаяСтруктура.КонтактныеТелефоны;
	МассивДокументов.Добавить(ДокументОбъект);

	#Область Проведение_документов
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Для каждого ДокументОбъект Из МассивДокументов Цикл
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		Исключение
			ОтменитьТранзакцию();
			#Область Вывод_сообщений
			СообщенияПользователю = ПолучитьСообщенияПользователю(Истина);
			Если СообщенияПользователю.Количество() > 0 Тогда // есть что сказать
				ТекстОшибки = "";
				Для каждого СообщениеПользователю Из СообщенияПользователю Цикл
					ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "") + СообщениеПользователю.Текст;
				КонецЦикла;
				Сообщить(ТекстОшибки);
			Иначе
				ТекстОшибки = "Ошибка при создании документа " + ДокументОбъект.Метаданные().Синоним + "" + Символы.ПС;
				Сообщить(ТекстОшибки + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецЕсли;
			#КонецОбласти
			ВозВрат Ложь;
		КонецПопытки;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	#КонецОбласти
	
	ВозВрат Истина;
	
КонецФункции

//Лобашова 89291 17.07.2019 +
Функция  ПолучитьОбращение()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасписаниеКонсультацийСрезПоследних.Сотрудник КАК Сотрудник,
		|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала КАК ДатаВремяНачала,
		|	РасписаниеКонсультацийСрезПоследних.Событие КАК Событие
		|ИЗ
		|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних КАК РасписаниеКонсультацийСрезПоследних
		|ГДЕ
		|	РасписаниеКонсультацийСрезПоследних.Сотрудник = &Сотрудник
		|	И РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала = &ДатаВремяНачала";
	
	Запрос.УстановитьПараметр("ДатаВремяНачала", ДатаВремяНачала);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Событие;
	КонецЦикла;
	Возврат Документы.Обращение.ПустаяСсылка();
КонецФункции
//Лобашова 89291 17.07.2019 -
