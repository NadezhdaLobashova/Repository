
#Область Обработка_Описания
&НаКлиенте
Процедура ОписаниеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(ДанныеСобытия.Href);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьОписание(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОписаниеXML"					, ОписаниеXML);
	
	ДополнительныеПараметры = Новый Структура;
	
	ИмяФормыДляОткрытия = "Обработка.РасписаниеЛК.Форма.ФормаВводаОписания";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "РедактироватьОписание_Завершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьОписание_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	ОписаниеXML	= Результат.ОписаниеXML;
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(ОписаниеXML, , ОписаниеHTML);
КонецПроцедуры
#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БоР_ОбщийМодуль.ЗаполнитьРеквизитыИзПараметров(ЭтаФорма, Неопределено);
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(ОписаниеXML, , ОписаниеHTML);
	//Лобашова 30.05.2019 87280 +	
	 УстановитьВидимостьДоступность(ЭтаФорма);
	//Лобашова 30.05.2019 87280 -
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьБлокировку(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	Если Не СоздатьДокументыНаСервере() Тогда
		ВозВрат;
	КонецЕсли;
	СтруктураВозВрата = Новый Структура;
	СтруктураВозВрата.Вставить("РезультатОткрытия"			, Истина);
	Закрыть(СтруктураВозВрата);
	
КонецПроцедуры

Функция СоздатьДокументыНаСервере() Экспорт
	
	ТекущаяДата = ТекущаяДата();
	МассивДокументов = Новый Массив;
	ДокументОбъект = Документы.ОтменаПланированияЗагрузкиЗаПериодЛК.СоздатьДокумент();
	ДокументОбъект.Дата					= ТекущаяДата;
	ДокументОбъект.ИсточникСоздания		= "РасписаниеЛК";
	ДокументОбъект.Сотрудник			= Сотрудник;
	ДокументОбъект.ДатаВремяНачала		= ДатаВремяНачала;
	ДокументОбъект.ДатаВремяОкончания	= ДатаВремяОкончания;
	ДокументОбъект.Продолжительность	= Продолжительность;
	МассивДокументов.Добавить(ДокументОбъект);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Для каждого ДокументОбъект Из МассивДокументов Цикл
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		Исключение
			ОтменитьТранзакцию();
			#Область Вывод_сообщений
			СообщенияПользователю = ПолучитьСообщенияПользователю(Истина);
			Если СообщенияПользователю.Количество() > 0 Тогда // есть что сказать
				ТекстОшибки = "";
				Для каждого СообщениеПользователю Из СообщенияПользователю Цикл
					ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "") + СообщениеПользователю.Текст;
				КонецЦикла;
				Сообщить(ТекстОшибки);
			Иначе
				ТекстОшибки = "Ошибка при создании документа ""Отмена планирования загрузки за период""" + Символы.ПС;
				Сообщить(ТекстОшибки + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецЕсли;
			#КонецОбласти
			ВозВрат Ложь;
		КонецПопытки;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	ВозВрат Истина;
	
КонецФункции

&НаКлиенте
Процедура Освободить(Команда)
	
	ДанныеСотрудника = Новый Структура;
	ДанныеСотрудника.Вставить("Сотрудник"				, Сотрудник);
	ДанныеСотрудника.Вставить("Слоты"					, Новый Массив);
	
	СвойстваСлота = Новый Структура;
	СвойстваСлота.Вставить("Сотрудник"				, Сотрудник);
	СвойстваСлота.Вставить("ДатаВремяНачала"		, ДатаВремяНачала);
	СвойстваСлота.Вставить("ДатаВремяОкончания"		, ДатаВремяОкончания);
	СвойстваСлота.Вставить("Продолжительность"		, Продолжительность);
			
	ДанныеСотрудника.Слоты.Добавить(СвойстваСлота);
	
	ДанныеСлотов = Новый Массив;
	ДанныеСлотов.Добавить(ДанныеСотрудника);
	
	Адрес_ДанныеСлотов = ПоместитьВоВременноеХранилище(ДанныеСлотов, ЭтаФорма.УникальныйИдентификатор);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес_ДанныеСлотов"		, Адрес_ДанныеСлотов);
	ПараметрыФормы.Вставить("ПутьКМетаданнымОбработки"	, ПутьКМетаданнымОбработки);

	ДополнительныеПараметры = Новый Структура;
	ИмяФормыДляОткрытия = ПутьКМетаданнымОбработки + ".Форма.ФормаОтменыПланирования";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "Освободить_Завершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Освободить_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураВозВрата = Результат;
	Если СтруктураВозВрата = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	Если ТипЗнч(СтруктураВозВрата) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	Если Не СтруктураВозВрата.Свойство("РезультатОткрытия") Тогда
		ВозВрат;
	КонецЕсли;
	Если СтруктураВозВрата.РезультатОткрытия <> Истина Тогда
		ВозВрат;
	КонецЕсли;
	Закрыть(СтруктураВозВрата);
	
КонецПроцедуры

//Лобашова 30.05.2019 87280 +	
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(ЭтаФорма)
		
	ЭтаФорма.Элементы.ОтменитьБлокировку	.Доступность	= ЭтаФорма.ДоступныеДействия.ДоступноОтменаБлокировки;
	ЭтаФорма.Элементы.Освободить			.Доступность	= ЭтаФорма.ДоступныеДействия.ДоступноИзменение;	
	
КонецПроцедуры
//Лобашова 30.05.2019 87280 -	
