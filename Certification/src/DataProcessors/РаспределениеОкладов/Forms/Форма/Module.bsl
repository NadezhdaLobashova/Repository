
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		Объект.Месяц = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");		
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Направление = 1 Тогда
		Объект.Месяц = КонецМесяца(Объект.Месяц) + 1;
	Иначе
		Объект.Месяц = НачалоМесяца(НачалоМесяца(Объект.Месяц) - 1);
	КонецЕсли;
	
	МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИРаспределитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОкладыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ОкладыСотрудниковСрезПоследних.Оклад
		|ПОМЕСТИТЬ ОкладыСотрудников
		|ИЗ
		|	РегистрСведений.ОкладыСотрудников.СрезПоследних(&КонецПериода, ) КАК ОкладыСотрудниковСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтработанноеВремяОстатки.Сотрудник КАК Сотрудник,
		|	ОтработанноеВремяОстатки.ЧасыОстаток КАК ВсегоЧасов
		|ПОМЕСТИТЬ втВсегоЧасов
		|ИЗ
		|	РегистрНакопления.ОтработанноеВремя.Остатки(
		|			&МоментВремени,
		|			Работа.ВидРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыРабот.ОкладнаяРабота)
		|				И (Месяц МЕЖДУ &НачалоПериода И &КонецПериода)
		|				И Сотрудник В
		|					(ВЫБРАТЬ
		|						ОкладыСотрудников.Сотрудник
		|					ИЗ
		|						ОкладыСотрудников КАК ОкладыСотрудников)) КАК ОтработанноеВремяОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтработанноеВремяОстатки.Проект,
		|	ОтработанноеВремяОстатки.ЭтапПроекта КАК ЭтапПроекта,
		|	ОтработанноеВремяОстатки.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ОтработанноеВремяОстатки.Работа.ВидыРабот.ОсновнаяСтатья = ЗНАЧЕНИЕ(Справочник.СтатьиПланирования.Пустаяссылка)
		|			ТОГДА ОтработанноеВремяОстатки.Проект.ОсновнаяСтатья
		|		ИНАЧЕ ОтработанноеВремяОстатки.Работа.ВидыРабот.ОсновнаяСтатья
		|	КОНЕЦ КАК Статья,
		|	ОтработанноеВремяОстатки.Дата,
		|	ОтработанноеВремяОстатки.Работа,
		|	ОтработанноеВремяОстатки.ЧасыОстаток КАК Часы,
		|	ОтработанноеВремяОстатки.ИдентификаторСтроки,
		|	ОтработанноеВремяОстатки.Задача,
		|	ОтработанноеВремяОстатки.ВидРабочегоВремени
		|ПОМЕСТИТЬ втЧасовПоПроектуПоДням
		|ИЗ
		|	РегистрНакопления.ОтработанноеВремя.Остатки(
		|			&МоментВремени,
		|			Работа.ВидРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыРабот.ОкладнаяРабота)
		|				И (Месяц МЕЖДУ &НачалоПериода И &КонецПериода)
		|				И Сотрудник В
		|					(ВЫБРАТЬ
		|						ОкладыСотрудников.Сотрудник
		|					ИЗ
		|						ОкладыСотрудников КАК ОкладыСотрудников)) КАК ОтработанноеВремяОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЧасовПоПроектуПоДням.Проект,
		|	втЧасовПоПроектуПоДням.ЭтапПроекта КАК ЭтапПроекта,
		|	втЧасовПоПроектуПоДням.Сотрудник КАК Сотрудник,
		|	втЧасовПоПроектуПоДням.Статья,
		|	СУММА(втЧасовПоПроектуПоДням.Часы) КАК Часы
		|ПОМЕСТИТЬ втЧасовПоПроекту
		|ИЗ
		|	втЧасовПоПроектуПоДням КАК втЧасовПоПроектуПоДням
		|
		|СГРУППИРОВАТЬ ПО
		|	втЧасовПоПроектуПоДням.Статья,
		|	втЧасовПоПроектуПоДням.ЭтапПроекта,
		|	втЧасовПоПроектуПоДням.Сотрудник,
		|	втЧасовПоПроектуПоДням.Проект
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОкладыСотрудников.Сотрудник,
		|	втЧасовПоПроекту.Проект,
		|	втЧасовПоПроекту.ЭтапПроекта,
		|	втЧасовПоПроекту.Статья,
		|	втЧасовПоПроекту.Часы,
		|	втЧасовПоПроекту.Часы / втВсегоЧасов.ВсегоЧасов * ОкладыСотрудников.Оклад КАК Сумма
		|ИЗ
		|	втЧасовПоПроекту КАК втЧасовПоПроекту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОкладыСотрудников КАК ОкладыСотрудников
		|		ПО (ОкладыСотрудников.Сотрудник = втЧасовПоПроекту.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ втВсегоЧасов КАК втВсегоЧасов
		|		ПО втЧасовПоПроекту.Сотрудник = втВсегоЧасов.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЧасовПоПроектуПоДням.Проект,
		|	втЧасовПоПроектуПоДням.ЭтапПроекта,
		|	втЧасовПоПроектуПоДням.Сотрудник КАК Сотрудник,
		|	втЧасовПоПроектуПоДням.Статья,
		|	втЧасовПоПроектуПоДням.Дата КАК Дата,
		|	втЧасовПоПроектуПоДням.Работа,
		|	втЧасовПоПроектуПоДням.Часы,
		|	втЧасовПоПроектуПоДням.ИдентификаторСтроки,
		|	втЧасовПоПроектуПоДням.Задача,
		|	втЧасовПоПроектуПоДням.ВидРабочегоВремени
		|ИЗ
		|	втЧасовПоПроектуПоДням КАК втЧасовПоПроектуПоДням
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Дата
		|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Месяц));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Месяц));
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(КонецМесяца(Объект.Месяц), ВидГраницы.Включая));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Объект.Затраты.Загрузить(РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить());
	Объект.ЗатратыПоДням.Загрузить(РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИРаспределить(Команда)
	ЗаполнитьИРаспределитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьДокументыЗавершение", ЭтаФорма), "Будут созданы документы ""Прочие затраты"". Продолжить?", РежимДиалогаВопрос.ДаНет);	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СоздатьДокументыНаСервере();
		Сообщить("Создание документов завершено");
		
		Объект.Затраты.Очистить();
		Объект.ЗатратыПоДням.Очистить();
		ЗаполнитьИРаспределитьНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	
	Проекты = Объект.Затраты.Выгрузить(, "Проект");
	Проекты.Свернуть("Проект");
	
	Для Каждого СтрПроект Из Проекты Цикл
		ДокПрочиеЗатраты 			= Документы.ПрочиеЗатраты.СоздатьДокумент();
		ДокПрочиеЗатраты.Дата 		= КонецМесяца(Объект.Месяц);
		ДокПрочиеЗатраты.Месяц 		= Объект.Месяц;
		ДокПрочиеЗатраты.ТипЗатрат 	= Перечисления.ТипПрочихЗатрат.Оклад;
		ДокПрочиеЗатраты.Проект 	= СтрПроект.Проект;
		ДокПрочиеЗатраты.Комментарий = "Создан обработкой ""Распределение окладов""";
		
		СтрОтбор = Новый Структура;
		СтрОтбор.Вставить("Проект", СтрПроект.Проект);
		
		Затраты = Объект.Затраты.НайтиСтроки(СтрОтбор);
		Для Каждого СтрЗатраты Из Затраты Цикл
			НовЗатраты = ДокПрочиеЗатраты.Затраты.Добавить();
			ЗаполнитьЗначенияСвойств(НовЗатраты, СтрЗатраты);
		КонецЦикла;	
		ЗатратыПоДням = Объект.ЗатратыПоДням.НайтиСтроки(СтрОтбор);
		Для Каждого СтрЗатратыПоДням Из ЗатратыПоДням Цикл
			НовЗатратыПоДням = ДокПрочиеЗатраты.ЗатратыПоДням.Добавить();
			ЗаполнитьЗначенияСвойств(НовЗатратыПоДням, СтрЗатратыПоДням);
		КонецЦикла;	
		
		Попытка
			ДокПрочиеЗатраты.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ДокПрочиеЗатраты.Записать(РежимЗаписиДокумента.Запись);
			Сообщить("Не удалось провести документ: " + Строка(ДокПрочиеЗатраты.Ссылка) + " по причине: " + ОписаниеОшибки() + ". Документ только записан.");
		КонецПопытки;	
			
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыПриАктивизацииСтроки(Элемент)
	Часы = 0;
	Сумма = 0;
	Для Каждого Стр Из Элементы.Затраты.ВыделенныеСтроки Цикл
		Часы = Часы + Объект.Затраты.НайтиПоИдентификатору(Стр).Часы;
		Сумма = Сумма + Объект.Затраты.НайтиПоИдентификатору(Стр).Сумма;
	КонецЦикла;	
	ВыделеноЧасы = Строка(Часы);
	ВыделеноСумма = Строка(Сумма);
КонецПроцедуры


