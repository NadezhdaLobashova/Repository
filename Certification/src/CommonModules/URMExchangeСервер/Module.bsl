Процедура ЗагрузкаЗаданий() Экспорт
	
	Если НЕ Константы.ОбменСОБД.Получить() Тогда
		Возврат
	КонецЕсли;	
	
	ОбработкаЗадание = Обработки.ЗагрузкаЗаданийURMExchange.Создать();
	//ОбработкаЗадач.Инициализировать();
	ОбработкаЗадание.ОбновитьСписокЗаданий();
КонецПроцедуры

Функция ПолучитьПространствоИмен() Экспорт
	Возврат "http://bear.rarus.ru/OBDExchange"
КонецФункции

Функция ПолучитьКонстантуОбменСОБД()Экспорт
	Возврат Константы.ОбменСОБД.Получить()
КонецФункции	

Функция ПолучитьКонстантуСозданиеПроектовИзУРВ()Экспорт
	Возврат Константы.СозданиеПроектовИзУРВ.Получить()
КонецФункции	
 
Функция УстановитьПодключениеКВебСервису() Экспорт
	
	НастройкиИнтеграции = УРВСервер.ПолучитьНастройкиИнтеграции(Перечисления.Интеграции.ПолучениеДанныхИзОБД);
	
	Если НастройкиИнтеграции = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Порт = НастройкиИнтеграции.АдресПодключения;
		
	Пользователь = НастройкиИнтеграции.Пользователь;
		
	Пароль = НастройкиИнтеграции.Пароль;
		
	Определение = Новый WSОпределения(Порт, Пользователь, Пароль);
		
	Прокси = Новый WSПрокси(Определение, URMExchangeСервер.ПолучитьПространствоИмен(), "OBDExchange",  Определение.Сервисы[0].ТочкиПодключения[0].Имя);
	Прокси.Пользователь = Пользователь;
	Прокси.Пароль = Пароль;
		
	Возврат Прокси;
	
КонецФункции

Функция СформироватьЧислоСтрокой(Число)Экспорт
	 МассивЧисло = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Число),",");
	 Если МассивЧисло.Количество() = 2 Тогда
		 ЧислоСтрокой = МассивЧисло[0] + "." + МассивЧисло[1];
	 Иначе
		 ЧислоСтрокой = СокрЛП(Число);
	 КонецЕсли;
	 Возврат ЧислоСтрокой
 КонецФункции	
 
Функция ПолучитьДанныеПоGUID(Проект, Контрагент, Пользователь, Задание)Экспорт
	СтруктураДанных = Новый Структура("Проект, Контрагент, Пользователь, ДокументЗадание");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Проекты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Проекты КАК Проекты
	                      |ГДЕ
	                      |	Проекты.GUIDОБД ПОДОБНО &GUIDПроект
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Контрагенты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Контрагенты КАК Контрагенты
	                      |ГДЕ
	                      |	Контрагенты.GUIDОБД = &GUIDКонтрагент
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Пользователи.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Пользователи КАК Пользователи
	                      |ГДЕ
	                      |	Пользователи.GUIDОБД = &GUIDПользователь
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Задание.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.Задание КАК Задание
	                      |ГДЕ
	                      |	Задание.GUIDОБД = &GUIDЗадание");
	Запрос.УстановитьПараметр("GUIDПроект"        , Проект       );
	Запрос.УстановитьПараметр("GUIDКонтрагент"    , Контрагент   );
	Запрос.УстановитьПараметр("GUIDПользователь"  , Пользователь );
	Запрос.УстановитьПараметр("GUIDЗадание"       , Задание      );
	Пакет = Запрос.ВыполнитьПакет();
	
	ТЗ_Проект = Пакет[0].Выгрузить();
	Если НЕ ТЗ_Проект.Количество() = 0  и Проект <> "00000000-0000-0000-0000-000000000000" Тогда
		СтруктураДанных.Проект = ТЗ_Проект[0].Ссылка;
	КонецЕсли;
	
	ТЗ_Контрагент = Пакет[1].Выгрузить();
	Если НЕ ТЗ_Контрагент.Количество() = 0  и Контрагент <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		СтруктураДанных.Контрагент = ТЗ_Контрагент[0].Ссылка;
	КонецЕсли;
	
	ТЗ_Пользователь = Пакет[2].Выгрузить();
	Если НЕ ТЗ_Пользователь.Количество() = 0 и Пользователь <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		СтруктураДанных.Пользователь = ТЗ_Пользователь[0].Ссылка;
	КонецЕсли;
	
	ТЗ_Задание = Пакет[3].Выгрузить();
	Если НЕ ТЗ_Задание.Количество() = 0 и Задание <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		СтруктураДанных.ДокументЗадание = ТЗ_Задание[0].Ссылка;
	КонецЕсли;
	
	Возврат СтруктураДанных;
КонецФункции
 