
#Область ПрограммныйИнтерфейс

// Возвращает число цифрами и предмет исчисления прописью.
//
// Параметры:
//  Число						 - Число - значение числа.
//  ПараметрыПредметаИсчисления	 - Строка - параметры предмета исчисления.
//  ФорматЧисла					 - Строка - форматная строка.
// 
// Возвращаемое значение:
//   - Строка
//
Функция ЧислоЦифрамиПредметИсчисленияПрописью(Число, ПараметрыПредметаИсчисления, ФорматЧисла = "ЧЦ=15; ЧДЦ=1; ЧН=0,0; ЧГ=0") Экспорт 
	
	ПрописьЧисла = ЧислоПрописью(Число, "Л = ru_RU", НСтр("ru = ',,,,,,,,0'"));
	ПрописьЧислаИПредмета = ЧислоПрописью(Число, "Л = ru_RU", ПараметрыПредметаИсчисления);
	
	Возврат СтрЗаменить(ПрописьЧислаИПредмета, ПрописьЧисла, Формат(Число, ФорматЧисла) + " ");
	
КонецФункции

// Функция - Предмет исчисления часы
// 
// Возвращаемое значение:
//   Строка - предмет исчисления
//
Функция ПредметИсчисленияЧасы() Экспорт
	
	Возврат НСтр("ru = 'час,часа,часов,,,,,,0'");
	
КонецФункции

// Функция - Предмет исчисления часы
// 
// Возвращаемое значение:
//   - Строка предмета исчисления
//
Функция ПредметИсчисленияДни() Экспорт
	
	Возврат НСтр("ru = 'день,дня,дней,,,,,,0'");
	
КонецФункции

// Возвращает строку представления секунд в днях часах и минутах,
// соответствует ГОСТ ИСО 8601-2001.
//
// Параметры:
//  Секунды	 - Число - количество секунд.
// 
// Возвращаемое значение:
//  Строка - строка в формате [ДД (день,дня,дней) ][ЧЧ час ]ММ м.
//
Функция ДниЧасыМинуты(Знач Секунды, ПустоеЗначение = "") Экспорт

	Если Секунды = Неопределено Или Секунды = null Или Секунды = 0 Тогда
		Возврат ПустоеЗначение;
	КонецЕсли;
	
	Если Секунды < 0 Тогда
		Секунды = -Секунды;
		ДЧМ = "- ";
	Иначе
		ДЧМ = "";
	КонецЕсли;
	
	Если Цел(Секунды/86400) >= 1 Тогда
		ДЧМ = ДЧМ + ЧислоЦифрамиПредметИсчисленияПрописью(Цел(Секунды/86400), ПредметИсчисленияДни(), "ЧЦ=15; ЧДЦ=; ЧГ=0") + " "
            + ?(Цел(Секунды/3600) - Цел(Секунды/86400)*24 > 0 Или Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0,
		        Формат(Цел(Секунды/3600) - Цел(Секунды/86400)*24,"ЧДЦ=; ЧН=0; ЧГ=0") +  " ч ","") 
            + ?(Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0, Формат(Цел(Секунды/60) - Цел(Секунды/3600)*60, "ЧДЦ=0; ЧГ=0") +  " мин","")   
	ИначеЕсли Цел(Секунды/3600) >= 1 Тогда
		ДЧМ = ДЧМ +  Формат(Цел(Секунды/3600),"ЧДЦ=0; ЧГ=0") + " ч " + 
		?(Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0, Формат(Цел(Секунды/60) - Цел(Секунды/3600)*60,"ЧДЦ=0; ЧГ=0") +  " мин","") 
	ИначеЕсли Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0 Тогда
		ДЧМ = ДЧМ +  Формат(Цел(Секунды/60) - Цел(Секунды/3600)*60, "ЧДЦ=0; ЧГ=0") +  " мин"
	Иначе
		ДЧМ = НСтр("ru='меньше минуты'");
	КонецЕсли;
	
	Возврат ДЧМ;
	
КонецФункции

// Возвращает строку представления секунд в днях и часах,
// соответствует ГОСТ ИСО 8601-2001.
//
// Параметры:
//  Секунды	 - Число - количество секунд.
// 
// Возвращаемое значение:
//  Строка - строка в формате [ДД (день,дня,дней) ][ЧЧ час ]
//
Функция ДниЧасы(Знач Секунды, ПустоеЗначение = "") Экспорт

	Если Секунды = Неопределено Или Секунды = null Или Секунды = 0 Тогда
		Возврат ПустоеЗначение;
	КонецЕсли;
	
	Если Секунды < 0 Тогда
		Секунды = -Секунды;
		ДЧМ = "- ";
	Иначе
		ДЧМ = "";
	КонецЕсли;
	
	Если Цел(Секунды/86400) >= 1 Тогда
		ДЧМ = ДЧМ + ЧислоЦифрамиПредметИсчисленияПрописью(Цел(Секунды/86400), ПредметИсчисленияДни(), "ЧЦ=15; ЧДЦ=; ЧГ=0") + " "
            + ?(Цел(Секунды/3600) - Цел(Секунды/86400)*24 > 0 Или Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0,
		        Формат(Цел(Секунды/3600) - Цел(Секунды/86400)*24,"ЧДЦ=; ЧН=0; ЧГ=0") +  " ч ","");   
	ИначеЕсли Цел(Секунды/3600) >= 1 Тогда
		ДЧМ = ДЧМ +  Формат(Цел(Секунды/3600),"ЧДЦ=0; ЧГ=0") + " ч "; 
	Иначе
		ДЧМ = НСтр("ru='меньше часа'");
	КонецЕсли;
	
	Возврат ДЧМ;
	
КонецФункции

// Возвращает строку представления секунд в часах и минутах,
// соответствует ГОСТ ИСО 8601-2001.
//
// Параметры:
//  Секунды	 - Число - количество секунд.
// 
// Возвращаемое значение:
//  Строка - строка в формате [ЧЧ час ]ММ м.
//
Функция ЧасыМинуты(Знач Секунды, ПустоеЗначение = "") Экспорт
	
	Если Секунды = Неопределено Или Секунды = null Или Секунды = 0 Тогда
		Возврат ПустоеЗначение;
	КонецЕсли;
	
	Если Секунды < 0 Тогда
		Секунды = -Секунды;
		ЧМ = "- ";
	Иначе
		ЧМ = "";
	КонецЕсли;
	
	Если Цел(Секунды/3600) >= 1 Тогда
		ЧМ = ЧМ +  Формат(Цел(Секунды/3600),"ЧДЦ=0; ЧГ=0") + " ч " 
           + ?(Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0, Формат(Цел(Секунды/60) - Цел(Секунды/3600)*60,"ЧДЦ=0; ЧГ=0") +  " мин","") 
	ИначеЕсли Цел(Секунды/60) - Цел(Секунды/3600)*60 > 0 Тогда
		ЧМ = ЧМ +  Формат(Цел(Секунды/60) - Цел(Секунды/3600)*60, "ЧДЦ=0; ЧГ=0") +  " мин"   
	Иначе
		ЧМ = НСтр("ru='меньше минуты'");
	КонецЕсли;
	
	Возврат ЧМ;
	
КонецФункции

// Возвращает строку представления секунд в часах,
// соответствует ГОСТ ИСО 8601-2001.
//
// Параметры:
//  Секунды	 - Число - количество секунд.
// 
// Возвращаемое значение:
//  Строка - строка в формате [ЧЧ час].
//
Функция Часы(Знач Секунды, ПустоеЗначение = "") Экспорт
	
	Если Секунды = Неопределено Или Секунды = null Или Секунды = 0 Тогда
		Возврат ПустоеЗначение;
	КонецЕсли;
	
	Если Секунды < 0 Тогда
		Секунды = -Секунды;
		ЧМ = "- ";
	Иначе
		ЧМ = "";
	КонецЕсли;
	
	Если Цел(Секунды/3600) >= 1 Тогда
		ЧМ = ЧМ +  Формат(Цел(Секунды/3600),"ЧДЦ=0; ЧГ=0") + " ч "; 
	Иначе
		ЧМ = НСтр("ru='меньше часа'");
	КонецЕсли;
	
	Возврат ЧМ;
	
КонецФункции

// Представление смещения времени в формате UTC{+/-}HH:mm.
//
// Параметры:
//  Секунды - Число - количество секунд для определения представления смещения.
// 
// Возвращаемое значение:
//  Строка - представление смещения.  
//
Функция ПредставлениеСмещенияВремени(Знач Секунды) Экспорт
	
	Если Секунды >= 0 Тогда
		Возврат СтрШаблон("UTC+%1", Формат('00010101' + Секунды, "ДФ=HH:mm"));
	Иначе
		Возврат СтрШаблон("UTC-%1", Формат('00010101' - Секунды, "ДФ=HH:mm"));
	КонецЕсли;
	
КонецФункции

// Возвращает представление исполнителя в зависимости от переданных параметров
//
// Параметры:
//  Организация - СправочникСсылка.ОбслуживающиеОрганизации. 
//  Линия       - СправочникСсылка.ЛинииПоддержки 
//  Исполнитель - СправочникСсылка.Пользователи, СправочникСсылка.ЛинииПоддержки 
// 
// Возвращаемое значение:
//  Строка - представление исполнителя.
//
Функция ОписаниеИсполнителя(Организация, Линия, Исполнитель) Экспорт
	
	Если Линия = Исполнитель Тогда
		ОтветственныйСтрокой = СтрШаблон("%1 (%2)", Линия, Организация);
	ИначеЕсли ЗначениеЗаполнено(Линия) Тогда
		ОтветственныйСтрокой = СтрШаблон("%1 (%2, %3)", Исполнитель, Организация, Линия);
    Иначе
		ОтветственныйСтрокой = СтрШаблон("%1 (%2)", Исполнитель, Организация);
	КонецЕсли;
	
	Возврат ОтветственныйСтрокой;
	
КонецФункции

// Если элемент формы существует, устанавливает его доступность.
//
// Параметры:
//  Форма       - УправляемаяФорма - форма, на которой устанавливается доступность элемента.
//  ИмяЭлемента - Строка - имя элемента формы
//  Доступность - Булево - устанавливаемый признак доступности
//
Процедура УстановитьДоступностьЭлементаФормы(Форма, ИмяЭлемента, Доступность) Экспорт
    
    ЭлементФормы = Форма.Элементы.Найти(ИмяЭлемента);
    Если ЭлементФормы <> Неопределено Тогда
        ЭлементФормы.Доступность = Доступность;
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти
