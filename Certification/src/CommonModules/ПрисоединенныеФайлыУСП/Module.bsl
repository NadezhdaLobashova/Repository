
#Область ПрограммныйИнтерфейс 

// Копирует присоединенный файл из Входящего электронного письма в Обращение.
// Параметры:
//	Источник - ДокументСсылка.ЭлектронноеПисьмоВходящее - входящее электронное письмо с файлами.
//	Приемник - ДокументСсылка.Обращение - обращение, к которому нужно присоединить файлы.
//
Процедура СкопироватьПрисоединенныеФайлыИзПисьмаВОбращение(Знач Источник, Знач Получатель) Экспорт
	
	СкопироватьФайлыИзОбъектаВОбъект(Источник, Получатель, Справочники.ОбращениеПрисоединенныеФайлы);
	
КонецПроцедуры

// Копирует присоединенный файл из Обращения в Ошибку, Пожелание или Консультацию.
//
Процедура СкопироватьПрисоединенныеФайлыИзОбращенияВКарточку(Знач Источник, Знач Получатель) Экспорт
	
	Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Ошибки") Тогда
		МенеджерХранилищаФайлов = Справочники.ОшибкиПрисоединенныеФайлы;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.Пожелания") Тогда
		МенеджерХранилищаФайлов = Справочники.ПожеланияПрисоединенныеФайлы;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.Консультации") Тогда
		МенеджерХранилищаФайлов = Справочники.КонсультацииПрисоединенныеФайлы;
	Иначе
		Возврат;
	КонецЕсли;
	
	СкопироватьФайлыИзОбъектаВОбъект(Источник, Получатель, МенеджерХранилищаФайлов);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура СкопироватьФайлыИзОбъектаВОбъект(Источник, Получатель, МенеджерОбъекта)
	
	ДоступнаЭлектроннаяПодпись = Неопределено;
	МодульЭлектроннаяПодписьСлужебный = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		МодульЭлектроннаяПодпись = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодпись");
		МодульЭлектроннаяПодписьСлужебный = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодписьСлужебный");
	КонецЕсли;
	
	КопируемыеФайлы = РаботаСФайламиСлужебный.ВсеПодчиненныеФайлы(Источник.Ссылка);
	Для Каждого КопируемыйФайл Из КопируемыеФайлы Цикл
		Если ДоступнаЭлектроннаяПодпись = Неопределено Тогда
			ДоступнаЭлектроннаяПодпись = (МодульЭлектроннаяПодписьСлужебный <> Неопределено) 
				И (МодульЭлектроннаяПодписьСлужебный.ДоступнаЭлектроннаяПодпись(ТипЗнч(КопируемыйФайл)));
		КонецЕсли;
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КопируемыйФайл, "ПометкаУдаления") Тогда
			Продолжить;
		КонецЕсли;
		НачатьТранзакцию();
		Попытка
			//МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(КопируемыйФайл);
			КопияФайлаИсточника = КопируемыйФайл.Скопировать();
			КопияФайла = МенеджерОбъекта.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(КопияФайла, КопияФайлаИсточника,, "Родитель, Владелец");
			КопияФайлаСсылка = МенеджерОбъекта.ПолучитьСсылку();
			КопияФайла.УстановитьСсылкуНового(КопияФайлаСсылка);
			КопияФайла.ВладелецФайла = Получатель.Ссылка;
			КопияФайла.Редактирует = Справочники.Пользователи.ПустаяСсылка();
			
			КопияФайла.ТекстХранилище = Новый ХранилищеЗначения(КопируемыйФайл.ТекстХранилище.Получить());
			КопияФайла.ФайлХранилище = Новый ХранилищеЗначения(КопируемыйФайл.ФайлХранилище.Получить());
			
			ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(КопируемыйФайл);
			КопияФайла.ТипХраненияФайла = РаботаСФайламиСлужебный.ТипХраненияФайлов();
			
			Если РаботаСФайламиСлужебный.ТипХраненияФайлов() = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
				РаботаСФайламиСлужебный.ЗаписатьФайлВИнформационнуюБазу(КопияФайлаСсылка, ДвоичныеДанные);
			Иначе
				// Добавить в один из томов (где есть свободное место).
				СведенияОФайле = РаботаСФайламиСлужебный.ДобавитьФайлВТом(ДвоичныеДанные, КопияФайла.ДатаМодификацииУниверсальная,
					КопияФайла.Наименование, КопияФайла.Расширение);
				КопияФайла.ПутьКФайлу = СведенияОФайле.ПутьКФайлу;
				КопияФайла.Том = СведенияОФайле.Том;
			КонецЕсли;
			КопияФайла.Записать();
			
			Если ДоступнаЭлектроннаяПодпись Тогда
				УстановленныеПодписи = МодульЭлектроннаяПодпись.УстановленныеПодписи(КопируемыйФайл);
				МодульЭлектроннаяПодпись.ДобавитьПодпись(КопияФайла.Ссылка, УстановленныеПодписи);
				
				СертификатыИсточника = МодульЭлектроннаяПодпись.СертификатыШифрования(КопируемыйФайл);
				МодульЭлектроннаяПодпись.ЗаписатьСертификатыШифрования(КопияФайла, СертификатыИсточника);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти 
