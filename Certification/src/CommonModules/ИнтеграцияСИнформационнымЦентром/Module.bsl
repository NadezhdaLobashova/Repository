////////////////////////////////////////////////////////////////////////////////
// Подсистема "Интеграция с информационным центром".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс
    
Функция ПространствоИмен_1_0_0_1() Экспорт 
	
	Возврат "http://www.1c.ru/1cFresh/InformationCenter/SupportServiceData/1.0.0.1";
	
КонецФункции

Функция КоличествоОбращенийВВыборке() Экспорт 
	
	Возврат 20;
	
КонецФункции

Функция КоличествоВзаимодействийВВыборке() Экспорт
	
	Возврат 20;
	
КонецФункции

Функция СписокОбращенийПоПользователю(Знач ПользовательСервиса, Знач Отбор, Знач Сортировка, Знач РазмерВыборки, Знач НомерСтраницы) Экспорт
	
	Если ПользовательСервиса.Пустая() Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Если НомерСтраницы <= 0 Тогда 
		ВызватьИсключение НСтр("ru = 'Номер страницы не может быть отрицательным'");
	КонецЕсли;
	
	РазмерОбщейВыборки = НомерСтраницы * РазмерВыборки + 1;
	Если Отбор = "InProgress" Тогда 
		ТекстОсновногоЗапроса = ТекстЗапросаОбращенияВРаботе(Сортировка, РазмерОбщейВыборки);
	ИначеЕсли Отбор = "NeedAnswer" Тогда 
		ТекстОсновногоЗапроса = ТекстЗапросаОбращенияНуженОтвет(Сортировка, РазмерВыборки)
	Иначе
		ТекстОсновногоЗапроса = ТекстЗапросаОбращенияПоСостоянию(Сортировка, Отбор, РазмерОбщейВыборки);
	КонецЕсли;
	
	ТекстВспомогательногоЗапроса = ТекстВспомогательногоЗапросаПоОбращениям();
	
	Запрос = Новый Запрос(ТекстОсновногоЗапроса + ТекстВспомогательногоЗапроса);
	Запрос.УстановитьПараметр("ПользовательСервиса", ПользовательСервиса);
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаСОбращениями = РезультатЗапроса.Выгрузить();
	
	НачалоВыборки = (НомерСтраницы - 1) * РазмерВыборки;
	МассивСтрокТаблицы = Новый Массив;
	Для Итерация = НачалоВыборки По ТаблицаСОбращениями.Количество() - 1 Цикл 
		МассивСтрокТаблицы.Добавить(ТаблицаСОбращениями.Получить(Итерация));
	КонецЦикла;
	
	СокращеннаяТаблицаСОбращениями = ТаблицаСОбращениями.Скопировать(МассивСтрокТаблицы);
	
	Возврат СокращеннаяТаблицаСОбращениями;
	
КонецФункции

Функция СписокВзаимодействийПоОбращению(Знач Обращение, Знач ПользовательСервиса, Знач РазмерПорции, Знач НомерСтраницы) Экспорт
	
	Если Обращение.Пустая() Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Если НомерСтраницы <= 0 Тогда 
		ВызватьИсключение НСтр("ru = 'Номер страницы не может быть отрицательным'");
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	НепросмотренныеДанныеИнициатором.Объект КАК Объект
		|ПОМЕСТИТЬ НеПросмотренныеДанные
		|ИЗ
		|	РегистрСведений.НепросмотренныеДанныеИнициатором КАК НепросмотренныеДанныеИнициатором
		|ГДЕ
		|	НепросмотренныеДанныеИнициатором.ПользовательСервиса = &ПользовательСервиса
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	ПредметыПапкиВзаимодействий.Взаимодействие КАК Ссылка,
		|	ПредметыПапкиВзаимодействий.Взаимодействие.Тема КАК Тема,
		|	ВЫБОР
		|		КОГДА НеПросмотренныеДанные.Объект ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Просмотрено,
		|	ВЫБОР
		|		КОГДА ПредметыПапкиВзаимодействий.Взаимодействие ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
		|			ТОГДА ПредметыПапкиВзаимодействий.Взаимодействие.ДатаПолучения
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПредметыПапкиВзаимодействий.Взаимодействие ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
		|					ТОГДА ПредметыПапкиВзаимодействий.Взаимодействие.ДатаОтправления
		|				ИНАЧЕ ПредметыПапкиВзаимодействий.Взаимодействие.Дата
		|			КОНЕЦ
		|	КОНЕЦ КАК Дата
		|ИЗ
		|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
		|		ЛЕВОЕ СОЕДИНЕНИЕ НеПросмотренныеДанные КАК НеПросмотренныеДанные
		|		ПО ПредметыПапкиВзаимодействий.Взаимодействие = НеПросмотренныеДанные.Объект
		|ГДЕ
		|	ПредметыПапкиВзаимодействий.Предмет = &Обращение
		|	И НЕ ПредметыПапкиВзаимодействий.НеПоказыватьПользователю
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	
	КоличествоВзаимодействийВВыборке = РазмерПорции*НомерСтраницы + 1;
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, Формат(КоличествоВзаимодействийВВыборке,"ЧГ=0"));
	
	// Выполнение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Обращение", Обращение);
	Запрос.УстановитьПараметр("ПользовательСервиса", ПользовательСервиса);
	Запрос.Текст = ТекстЗапроса;
	ТаблицаСВзаимодействиями = Запрос.Выполнить().Выгрузить();
	
	НачалоВыборки = (НомерСтраницы - 1) * РазмерПорции;
	МассивСтрокТаблицы = Новый Массив;
	Для Итерация = НачалоВыборки По ТаблицаСВзаимодействиями.Количество() - 1 Цикл 
		МассивСтрокТаблицы.Добавить(ТаблицаСВзаимодействиями.Получить(Итерация));
	КонецЦикла;
	
	СокращеннаяТаблицаСВзаимодействиями = ТаблицаСВзаимодействиями.Скопировать(МассивСтрокТаблицы);
	
	Возврат СокращеннаяТаблицаСВзаимодействиями;
	
КонецФункции

// Возвращает имя события журнала регистрации.
//
// Возвращаемое значение:
//	Строка - имя события.
//
Функция СобытиеЖурналаРегистрации() Экспорт
	
	Возврат НСтр("ru = 'Интеграция с информационным центром.'");
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
    
Функция ТекстЗапросаОбращенияПоСостоянию(Сортировка, Отбор, РазмерВыборки)
	
	Если Сортировка = "LastInteractionDate" Тогда 
		ИмяМетаданных = "РегистрСведений.СостоянияОбращений";
		ИмяПоляСОбращением = "Обращение";
		ИмяПоляСДатой = "ДатаПоследнегоВзаимодействия";
	ИначеЕсли Сортировка = "CreateDate" Тогда 
		ИмяМетаданных = "Документ.Обращение";
		ИмяПоляСОбращением = "Ссылка";
		ИмяПоляСДатой = "Дата";
	КонецЕсли;
	
	Если Отбор = "All" Тогда 
		ТекстОтбора = ""
	ИначеЕсли Отбор = "Closed" Тогда
		ТекстОтбора = "И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.Закрыто)"
	ИначеЕсли Отбор = "NeedAnswer" Тогда
		ТекстОтбора = "И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.ОжиданиеИнициатора)"
	ИначеЕсли Отбор = "New" Тогда
		ТекстОтбора = "И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.Новое)"
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ %1
		|	ТаблицаОбращений.%3 КАК Обращение,
		|	ТаблицаОбращений.%4 КАК ДатаСортировки
		|ПОМЕСТИТЬ ОбращенияВТ
		|ИЗ
		|	%2 КАК ТаблицаОбращений
		|ГДЕ
		|	ТаблицаОбращений.%3.Инициатор = &ПользовательСервиса
		|	И НЕ ТаблицаОбращений.%3.ПометкаУдаления
		|	%5
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Обращение,
		|	ДатаСортировки
		|;";
	
	ТекстОтбора = СтрЗаменить(ТекстОтбора, "%3", ИмяПоляСОбращением);
	
	Возврат СтрШаблон(ТекстЗапроса, Строка(РазмерВыборки), ИмяМетаданных, ИмяПоляСОбращением, ИмяПоляСДатой, ТекстОтбора);
	
КонецФункции

Функция ТекстЗапросаОбращенияВРаботе(Сортировка, РазмерВыборки)
	
	Если Сортировка = "LastInteractionDate" Тогда 
		ИмяМетаданных = "РегистрСведений.СостоянияОбращений";
		ИмяПоляСОбращением = "Обращение";
		ИмяПоляСДатой = "ДатаПоследнегоВзаимодействия";
	ИначеЕсли Сортировка = "CreateDate" Тогда 
		ИмяМетаданных = "Документ.Обращение";
		ИмяПоляСОбращением = "Ссылка";
		ИмяПоляСДатой = "Дата";
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ %1
		|	ТаблицаОбращений.%3 КАК Обращение,
		|	ТаблицаОбращений.%4 КАК ДатаСортировки
		|ПОМЕСТИТЬ ПерваяТаблица
		|ИЗ
		|	%2 КАК ТаблицаОбращений
		|ГДЕ
		|	ТаблицаОбращений.%3.Инициатор = &ПользовательСервиса
		|	И НЕ ТаблицаОбращений.%3.ПометкаУдаления
		|	И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.Расследование)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	ТаблицаОбращений.%3 КАК Обращение,
		|	ТаблицаОбращений.%4 КАК ДатаСортировки
		|ПОМЕСТИТЬ ВтораяТаблица
		|ИЗ
		|	%2 КАК ТаблицаОбращений
		|ГДЕ
		|	ТаблицаОбращений.%3.Инициатор = &ПользовательСервиса
		|	И НЕ ТаблицаОбращений.%3.ПометкаУдаления
		|	И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.Исправление)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|
		|ВЫБРАТЬ
		|	ПерваяТаблица.Обращение КАК Обращение,
		|	ПерваяТаблица.ДатаСортировки КАК ДатаСортировки
		|ПОМЕСТИТЬ БезОграниченияВыборки 
		|ИЗ
		|	ПерваяТаблица КАК ПерваяТаблица
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВтораяТаблица.Обращение КАК Обращение,
		|	ВтораяТаблица.ДатаСортировки КАК ДатаСортировки
		|ИЗ
		|	ВтораяТаблица КАК ВтораяТаблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	БезОграниченияВыборки.Обращение КАК Обращение,
		|	БезОграниченияВыборки.ДатаСортировки КАК ДатаСортировки
		|ПОМЕСТИТЬ ОбращенияВТ
		|ИЗ
		|	БезОграниченияВыборки КАК БезОграниченияВыборки 
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|;";
		
	Возврат СтрШаблон(ТекстЗапроса, Строка(РазмерВыборки), ИмяМетаданных, ИмяПоляСОбращением, ИмяПоляСДатой);
	
КонецФункции

Функция ТекстЗапросаОбращенияНуженОтвет(Сортировка, РазмерВыборки)
	
	Если Сортировка = "LastInteractionDate" Тогда 
		ИмяМетаданных = "РегистрСведений.СостоянияОбращений";
		ИмяПоляСОбращением = "Обращение";
		ИмяПоляСДатой = "ДатаПоследнегоВзаимодействия";
	ИначеЕсли Сортировка = "CreateDate" Тогда 
		ИмяМетаданных = "Документ.Обращение";
		ИмяПоляСОбращением = "Ссылка";
		ИмяПоляСДатой = "Дата";
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	НепросмотренныеДанныеИнициатором.Объект КАК Взаимодействие
		|ПОМЕСТИТЬ НепросмотренныеВзаимодействия
		|ИЗ
		|	РегистрСведений.НепросмотренныеДанныеИнициатором КАК НепросмотренныеДанныеИнициатором
		|ГДЕ
		|	НепросмотренныеДанныеИнициатором.ПользовательСервиса = &ПользовательСервиса
		|	И НЕ НепросмотренныеДанныеИнициатором.Объект.ПометкаУдаления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НепросмотренныеДанныеИнициатором.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПредметыПапкиВзаимодействий.Предмет КАК Обращение
		|ПОМЕСТИТЬ ОбращенияСНеПросмотреннымиВзаимодействиями
		|ИЗ
		|	НепросмотренныеВзаимодействия КАК НепросмотренныеВзаимодействия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
		|		ПО НепросмотренныеВзаимодействия.Взаимодействие = ПредметыПапкиВзаимодействий.Взаимодействие
		|ГДЕ
		|	ПредметыПапкиВзаимодействий.Предмет ССЫЛКА Документ.Обращение
		|	И НЕ ПредметыПапкиВзаимодействий.Предмет.ПометкаУдаления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Обращение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	ТаблицаОбращений.%3 КАК Обращение,
		|	ТаблицаОбращений.%4 КАК ДатаСортировки
		|ПОМЕСТИТЬ ПерваяТаблица
		|ИЗ
		|	ОбращенияСНеПросмотреннымиВзаимодействиями КАК ОбращенияСНеПросмотреннымиВзаимодействиями
		|		ЛЕВОЕ СОЕДИНЕНИЕ %2 КАК ТаблицаОбращений
		|		ПО ОбращенияСНеПросмотреннымиВзаимодействиями.Обращение = ТаблицаОбращений.%3
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	ТаблицаОбращений.%3 КАК Обращение,
		|	ТаблицаОбращений.%4 КАК ДатаСортировки
		|ПОМЕСТИТЬ ВтораяТаблица
		|ИЗ
		|	%2 КАК ТаблицаОбращений
		|ГДЕ
		|	ТаблицаОбращений.%3.Инициатор = &ПользовательСервиса
		|	И НЕ ТаблицаОбращений.%3.ПометкаУдаления
		|	И ТаблицаОбращений.%3.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОбращений.ОжиданиеИнициатора)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|
		|ВЫБРАТЬ
		|	ПерваяТаблица.Обращение КАК Обращение,
		|	ПерваяТаблица.ДатаСортировки КАК ДатаСортировки
		|ПОМЕСТИТЬ БезОграниченияВыборки 
		|ИЗ
		|	ПерваяТаблица КАК ПерваяТаблица
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВтораяТаблица.Обращение КАК Обращение,
		|	ВтораяТаблица.ДатаСортировки КАК ДатаСортировки
		|ИЗ
		|	ВтораяТаблица КАК ВтораяТаблица
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаСортировки
		|;
		|
		|ВЫБРАТЬ ПЕРВЫЕ %1
		|	БезОграниченияВыборки.Обращение КАК Обращение,
		|	БезОграниченияВыборки.ДатаСортировки КАК ДатаСортировки
		|ПОМЕСТИТЬ ОбращенияВТ
		|ИЗ
		|	БезОграниченияВыборки КАК БезОграниченияВыборки 
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ
		|;";
	
	Возврат СтрШаблон(ТекстЗапроса, Строка(РазмерВыборки), ИмяМетаданных, ИмяПоляСОбращением, ИмяПоляСДатой);
	
КонецФункции

Функция ТекстВспомогательногоЗапросаПоОбращениям()
	
	Возврат 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПредметыПапкиВзаимодействий.Предмет КАК Предмет
		|ПОМЕСТИТЬ НеПросмотренныеДанные
		|ИЗ
		|	РегистрСведений.НепросмотренныеДанныеИнициатором КАК НепросмотренныеДанныеИнициатором
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
		|		ПО НепросмотренныеДанныеИнициатором.Объект = ПредметыПапкиВзаимодействий.Взаимодействие
		|ГДЕ
		|	НепросмотренныеДанныеИнициатором.ПользовательСервиса = &ПользовательСервиса
		|	И НЕ НепросмотренныеДанныеИнициатором.Объект.ПометкаУдаления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Предмет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбращенияВТ.Обращение КАК Ссылка,
		|	ОбращенияВТ.Обращение.Состояние КАК Состояние,
		|	ОбращенияВТ.Обращение.Тема КАК Тема,
		|	ОбращенияВТ.Обращение.Дата КАК Дата,
		|	ОбращенияВТ.Обращение.Инициатор КАК Инициатор,
		|	ОбращенияВТ.Обращение.НомерСокращенный КАК НомерСокращенный,
		|	ВЫБОР
		|		КОГДА НеПросмотренныеДанные.Предмет ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьНепросмотренныеВзаимодействия,
		|	ОбращенияВТ.ДатаСортировки КАК ДатаСортировки
		|ИЗ
		|	ОбращенияВТ КАК ОбращенияВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ НеПросмотренныеДанные КАК НеПросмотренныеДанные
		|		ПО ОбращенияВТ.Обращение = НеПросмотренныеДанные.Предмет
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСортировки УБЫВ";
	
КонецФункции

#КонецОбласти 
