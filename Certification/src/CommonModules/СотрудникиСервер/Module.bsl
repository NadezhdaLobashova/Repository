//Возвращает текущую ставку сотрудника
Функция ТекущаяСтавкаСотрудникаДолжностьПодразделение(Сотрудник,ДатаСреза,ОсновнаяСтатья) Экспорт
	СтруктураВозрата = Новый Структура("Должность, Подразделение, Ставка, Оклад");
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник,
	                      |	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТ_МаксПоКадровойИстории
	                      |ИЗ
	                      |	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаСреза, ) КАК КадроваяИсторияСрезПоследних
	                      |ГДЕ
	                      |	КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
	                      |	И КадроваяИсторияСрезПоследних.Сотрудник = &Сотрудник
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КадроваяИсторияСрезПоследних.Сотрудник
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВТ_МаксПоКадровойИстории.Сотрудник КАК Сотрудник,
	                      |	КадроваяИстория.Подразделение КАК Подразделение,
	                      |	КадроваяИстория.Должность КАК Должность,
	                      |	КадроваяИстория.Регион
	                      |ПОМЕСТИТЬ ВТ_КадроваяИстория
	                      |ИЗ
	                      |	ВТ_МаксПоКадровойИстории КАК ВТ_МаксПоКадровойИстории
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
	                      |		ПО ВТ_МаксПоКадровойИстории.Сотрудник = КадроваяИстория.Сотрудник
	                      |			И ВТ_МаксПоКадровойИстории.Период = КадроваяИстория.Период
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение КАК Подразделение,
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность КАК Должность,
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регион,
	                      |	МАКСИМУМ(СтавкиСотрудниковПоВидамРаботСрезПоследних.Ставка) КАК Ставка,
	                      |	МАКСИМУМ(СтавкиСотрудниковПоВидамРаботСрезПоследних.Оклад) КАК Оклад
	                      |ПОМЕСТИТЬ ВТ_МаксПоСтавкам
	                      |ИЗ
	                      |	РегистрСведений.СтавкиСотрудниковПоВидамРабот.СрезПоследних(&ДатаСреза, ) КАК СтавкиСотрудниковПоВидамРаботСрезПоследних
	                      |ГДЕ
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.ВидРаботы.ОсновнаяСтатья = &ОсновнаяСтатья
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение,
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность,
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регион
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	                      |	Пользователи.Ссылка КАК Сотрудник,
	                      |	ВТ_КадроваяИстория.Должность КАК Должность,
	                      |	ВТ_КадроваяИстория.Подразделение КАК Подразделение,
	                      |	ВТ_МаксПоСтавкам.Ставка КАК Ставка,
	                      |	ВТ_МаксПоСтавкам.Оклад КАК Оклад
	                      |ИЗ
	                      |	Справочник.Пользователи КАК Пользователи
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадроваяИстория КАК ВТ_КадроваяИстория
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаксПоСтавкам КАК ВТ_МаксПоСтавкам
	                      |			ПО ВТ_КадроваяИстория.Подразделение = ВТ_МаксПоСтавкам.Подразделение
	                      |				И ВТ_КадроваяИстория.Должность = ВТ_МаксПоСтавкам.Должность
	                      |				И ВТ_КадроваяИстория.Регион = ВТ_МаксПоСтавкам.Регион
	                      |		ПО Пользователи.Ссылка = ВТ_КадроваяИстория.Сотрудник
	                      |ГДЕ
	                      |	Пользователи.Ссылка = &Сотрудник");
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ОсновнаяСтатья",ОсновнаяСтатья);
	Запрос.УстановитьПараметр("ДатаСреза",КонецДня(ДатаСреза));
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураВозрата
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВозрата,Выборка);
	Возврат СтруктураВозрата						  
КонецФункции	
 
Функция ТекущаяСтавкаСотрудникаДолжностьПодразделениеПоВидамРабот(Сотрудник, ДатаСреза, ВидРаботы, Часов, ДатаДокумента) Экспорт
	СтруктураВозрата = Новый Структура("Должность, Подразделение, Ставка, Оклад, Сумма");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник,
	                      |	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТ_МаксПоДолжности
	                      |ИЗ
	                      |	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК КадроваяИсторияСрезПоследних
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КадроваяИсторияСрезПоследних.Сотрудник
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_МаксПоДолжности.Сотрудник КАК Сотрудник,
	                      |	КадроваяИстория.Подразделение КАК Подразделение,
	                      |	КадроваяИстория.Должность КАК Должность,
	                      |	КадроваяИстория.Регион КАК Регион
	                      |ПОМЕСТИТЬ ВТ_Должность
	                      |ИЗ
	                      |	ВТ_МаксПоДолжности КАК ВТ_МаксПоДолжности
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
	                      |		ПО ВТ_МаксПоДолжности.Сотрудник = КадроваяИстория.Сотрудник
	                      |			И ВТ_МаксПоДолжности.Период = КадроваяИстория.Период
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ОкладыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	                      |	ОкладыСотрудниковСрезПоследних.Оклад КАК Оклад
	                      |ПОМЕСТИТЬ втОклады
	                      |ИЗ
	                      |	РегистрСведений.ОкладыСотрудников.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК ОкладыСотрудниковСрезПоследних
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регистратор КАК Регистратор,
	                      |	МАКСИМУМ(СтавкиСотрудниковПоВидамРаботСрезПоследних.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТ_МаскПоСтавке
	                      |ИЗ
	                      |	ВТ_Должность КАК ВТ_Должность
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиСотрудниковПоВидамРабот.СрезПоследних(&ДатаСреза, ) КАК СтавкиСотрудниковПоВидамРаботСрезПоследних
	                      |		ПО ВТ_Должность.Подразделение = СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение
	                      |			И ВТ_Должность.Должность = СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность
	                      |ГДЕ
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.ВидРаботы = &ВидРаботы
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регистратор
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СтавкиСотрудниковПоВидамРабот.Подразделение КАК Подразделение,
	                      |	СтавкиСотрудниковПоВидамРабот.Должность КАК Должность,
	                      |	СтавкиСотрудниковПоВидамРабот.Регион КАК Регион,
	                      |	СтавкиСотрудниковПоВидамРабот.Ставка КАК Ставка,
	                      |	СтавкиСотрудниковПоВидамРабот.Оклад КАК Оклад,
	                      |	СтавкиСотрудниковПоВидамРабот.ВидРаботы КАК ВидРаботы
	                      |ПОМЕСТИТЬ ВТ_Ставки
	                      |ИЗ
	                      |	ВТ_МаскПоСтавке КАК ВТ_МаскПоСтавке
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиСотрудниковПоВидамРабот КАК СтавкиСотрудниковПоВидамРабот
	                      |		ПО ВТ_МаскПоСтавке.Регистратор = СтавкиСотрудниковПоВидамРабот.Регистратор
	                      |			И ВТ_МаскПоСтавке.Период = СтавкиСотрудниковПоВидамРабот.Период
	                      |ГДЕ
	                      |	СтавкиСотрудниковПоВидамРабот.ВидРаботы = &ВидРаботы
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВТ_Ставки.Ставка КАК Ставка,
	                      |	ВТ_Ставки.Должность КАК Должность,
	                      |	ВТ_Ставки.Подразделение КАК Подразделение,
	                      |	втОклады.Оклад КАК Оклад,
	                      |	ВЫБОР
	                      |		КОГДА &ВидРаботыПоОкладу
	                      |			ТОГДА ЕСТЬNULL(втОклады.Оклад, 0) / &НормаЧасов * ЕСТЬNULL(&Часов, 0)
	                      |		ИНАЧЕ (ЕСТЬNULL(ВТ_Ставки.Ставка, 0) * ЕСТЬNULL(&Часов, 0) + ЕСТЬNULL(ВТ_Ставки.Оклад, 0) * ЕСТЬNULL(&Часов, 0) / &НормаЧасов) * &Коэффициент
	                      |	КОНЕЦ КАК Сумма
	                      |ИЗ
	                      |	ВТ_Должность КАК ВТ_Должность
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ставки КАК ВТ_Ставки
	                      |		ПО ВТ_Должность.Подразделение = ВТ_Ставки.Подразделение
	                      |			И ВТ_Должность.Должность = ВТ_Ставки.Должность
	                      |			И ВТ_Должность.Регион = ВТ_Ставки.Регион
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ втОклады КАК втОклады
	                      |		ПО (ИСТИНА)");
	Запрос.УстановитьПараметр("ДатаСреза" , ДатаСреза);
	Запрос.УстановитьПараметр("Часов"     , Часов);
	Запрос.УстановитьПараметр("Сотрудник" , Сотрудник);
	Запрос.УстановитьПараметр("НормаЧасов", СотрудникиСервер.ПолучитьНормуЧасовВПериоде(НачалоМесяца(ДатаДокумента),КонецМесяца(ДатаДокумента)));
	Запрос.УстановитьПараметр("Коэффициент"  , 1);
	Запрос.УстановитьПараметр("ВидРаботы" , ВидРаботы.ВидыРабот);
	Запрос.УстановитьПараметр("ВидРаботыПоОкладу" , ВидРаботы.ВидРаботы = Перечисления.ВидыРабот.ОкладнаяРабота);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураВозрата
	КонецЕсли;
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВозрата,Выборка);
	Возврат СтруктураВозрата						  
КонецФункции

Функция ПолучитьНормуЧасовВПериоде(ДатаНачала,ДатаОкончания) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПраздничныеВыходныеДни.Дата) КАК КолвоДней
	                      |ИЗ
	                      |	РегистрСведений.ПраздничныеВыходныеДни КАК ПраздничныеВыходныеДни
	                      |ГДЕ
	                      |	ПраздничныеВыходныеДни.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейКалендаря.Рабочий)
	                      |	И ПраздничныеВыходныеДни.Дата <= &ДатаОкончания
	                      |	И ПраздничныеВыходныеДни.Дата >= &ДатаНачала");
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	Результат = Запрос.Выполнить().Выгрузить();
	Если НЕ Результат.Количество()=0 Тогда
		Возврат Результат[0].КолвоДней * 8
	КонецЕсли;
	Возврат 0
КонецФункции

Функция ПолучитьРольТекущегоСотрудника() Экспорт
	Возврат ?(РольДоступна("Координатор") и НЕ РольДоступна("ПолныеПрава"),Истина,Ложь)
КонецФункции	

Функция ПолучитьТекущегоСотрудника() Экспорт
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции	