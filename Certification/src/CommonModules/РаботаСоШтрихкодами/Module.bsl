
// Функция генерирует значение штрихкода (сам код) для переданного объекта
//
//   00 - код организации
//   00 - 2 цифры года даты
//   00 - код вида документа
//   000000 - номер без префиксов
Функция ПолучитьЗначениеШтрихкода(Объект) Экспорт
	
	Результат = "000000000000";
	
	// Надо бы вынести куда-то в предприятие эти настройки в виде табличек (ТабДок)
	
	КодыВидовДокументов = Новый Соответствие;
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.РеализацияТоваровУслуг"),	"01");
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.СчетФактураВыданный"),		"02");
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.ЗаказПокупателя"),			"03");
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.СчетНаОплатуПокупателю"),	"04");
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.франЛистУчетаРабочегоВремени"),	"05");
	КодыВидовДокументов.Вставить(Тип("ДокументОбъект.ЗаданиеНаДоставкуИТС"),	"06");
	// 07 приглашение на секцию мероприятия
	// 08 анкета участника секции мероприятия

	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.РеализацияТоваровУслуг"),	"01");
	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.СчетФактураВыданный"),		"02");
	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.ЗаказПокупателя"),			"03");
	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.СчетНаОплатуПокупателю"),	"04");
	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.франЛистУчетаРабочегоВремени"),	"05");
	КодыВидовДокументов.Вставить(Тип("ДокументСсылка.ЗаданиеНаДоставкуИТС"),	"06");
	// 07 приглашение на секцию мероприятия
	// 08 анкета участника секции мероприятия
	
	ВидДокумента = КодыВидовДокументов.Получить(ТипЗнч(Объект));
	Если ВидДокумента = Неопределено Тогда
		Сообщить("Тип объекта не поддерживается для генерации штрих-кода");
		Возврат Результат;
	КонецЕсли;
	
	// ааааа... исправить! - исправлено на поиск по коду 07092016 Shadav
	КодыОрганизаций = Новый Соответствие;
	//КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоНаименованию("ООО ""1С-Рарус Новосибирск"""),		"01");
	КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоКоду("000000001"),		"01");	
	//КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоНаименованию("ООО ""ВЦ 1С-Рарус Новосибирск"""),	"02");
	КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоКоду("У00000001"),	"02");
	//КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоНаименованию("ООО ""ПО 1С-Рарус Новосибирск"""),	"03");
	КодыОрганизаций.Вставить(Справочники.Организации.НайтиПоКоду("У00000002"),	"03");	
	
	КодОрганизации = КодыОрганизаций.Получить(Объект.Организация);
	Если КодОрганизации = Неопределено Тогда
		Сообщить("Для организации " + Объект.Организация + " не задан код штрих-кодирования");
		Возврат Результат;
	КонецЕсли;
	
	Номер = ОбщегоНазначения.ПолучитьНомерНаПечать(Объект);
	Номер = Прав(Номер, 6);
	Пока СтрДлина(Номер) < 6 Цикл
		Номер = "0" + Номер;
	КонецЦикла;

	Результат = КодОрганизации + Формат(Объект.Дата, "ДФ=гг; ДП=50") + ВидДокумента + Номер;
	
	Возврат Результат;

КонецФункции

// Функция получает ссылку на объект база данных по штрих-коду
//
//   00 - код организации
//   00 - 2 цифры года даты
//   00 - код вида документа
//   000000 - номер без префиксов
Функция ПолучитьСсылкуПоШтрихкоду(Штрихкод) Экспорт
	
	//Сообщить("Получен ШК: " + Штрихкод);

	// почему-то лидирующий ноль в ШК со сканера не приходит (не положено по стандарту?)
	// поэтому если длина меньше 13, то добавим "0"
	Если СтрДлина(Штрихкод) = 12 Тогда
		Штрихкод = "0" + Штрихкод;
	КонецЕсли;
	
	КодОрганизации = Лев(Штрихкод, 2);
	ЦифрыГода = Сред(Штрихкод, 3, 2);
	КодВидаДокумента = Сред(Штрихкод, 5, 2);
	НомерДокумента = Сред(Штрихкод, 7, 6);
	
	КодыОрганизаций = Новый Соответствие;
	//КодыОрганизаций.Вставить("01", Справочники.Организации.НайтиПоНаименованию("ООО ""1С-Рарус Новосибирск"""));
	КодыОрганизаций.Вставить("01", Справочники.Организации.НайтиПоКоду("000000001"));
	//КодыОрганизаций.Вставить("02", Справочники.Организации.НайтиПоНаименованию("ООО ""ВЦ 1С-Рарус Новосибирск"""));
	КодыОрганизаций.Вставить("02", Справочники.Организации.НайтиПоКоду("У00000001"));
	//КодыОрганизаций.Вставить("03", Справочники.Организации.НайтиПоНаименованию("ООО ""ПО 1С-Рарус Новосибирск"""));
	КодыОрганизаций.Вставить("03", Справочники.Организации.НайтиПоКоду("У00000002"));

	Организация = КодыОрганизаций.Получить(КодОрганизации);
	Если Организация = Неопределено Тогда
		Сообщить("Для кода " + КодОрганизации + " не задано соответствие организации");
		Возврат Неопределено;
	КонецЕсли;

	КодыВидовДокументов = Новый Соответствие;
	КодыВидовДокументов.Вставить("01", "РеализацияТоваровУслуг");
	КодыВидовДокументов.Вставить("02", "СчетФактураВыданный");
	КодыВидовДокументов.Вставить("03", "ЗаказПокупателя");
	КодыВидовДокументов.Вставить("04", "СчетНаОплатуПокупателю");
	КодыВидовДокументов.Вставить("05", "франЛистУчетаРабочегоВремени");
	КодыВидовДокументов.Вставить("06", "ЗаданиеНаДоставкуИТС");
	
	ВидДокумента = КодыВидовДокументов.Получить(КодВидаДокумента);
	Если ВидДокумента = Неопределено Тогда
		Сообщить("Для кода " + КодВидаДокумента + " не задано соответствие виду документа");
		Возврат Неопределено;
	КонецЕсли;
	
	ГодДокумента = 2000 + Число(ЦифрыГода);
	НомерДокумента = "%" + НомерДокумента;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГодДокумента", ГодДокумента);
	Запрос.УстановитьПараметр("НомерДокумента", НомерДокумента);
	Запрос.Текст = "ВЫБРАТЬ Первые 1 Ссылка ИЗ Документ." + ВидДокумента + " ГДЕ Год(Дата) = &ГодДокумента И Организация = &Организация И Номер ПОДОБНО &НомерДокумента";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Комментарий = "Не найден объект базы данных, соответствующий штрихкоду: " + Штрихкод;
		Сообщить(Комментарий);
		
		Комментарий = Комментарий + Символы.ПС + "ВидДокумента = " + ВидДокумента;
		Комментарий = Комментарий + Символы.ПС + "ЦифрыГода = " + ЦифрыГода;
		Комментарий = Комментарий + Символы.ПС + "НомерДокумента ~ " + НомерДокумента;
		ЗаписьЖурналаРегистрации("Штрихкоды", УровеньЖурналаРегистрации.Ошибка, , , Комментарий);
		Возврат Неопределено;
	КонецЕсли;

КонецФункции


/////////////////////////////////////////////////////////////////////////

// Процедура формирует картинки штрих-кодов для области табличного документа
//
Процедура УстановитьКартинкиШтрихкодов(ОбластьМакета, ЗначениеШтрихкода) Экспорт

	Если НЕ ЗначениеЗаполнено(ЗначениеШтрихкода) Тогда
		//Сообщить("Ошибка формирования значения штрихкода для " + СсылкаНаОбъект);
		//ВызватьИсключение НСтр("ru = 'Ошибка формирования значения штрихкода!'");
		Возврат; //Неопределено;
	КонецЕсли;
	
	ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	Если ВнешняяКомпонента = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка подключения компоненты печати штрихкода!'");
		Возврат;
	КонецЕсли;

	КартинкаШК = ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ЗначениеШтрихкода, 1, 80, 350);
	Для Каждого Рисунок Из ОбластьМакета.Рисунки Цикл
		Если НРег(Лев(Рисунок.Имя, 8)) = "штрихкод" Тогда
			Рисунок.Картинка = КартинкаШК;
			Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии); 
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения всех ШК в табличном документе по ссылке на документ
//
Процедура ЗаполнитьШтрихкоды(ТабличныйДокумент, Ссылка) Экспорт
	
	ЗначениеШтрихкода = РаботаСоШтрихкодами.ПолучитьЗначениеШтрихкода(Ссылка);
	РаботаСоШтрихкодами.УстановитьКартинкиШтрихкодов(ТабличныйДокумент, ЗначениеШтрихкода);

КонецПроцедуры

               
/////////////////////////////////////////////////////////////////////////

// Функция выполняет подключение внешней компоненты и ее первоначальную настройку.
// 
// Параметры: 
//  Нет 
// 
// Возвращаемое значение: 
//  Картинка - Картинка со сформированным штрихкодом или НЕОПРЕДЕЛЕНО
Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода() Экспорт
	
	// В зависимости от типа платформы подключим соответствующую внешнюю компоненту
	ПодключениеВыполнено = Неопределено;
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовLinux32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	Иначе
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовLinux64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	КонецЕсли;
	                        
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	Иначе
		
		// Установим основные параметры компоненты
		
		// Если в системе установлен шрифт Tahoma
		Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
			// Выбираем его как шрифт для формирования картинки
			ВнешняяКомпонента.Шрифт = "Tahoma";
		Иначе
			
			// Шрифт Tahoma в системе отсутствует
			// Обойдем все доступные компоненте шрифты
			Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
				// Получим очередной шрифт, доступный компоненте
				ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
				// Если шрифт доступен
				Если ТекущийШрифт <> Неопределено Тогда
					// Они и будет шрифтом для формирования штри-кода
					ВнешняяКомпонента.Шрифт = ТекущийШрифт;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Утановим размер шрифта
		ВнешняяКомпонента.РазмерШрифта = 12;
		
		Возврат ВнешняяКомпонента;
		
	КонецЕсли;
	
КонецФункции

// Функция выполняет формирование изображения штрихкода.
// 
// Параметры: 
//  Нет 
// 
// Возвращаемое значение: 
//  Картинка - Картинка со сформированным штрихкодом или НЕОПРЕДЕЛЕНО
Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Штрихкод, ТипКода, Высота = 0, Ширина = 0) Экспорт
	
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина = Окр(Ширина);
	ВнешняяКомпонента.Высота = Окр(Высота);
	
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = Ложь;
	ВнешняяКомпонента.ТипКода = ТипКода;
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	ВнешняяКомпонента.ОтображатьТекст = Истина;
	ВнешняяКомпонента.ПрозрачныйФон = Ложь;

	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Высота < ВнешняяКомпонента.МинимальнаяВысотаКода Тогда
		// Скорректируем высоту
		ВнешняяКомпонента.Высота = ВнешняяКомпонента.МинимальнаяВысотаКода;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


/////////////////////////////////////////////////////////////////////////

Функция КонтрольноеЧислоШК(Штрихкод) Экспорт
	
	КонтрольноеЧисло = 0;
	
	Для Н = 1 По 12 Цикл
		Цифра = Число(Сред(Штрихкод, Н, 1));
		КонтрольноеЧисло = КонтрольноеЧисло + Цифра * ?(Н % 2 = 0, 3, 1);
	КонецЦикла;
	
	КонтрольноеЧисло = КонтрольноеЧисло % 10;
	Если КонтрольноеЧисло Тогда
		КонтрольноеЧисло = 10 - КонтрольноеЧисло;
	КонецЕсли;
	
	Возврат КонтрольноеЧисло;
	
КонецФункции
