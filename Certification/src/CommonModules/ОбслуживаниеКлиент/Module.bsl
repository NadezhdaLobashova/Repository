
#Область ПрограммныйИнтерфейс

Функция СсылкиИзСтрокСписка(СтрокиСписка) Экспорт
    
    Ссылки = Новый Массив;
    Для каждого Строка Из СтрокиСписка Цикл
        Если ТипЗнч(Строка) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда 
            Ссылки.Добавить(Строка);
        КонецЕсли;	
    КонецЦикла;
    
    Возврат Ссылки;

КонецФункции

// Функция - Новый пароль
// 
// Возвращаемое значение:
//  Строка - сгенерированный пароль.
//
Функция НовыйПароль() Экспорт
	
	#Если ВебКлиент Тогда
		
		Возврат ОбслуживаниеВызовСервера.НовыйПароль();
		
	#Иначе
 	
		ЗаглавныеБуквы = "QWERTYUOPASDFGHJKLZXCVBNM"; // Без буквы I
		СтрочныеБуквы = "qwertyuiopasdfghjkzxcvbnm"; // Без буквы l
		Цифры = "1234567890";
		СпецСимволы = ""; // Спец. символы решено не использовать из за сложности генерируемых паролей.
		
		Пароль = "";
		
		Генератор = Новый ГенераторСлучайныхЧисел;
		
		Пока СтрДлина(Пароль) < 8 Цикл
			
			Число = Генератор.СлучайноеЧисло(1, 6);
			
			Если Число = 1 Или Число = 2 Тогда
				
				Индекс = Генератор.СлучайноеЧисло(1, СтрДлина(ЗаглавныеБуквы));
				Пароль = Пароль + Сред(ЗаглавныеБуквы, Индекс, 1);
				
			ИначеЕсли Число = 3 Или Число = 4 Тогда
				
				Индекс = Генератор.СлучайноеЧисло(1, СтрДлина(СтрочныеБуквы));
				Пароль = Пароль + Сред(СтрочныеБуквы, Индекс, 1);
				
			ИначеЕсли Число = 5 Тогда
				
				Индекс = Генератор.СлучайноеЧисло(1, СтрДлина(Цифры));
				Пароль = Пароль + Сред(Цифры, Индекс, 1);
				
			Иначе
				
				Индекс = Генератор.СлучайноеЧисло(1, СтрДлина(СпецСимволы));
				Пароль = Пароль + Сред(СпецСимволы, Индекс, 1);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Пароль;
		
	#КонецЕсли
КонецФункции

// Процедура - Перенаправить объекты
//
// Параметры:
//  Объекты                   - Массив - ссылки на объекты, которые требуется перенаправить.
//  ТипОбъектов               - Тип - тип перенаправляемых объектов.
//  ОповещениеПослеВыполнения - ОписаниеОповещения - что требуется выполнить после перенаправления.
//
Процедура ПеренаправитьОбъекты(Знач Объекты, ТипОбъектов, ОповещениеПослеВыполнения = Неопределено) Экспорт
    
    Если Объекты.Количество() = 0 Тогда
        Возврат;    
    КонецЕсли;  
    
	Параметры = Новый Структура;
	Параметры.Вставить("МассивОбъектов", Объекты);
	Параметры.Вставить("ОповещениеПослеВыполнения", ОповещениеПослеВыполнения);
    Параметры.Вставить("ТипОбъектов", ТипОбъектов); 
	
	Оповещение = Новый ОписаниеОповещения("ПеренаправитьОбъектыЗавершение", ЭтотОбъект, Параметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоОбъектов", Объекты.Количество());
	ПараметрыФормы.Вставить("Объекты", Объекты);
    
    Если ТипОбъектов = Тип("ДокументСсылка.Обращение") Тогда
        ИмяФормы = "Документ.Обращение.Форма.ПеренаправлениеОбращения";
    Иначе
        ИмяФормы = "ОбщаяФорма.ПеренаправлениеОбъекта"; 
    КонецЕсли; 
    
    ОткрытьФорму(ИмяФормы, ПараметрыФормы,,,,, Оповещение);
	
КонецПроцедуры

// Процедура - Принять обращения в работу
//
// Параметры:
//  Обращения - Массив - объекты, которые требуется принять в работу.
//
Процедура ПринятьОбращенияВРаботуЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
    Иначе
        Если Объекты.Количество() <> 1 Тогда
    		ПоказатьОповещениеПользователя(,, 
                СтрШаблон(НСтр("ru = 'Обращения (%1 шт.) приняты в работу.'"), Объекты.Количество()), 
                БиблиотекаКартинок.Информация32);
    	Иначе		
    		ПоказатьОповещениеПользователя(, 
                ПолучитьНавигационнуюСсылку(Объекты[0]), 
                СтрШаблон(НСтр("ru = 'Обращение ""%1"" принято в работу.'"), Объекты[0]), 
                БиблиотекаКартинок.Информация32);
        КонецЕсли;
	КонецЕсли;
    
КонецПроцедуры
 
// Процедура - Перевести обращения на линию
//
// Параметры:
//  Обращения - массив - объекты, которые нужно перевести на линию.
//
Процедура ПеревестиОбращенияНаЛиниюЗавершение(Знач Объекты) Экспорт
	
    Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
    Иначе
        Если Объекты.Количество() <> 1 Тогда
    		ПоказатьОповещениеПользователя(,, 
                СтрШаблон(НСтр("ru = 'Обращения (%1 шт.) переведены на линию.'"), Объекты.Количество()), 
                БиблиотекаКартинок.Информация32);
    	Иначе		
            ПоказатьОповещениеПользователя(, 
                ПолучитьНавигационнуюСсылку(Объекты[0]), 
                СтрШаблон(НСтр("ru = 'Обращение ""%1"" переведено на линию.'"), 
                Объекты[0]), БиблиотекаКартинок.Информация32);
        КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - Принять ошибки в работу
//
// Параметры:
//  Ошибки - Массив - объекты, которые требуется принять в работу. 
//
Процедура ПринятьОшибкиВРаботуЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Ошибки (%1 шт.) приняты в работу.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Ошибка ""%1"" принята в работу.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры
 
// Процедура - Перевести ошибки на линию
//
// Параметры:
//  Ошибки - массив - объекты, которые требуется перевести на линию.
//
Процедура ПеревестиОшибкиНаЛиниюЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Ошибки (%1 шт.) переведены на линию.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Ошибка ""%1"" переведена на линию.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - Принять пожелания в работу
//
// Параметры:
//  Пожелания - Массив - объекты, которые требуется принять в работу. 
//
Процедура ПринятьПожеланияВРаботуЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Пожелания (%1 шт.) приняты в работу.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Пожелание ""%1"" принято в работу.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры
 
// Процедура - Перевести пожелания на линию
//
// Параметры:
//  Пожелания - массив - объекты, которые требуется перевести на линию.
//
Процедура ПеревестиПожеланияНаЛиниюЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Пожелания (%1 шт.) переведены на линию.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Пожелание ""%1"" переведено на линию.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - Принять консультации в работу
//
// Параметры:
//  Консультации - Массив - объекты, которые требуется принять в работу. 
//
Процедура ПринятьКонсультацииВРаботуЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Консультации (%1 шт.) приняты в работу.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Консультация ""%1"" принята в работу.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;
    
КонецПроцедуры

// Процедура - Перевести консультации на линию
//
// Параметры:
//  Консультации - массив - объекты, которые требуется перевести на линию.
//
Процедура ПеревестиКонсультацииНаЛиниюЗавершение(Знач Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда
		ПоказатьПредупреждениеОбОшибке();
		Возврат;
	ИначеЕсли Объекты.Количество() <> 1 Тогда
		ПоказатьОповещениеПользователя(,, 
            СтрШаблон(НСтр("ru = 'Консультации (%1 шт.) переведены на линию.'"), Объекты.Количество()), 
            БиблиотекаКартинок.Информация32);
	Иначе		
		ПоказатьОповещениеПользователя(, 
            ПолучитьНавигационнуюСсылку(Объекты[0]), 
            СтрШаблон(НСтр("ru = 'Консультация ""%1"" переведена на линию.'"), Объекты[0]), 
            БиблиотекаКартинок.Информация32);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ПеренаправитьОбъектыЗавершение(ПараметрыАдресации, Параметры) Экспорт
	
	Если ПараметрыАдресации <> Неопределено Тогда
        
        ОбслуживаниеВызовСервера.ПеренаправитьОбъекты(Параметры.МассивОбъектов, ПараметрыАдресации);
        
        Объекты = Параметры.МассивОбъектов;
    	Если Объекты.Количество() > 1 Тогда
    		ПоказатьОповещениеПользователя(,, 
                СтрШаблон(НСтр("ru = '%1 (%2 шт.) перенаправлены.'"), Параметры.ТипОбъектов, Объекты.Количество()), 
                БиблиотекаКартинок.Информация32);
    	ИначеЕсли Объекты.Количество() = 1 Тогда 		
    		ПоказатьОповещениеПользователя(, 
                ПолучитьНавигационнуюСсылку(Объекты[0]), 
                СтрШаблон(НСтр("ru = '%1 ""%2"" перенаправлено.'"), Параметры.ТипОбъектов, Объекты[0]), 
                БиблиотекаКартинок.Информация32);
    	КонецЕсли;	

        Если Параметры.ОповещениеПослеВыполнения <> Неопределено Тогда
            ОповещениеПослеВыполнения = Параметры.ОповещениеПослеВыполнения;
            Параметры.Удалить("ОповещениеПослеВыполнения");
            ПараметрыАдресации.Вставить("МассивОбъектов", Параметры.МассивОбъектов);
			ВыполнитьОбработкуОповещения(ОповещениеПослеВыполнения, ПараметрыАдресации);
		КонецЕсли;
		Если Параметры.МассивОбъектов.Количество() > 0 Тогда
        	ОповеститьОбИзменении(Тип("СправочникСсылка.ПроизошедшиеБизнесСобытия"));
            Если Параметры.ТипОбъектов = Тип("ДокументСсылка.Обращение") Тогда
           		Оповестить("ИзмененоОбращение", Параметры.МассивОбъектов);
            КонецЕсли; 		
        КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьПредупреждениеОбОшибке()
	
	ПоказатьПредупреждение(,НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
	
КонецПроцедуры
 
#КонецОбласти

