
Процедура НастройкаПорядкаЭлементовПередЗаписью(Источник, Отказ) Экспорт
	
	// Если в обработчике был установлен отказ новые порядок не вычисляем
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим, есть ли у объекта реквизит доп. упорядочивания
	Информация = НастройкаПорядкаЭлементов.ПолучитьИнформациюДляПеремещенияОМетаданных(Источник.Ссылка);
	Если Не УОбъектаЕстьРеквизитДопУпорядочивания(Источник, Информация) Тогда
		Возврат;
	КонецЕсли;
	
	// Вычислим новое значение для порядка элемента
	Если Источник.РеквизитДопУпорядочивания = 0 Тогда
		Источник.РеквизитДопУпорядочивания =
			НастройкаПорядкаЭлементов.ПолучитьНовоеЗначениеРеквизитаДопУпорядочивания(
					Информация,
					?(Информация.ЕстьРодитель, Источник.Родитель, Неопределено),
					?(Информация.ЕстьВладелец, Источник.Владелец, Неопределено) );
	КонецЕсли;
	
КонецПроцедуры

Процедура НастройкаПорядкаЭлементовПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	Информация = НастройкаПорядкаЭлементов.ПолучитьИнформациюДляПеремещенияОМетаданных(Источник.Ссылка);
	Если УОбъектаЕстьРеквизитДопУпорядочивания(Источник, Информация) Тогда
		Источник.РеквизитДопУпорядочивания = 0;
	КонецЕсли;
	
КонецПроцедуры

// Проверить, есть ли у объекта РеквизитДопУпорядочивания
Функция УОбъектаЕстьРеквизитДопУпорядочивания(Объект, Информация)
	
	Если Не Информация.ЕстьРодитель Тогда
		// Справочник неиерархический, значит реквизит есть
		Возврат Истина;
		
	ИначеЕсли Объект.ЭтоГруппа И Не Информация.ДляГрупп Тогда
		// Это группа, но для группа порядок не назначается
		Возврат Ложь;
		
	ИначеЕсли Не Объект.ЭтоГруппа И Не Информация.ДляЭлементов Тогда
		// Это элемент, но для элементов порядок не назначается
		Возврат Ложь;
		
	Иначе
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции
