
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	//Если Не ОбщегоНазначения.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка) Тогда
	//	Возврат;
	//КонецЕсли;
	
	ПараметрыДляВыбора = Новый Массив();
	ПараметрыДляВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Сервис));
	Элементы.КомпонентСписок.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыДляВыбора);
	
	ТипКарточек = "Консультации";
	КоличествоДнейОтбораОбращений = 10;
	ЗаполнитьТоп10();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТипКарточек = Настройки.Получить("ТипКарточек");
	Если ТипКарточек <> Неопределено Тогда
		Настройки.Удалить("ТипКарточек");
	КонецЕсли;
	
	КоличествоДнейОтбораОбращений = Настройки.Получить("КоличествоДнейОтбораОбращений");
	Если КоличествоДнейОтбораОбращений <> Неопределено Тогда
		Настройки.Удалить("КоличествоДнейОтбораОбращений");
	КонецЕсли;
	
	ОтображатьЗакрытые = Настройки.Получить("ОтображатьЗакрытые");
	Если ОтображатьЗакрытые <> Неопределено Тогда
		Настройки.Удалить("ОтображатьЗакрытые");
	КонецЕсли;
	
	ЗаполнитьТоп10();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Топ10Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СсылкаНаЭлемент = Топ10.НайтиПоИдентификатору(ВыбраннаяСтрока).Ссылка;
	Если ТипЗнч(СсылкаНаЭлемент) = Тип("СправочникСсылка.Ошибки") Тогда
		ОткрытьФорму("Справочник.Ошибки.ФормаОбъекта", Новый Структура("Ключ", СсылкаНаЭлемент));
	ИначеЕсли ТипЗнч(СсылкаНаЭлемент) = Тип("СправочникСсылка.Пожелания") Тогда
		ОткрытьФорму("Справочник.Пожелания.ФормаОбъекта", Новый Структура("Ключ", СсылкаНаЭлемент));
	ИначеЕсли ТипЗнч(СсылкаНаЭлемент) = Тип("СправочникСсылка.Консультации") Тогда
		ОткрытьФорму("Справочник.Консультации.ФормаОбъекта", Новый Структура("Ключ", СсылкаНаЭлемент));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СервисПриИзменении(Элемент)
	
	ЗаполнитьТоп10();
	
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеПодбора = КомпонентСписок.ВыгрузитьЗначения();
	
	Оповещение = Новый ОписаниеОповещения("КомпонентСписокНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДанныеПодбора", ДанныеПодбора);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", Сервис));
	 
	ОткрытьФорму("Справочник.КомпонентыСервиса.Форма.ФормаПодбора", ПараметрыФормы, Элементы.КомпонентСписок, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокПриИзменении(Элемент)
	
	ЗаполнитьТоп10();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеПодбора = РазделСписок.ВыгрузитьЗначения();
	
	Оповещение = Новый ОписаниеОповещения("РазделСписокНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("ДанныеПодбора", ДанныеПодбора);
	 
	ОткрытьФорму("Справочник.Разделы.Форма.ФормаПодбора", ПараметрыФормы, Элементы.РазделСписок, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокПриИзменении(Элемент)
	
	ЗаполнитьТоп10();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКарточекПриИзменении(Элемент)
	
	ЗаполнитьТоп10();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНастроитьНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ГиперссылкаНастроитьНажатиеЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоДнейОтбораОбращений", КоличествоДнейОтбораОбращений);
	ПараметрыФормы.Вставить("ИспользоватьОтображатьЗакрытые", ТипКарточек <> "Консультации");
	ПараметрыФормы.Вставить("ОтображатьЗакрытые", ОтображатьЗакрытые);
	ПараметрыФормы.Вставить("ТипКарточек", ТипКарточек);
	 
	ОткрытьФорму("ОбщаяФорма.УстановкаНастроекДляТоп10",ПараметрыФормы,ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТоп10()
	
	Если Не ЗначениеЗаполнено(ТипКарточек) Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
		|	БазаЗнаний.Ссылка,
		|	БазаЗнаний.Наименование КАК Тема,
		|	БазаЗнаний.Код КАК Код,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Обращение.Ссылка) КАК КоличествоОбращений
		|ИЗ
		|	Справочник.Консультации КАК БазаЗнаний
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Обращение КАК Обращение
		|		ПО БазаЗнаний.Ссылка = Обращение.КарточкаБазыЗнаний
		|			И (Обращение.Дата >= &ДатаОтбораОбращений)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ОтборСервисы = ЛОЖЬ
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ БазаЗнаний.Сервисы.Сервис В (&Сервисы)
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ОтборКомпоненты = ЛОЖЬ
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ БазаЗнаний.Компоненты.Компонент В (&Компоненты)
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ОтборРазделы = ЛОЖЬ
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ БазаЗнаний.Разделы.Раздел В (&Разделы)
		|		КОНЕЦ
		|	%УсловиеОтбора%
		|
		|СГРУППИРОВАТЬ ПО
		|	БазаЗнаний.Ссылка,
		|	БазаЗнаний.Наименование,
		|	БазаЗнаний.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоличествоОбращений УБЫВ";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Консультации", ТипКарточек);
	
	Если ТипКарточек <> "Консультации" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%УсловиеОтбора%","
		|И ВЫБОР
		|			КОГДА &ОтображатьЗакрытые
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НЕ БазаЗнаний.Состояние В (&СостоянияЗакрытых)
		|		КОНЕЦ
		|");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%УсловиеОтбора%","");
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ОтборСервисы", ЗначениеЗаполнено(Сервис));
	Запрос.УстановитьПараметр("ОтборКомпоненты", КомпонентСписок.Количество() > 0);
	Запрос.УстановитьПараметр("ОтборРазделы", РазделСписок.Количество() > 0);
	Запрос.УстановитьПараметр("Сервисы", Сервис);
	Запрос.УстановитьПараметр("Компоненты", КомпонентСписок.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("Разделы", РазделСписок.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ДатаОтбораОбращений", НачалоДня(ТекущаяДатаСеанса()) - КоличествоДнейОтбораОбращений*86400);
	Запрос.УстановитьПараметр("ОтображатьЗакрытые", ОтображатьЗакрытые);
	
	СостоянияЗакрытых = Новый Массив;
	СостоянияЗакрытых.Добавить(Перечисления.СостоянияОшибок.Исправлена);
	СостоянияЗакрытых.Добавить(Перечисления.СостоянияПожеланий.Реализовано);
	
	Запрос.УстановитьПараметр("СостоянияЗакрытых", СостоянияЗакрытых);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Топ10.Загрузить(РезультатЗапроса.Выгрузить());
	
	ПрописьЧисла     = ЧислоПрописью(КоличествоДнейОтбораОбращений, "Л = ru_RU", НСтр("ru = ',,,,,,,,0'"));
	ПрописьЧислаИДни = ЧислоПрописью(КоличествоДнейОтбораОбращений, "Л = ru_RU", НСтр("ru = 'день, дня, дней,,,,,,0'"));
	ЧислоИДни = СтрЗаменить(ПрописьЧислаИДни, ПрописьЧисла, Формат(КоличествоДнейОтбораОбращений, "ЧГ=") + " ");
	
	Элементы.ГиперссылкаНастроить.Заголовок = СтрШаблон(НСтр("ru='Отбор обращений за %1%2'"), 
		ЧислоИДни, ?(ОтображатьЗакрытые, НСтр("ru=', с закрытыми'"),"")); 
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНастроитьНажатиеЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		КоличествоДнейОтбораОбращений = Результат.КоличествоДнейОтбораОбращений;
		ОтображатьЗакрытые = Результат.ОтображатьЗакрытые;
		ЗаполнитьТоп10();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокНачалоВыбораЗавершение(Результат, ПараметрыДляВыбора) Экспорт
	
	Если Результат <> Неопределено Тогда
		РазделСписок.ЗагрузитьЗначения(Результат);
		ЗаполнитьТоп10();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокНачалоВыбораЗавершение(Результат, ПараметрыДляВыбора) Экспорт
	
	Если Результат <> Неопределено Тогда
		КомпонентСписок.ЗагрузитьЗначения(Результат);
		ЗаполнитьТоп10();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
