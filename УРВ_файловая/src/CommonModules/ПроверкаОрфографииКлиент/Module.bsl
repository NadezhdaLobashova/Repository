
#Область ПрограммныйИнтерфейс
    
Процедура ПроверитьОрфографию(Форма, РеквизитФормы) Экспорт
	
	#Если Не ВебКлиент Тогда	
	
        ПараметрыОповещения = Новый Структура;
        ПараметрыОповещения.Вставить("Форма", Форма);
        ПараметрыОповещения.Вставить("РеквизитФормы", РеквизитФормы);
        
        ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеПроверитьОрфографию", ЭтотОбъект, ПараметрыОповещения);
        Если ТипЗнч(Форма[РеквизитФормы]) = Тип("Строка") Тогда
		    ПроверитьОрфографиюТекста(ОписаниеОповещения, Форма[РеквизитФормы]);
        Иначе
            ТекстHTML = "";
            Вложения = Новый Структура;
            Форма[РеквизитФормы].ПолучитьHTML(ТекстHTML, Вложения);
            ПараметрыОповещения.Вставить("Вложения", Вложения);
		    ПроверитьОрфографиюТекста(ОписаниеОповещения, ТекстHTML);
        КонецЕсли;
	
	#КонецЕсли	
	
КонецПроцедуры

// Ищет подстроку в строке, после указанной позиции
//
Функция НайтиПосле(Строка, Подстрока, НачальнаяПозиция = 0) Экспорт
	
	Если СтрДлина(Строка) <= НачальнаяПозиция Тогда
		Возврат 0;
	КонецЕсли;
	
	Позиция = СтрНайти(Строка, Подстрока, НаправлениеПоиска.СНачала, НачальнаяПозиция + 1);
	Возврат Позиция;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗавершениеПроверитьОрфографию(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат.ТекстИзменен Тогда
        Если ТипЗнч(ПараметрыОповещения.Форма[ПараметрыОповещения.РеквизитФормы]) = Тип("Строка") Тогда
    		ПараметрыОповещения.Форма[ПараметрыОповещения.РеквизитФормы] = Результат.Текст;
        КонецЕсли;    
        ПараметрыОповещения.Форма.Модифицированность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Функция ОрфографияОбработатьСлово(Слово, СтрокаИзТекста, ПараметрыПроверкиОрфографииТекст)
				
	СловоНужноПроверитьWord = Истина;
	
	НаличиеСлова = ПараметрыПроверкиОрфографииТекст.Исключения.Получить(Слово);
	Если НаличиеСлова <> Неопределено Тогда
		СловоНужноПроверитьWord = Ложь;
		ПараметрыПроверкиОрфографииТекст.СловПропущено = ПараметрыПроверкиОрфографииТекст.СловПропущено + 1;
	КонецЕсли;	
	
	ЗамененноеСлово = ПараметрыПроверкиОрфографииТекст.СловаЗамены.Получить(Слово);
	Если ЗамененноеСлово <> Неопределено Тогда
		Слово = ЗамененноеСлово;
		ПараметрыПроверкиОрфографииТекст.СловЗаменено = ПараметрыПроверкиОрфографииТекст.СловЗаменено + 1;
	КонецЕсли;	
	
	Если СловоНужноПроверитьWord Тогда
		
		Если Не ПараметрыПроверкиОрфографииТекст.Word.CheckSpelling(Слово) Тогда
			
			СписокВариантов = Новый СписокЗначений;
			
			ВариантыЗамены = ПараметрыПроверкиОрфографииТекст.Word.getSpellingSuggestions(Слово);
			
			Если ВариантыЗамены.Count <> 0 Тогда
				Для НомерВарианта = 1 По ВариантыЗамены.Count Цикл
					СписокВариантов.Добавить(ВариантыЗамены.Item(НомерВарианта).Name);
				КонецЦикла;
			КонецЕсли;
			
			ПараметрыФормы = Новый Структура("ИсходнаяСтрока,СловоЗамены,СписокВариантов,ПараметрыПроверкиОрфографииТекст");
			ПараметрыФормы.ИсходнаяСтрока = СокрЛП(СтрокаИзТекста);
			ПараметрыФормы.СловоЗамены = Слово;
			ПараметрыФормы.СписокВариантов = СписокВариантов.Скопировать();
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеПроверкиОрфографииВБлокеТекста", ЭтотОбъект, ПараметрыПроверкиОрфографииТекст);
			ОткрытьФорму("ОбщаяФорма.ПроверкаОрфографии", 
				ПараметрыФормы,
				,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
				
			Возврат Ложь;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	СловоСобрано = Ложь;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗавершитьПроверкуОрфографии(ПараметрыПроверкиОрфографииТекст)
	
	Текст = ПараметрыПроверкиОрфографииТекст.НовыйТекстовыйДокумент.ПолучитьТекст();
	Если Прав(Текст, 1) = Символы.ПС Тогда
		Текст = Лев(Текст, СтрДлина(Текст)-1);
	КонецЕсли;
	
	ТекстДляПроверки = ПараметрыПроверкиОрфографииТекст.ТекстДляПроверки;
	ТекстИзменен = Ложь;
	
	Если СокрЛП(ПараметрыПроверкиОрфографииТекст.ТекстДляПроверки) <> СокрЛП(Текст) Тогда
		
		// для текстового письма целиком собираем новый текст (с исправленными словами) и ставим его письму
		ТекстДляПроверки = Текст;
		ТекстИзменен = Истина;
		
	КонецЕсли;
	
	ПараметрыПроверкиОрфографииТекст.Word.Quit();
	ПараметрыПроверкиОрфографииТекст.Word = Неопределено;
	
	Состояние();
	
	ТекстПредупреждения = СтрШаблон(НСтр("ru = 'Проверка орфографии завершена. 
		|Заменено слов: %1, пропущено слов: %2.'"),
		ПараметрыПроверкиОрфографииТекст.СловЗаменено, ПараметрыПроверкиОрфографииТекст.СловПропущено);
		
	ПоказатьПредупреждение(, ТекстПредупреждения);
	
	СтруктураВозврата = Новый Структура("Текст, ТекстИзменен", ТекстДляПроверки, ТекстИзменен);
	ВыполнитьОбработкуОповещения(ПараметрыПроверкиОрфографииТекст.ОбработчикРезультата, СтруктураВозврата);
	
	ПараметрыПроверкиОрфографииТекст = Неопределено;
	
КонецПроцедуры

Процедура ПроверитьОрфографиюТекста(ОбработчикРезультата, Знач Текст) Экспорт
	
	ТекстДляПроверки = Текст;
	СловЗаменено = 0;
	СловПропущено = 0;
	
	Попытка
		Word = Новый COMОбъект("Word.Application");
		
		Если Word.Documents.Count = 0 Тогда
			Word.Documents.Add();
		КонецЕсли;
		
	Исключение
		
		Word = Неопределено;
		
		СтруктураВозврата = Новый Структура("Текст, ТекстИзменен", Текст, Ложь);
		ВыполнитьОбработкуОповещения(ОбработчикРезультата, СтруктураВозврата);
		
		Возврат;
		
	КонецПопытки;
		
	Текст = ТекстДляПроверки;
	
	Исключения = Новый Соответствие;
	СловаЗамены = Новый Соответствие;
	
	ВсеПрочиеСловаНеПроверяем = Ложь;
	НовыйТекстовыйДокумент = Новый ТекстовыйДокумент();
	
	НомерСтрокиНачальный = 1;
	ПозицияВСтроке = -1;
	СловоЗамены = "";
	СловоОригинальное = "";
	НомерСлова = -1;
	НомерСтрокиТекущий = -1;
	ТекстПисьмаРезультирующий = "";
	
	ПараметрыПроверкиОрфографииТекст = Новый Структура;
	ПараметрыПроверкиОрфографииТекст.Вставить("Текст", Текст);
	ПараметрыПроверкиОрфографииТекст.Вставить("НомерСтрокиНачальный", НомерСтрокиНачальный);
	ПараметрыПроверкиОрфографииТекст.Вставить("ПозицияВСтроке", ПозицияВСтроке); 
	ПараметрыПроверкиОрфографииТекст.Вставить("СловоОригинальное", СловоОригинальное);
	ПараметрыПроверкиОрфографииТекст.Вставить("СловоЗамены", СловоЗамены);
	ПараметрыПроверкиОрфографииТекст.Вставить("НомерСлова", НомерСлова);
	ПараметрыПроверкиОрфографииТекст.Вставить("ТекстДляПроверки", ТекстДляПроверки);
	ПараметрыПроверкиОрфографииТекст.Вставить("Word", Word);
	ПараметрыПроверкиОрфографииТекст.Вставить("Исключения", Исключения); 
	ПараметрыПроверкиОрфографииТекст.Вставить("СловаЗамены", СловаЗамены); 
	ПараметрыПроверкиОрфографииТекст.Вставить("НомерСтрокиТекущий", НомерСтрокиТекущий);
	ПараметрыПроверкиОрфографииТекст.Вставить("СловЗаменено", СловЗаменено);
	ПараметрыПроверкиОрфографииТекст.Вставить("СловПропущено", СловПропущено);
	ПараметрыПроверкиОрфографииТекст.Вставить("Слово", "");
	
	ПараметрыПроверкиОрфографииТекст.Вставить("НоваяСтрока", "");
	ПараметрыПроверкиОрфографииТекст.Вставить("ВсеПрочиеСловаНеПроверяем", ВсеПрочиеСловаНеПроверяем);
	ПараметрыПроверкиОрфографииТекст.Вставить("НовыйТекстовыйДокумент", НовыйТекстовыйДокумент);
	ПараметрыПроверкиОрфографииТекст.Вставить("ДобавочныйСимвол", "");
	
	ПараметрыПроверкиОрфографииТекст.Вставить("ОбработчикРезультата", ОбработчикРезультата);
	ПараметрыПроверкиОрфографииТекст.Вставить("ТекстПисьмаРезультирующий", ТекстПисьмаРезультирующий);
	
	ПроверитьОрфографиюВБлокеТекста(ПараметрыПроверкиОрфографииТекст);
	
КонецПроцедуры

Процедура ПроверитьОрфографиюВБлокеТекста(ПараметрыПроверкиОрфографииТекст) Экспорт
	
	СимволыРазделители = ПолучитьСимволыРазделители();
	
	Если Не ПараметрыПроверкиОрфографииТекст.Свойство("ТекстовыйДокумент") Тогда 
		ПараметрыПроверкиОрфографииТекст.Вставить("ТекстовыйДокумент", Новый ТекстовыйДокумент());	
		ПараметрыПроверкиОрфографииТекст.ТекстовыйДокумент.УстановитьТекст(ПараметрыПроверкиОрфографииТекст.Текст);
	КонецЕсли;		
	
	Если Не ПараметрыПроверкиОрфографииТекст.Свойство("КоличествоСтрокТекста") Тогда 
		ПараметрыПроверкиОрфографииТекст.Вставить(
			"КоличествоСтрокТекста", 
			ПараметрыПроверкиОрфографииТекст.ТекстовыйДокумент.КоличествоСтрок());
	КонецЕсли;	
	
	Если Не ПараметрыПроверкиОрфографииТекст.Свойство("НомерСтроки") Тогда 
		ПараметрыПроверкиОрфографииТекст.Вставить("НомерСтроки", ПараметрыПроверкиОрфографииТекст.НомерСтрокиНачальный);
	КонецЕсли;	
	
	Если Не ПараметрыПроверкиОрфографииТекст.Свойство("НомерПервогоСимвола") Тогда 
		ПараметрыПроверкиОрфографииТекст.Вставить("НомерПервогоСимвола", 1);
	КонецЕсли;	
	
	Если Не ПараметрыПроверкиОрфографииТекст.Свойство("НомерАнализируемогоСимвола") Тогда 
		ПараметрыПроверкиОрфографииТекст.Вставить("НомерАнализируемогоСимвола", 1);
	КонецЕсли;	
	
	ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока 
		+ ПараметрыПроверкиОрфографииТекст.Слово;
		
	Если СтрДлина(ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол) <> 0 Тогда
		ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока 
			+ ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол;
		ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол = "";
	КонецЕсли;
		
	ПараметрыПроверкиОрфографииТекст.Слово = "";	
	
	// Перебор строк
	Для СчСтроки = ПараметрыПроверкиОрфографииТекст.НомерСтроки 
		По ПараметрыПроверкиОрфографииТекст.КоличествоСтрокТекста Цикл
		
		ПараметрыПроверкиОрфографииТекст.НомерСтроки = СчСтроки;
		СтрокаСостояние = СтрШаблон(
            НСтр("ru = 'Всего в тексте %1 строк. Проверяется %2 строка.'"),
			Строка(ПараметрыПроверкиОрфографииТекст.КоличествоСтрокТекста), 
			Строка(ПараметрыПроверкиОрфографииТекст.НомерСтроки));
		Состояние(СтрокаСостояние);
		
		// Получение строки, которую далее будем проверять
		СтрокаИзТекста = ПараметрыПроверкиОрфографииТекст.ТекстовыйДокумент.ПолучитьСтроку(ПараметрыПроверкиОрфографииТекст.НомерСтроки);
		
		Если ПараметрыПроверкиОрфографииТекст.ВсеПрочиеСловаНеПроверяем Тогда
			ПараметрыПроверкиОрфографииТекст.НовыйТекстовыйДокумент.ДобавитьСтроку(СтрокаИзТекста);
			Продолжить;
		КонецЕсли;	
		
		Если ПараметрыПроверкиОрфографииТекст.ПозицияВСтроке <> -1 
			И (ПараметрыПроверкиОрфографииТекст.НомерСтроки = ПараметрыПроверкиОрфографииТекст.НомерСтрокиНачальный) Тогда
			ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола = ПараметрыПроверкиОрфографииТекст.ПозицияВСтроке;
		Иначе	
            //ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола = Найти(СтрокаИзТекста, """");
            //Если ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола <> 0 Тогда
            //	ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола = ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола + 1;
            //Иначе
				ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола = 1;
            //КонецЕсли;
		КонецЕсли;
		
		ПараметрыПроверкиОрфографииТекст.НомерСтрокиТекущий = ПараметрыПроверкиОрфографииТекст.НомерСтроки;
		
		ДлинаСтроки = СтрДлина(СтрокаИзТекста);
		ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока
			+ Лев(СтрокаИзТекста, ПараметрыПроверкиОрфографииТекст.НомерПервогоСимвола - 1);
		ПараметрыПроверкиОрфографииТекст.Слово       = "";
		СловоСобрано = Ложь;
		
		// Посимвольный обход строки для выделения и проверки слов
		Для СчСимволов = ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола 
			По ДлинаСтроки Цикл
			
			ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола = СчСимволов;
			
			ПозицияВСтроке = ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола;
			Символ = Сред(СтрокаИзТекста, ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола, 1);
			
			Если Найти(СимволыРазделители, Символ) <> 0 Тогда
				
				Если СтрДлина(ПараметрыПроверкиОрфографииТекст.Слово) = 0 Тогда
					ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока + Символ;
				Иначе
					ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол = Символ;
					СловоСобрано = Истина;
				КонецЕсли;
				
			Иначе
				
				ПараметрыПроверкиОрфографииТекст.Слово = ПараметрыПроверкиОрфографииТекст.Слово + Символ;
				Если ДлинаСтроки = ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола Тогда 
					СловоСобрано = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПараметрыПроверкиОрфографииТекст.Свойство("Слово") Тогда 
				ПараметрыПроверкиОрфографииТекст.Вставить("Слово", "");
			КонецЕсли;	
			
			Если СловоСобрано Тогда
				
				Результат = ОрфографияОбработатьСлово(ПараметрыПроверкиОрфографииТекст.Слово, СтрокаИзТекста, ПараметрыПроверкиОрфографииТекст);
				СловоСобрано = Ложь;
				ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола = 
					ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола + 1;
				
				Если Не Результат Тогда
					// Процедура проверки прервана модальным окном и будет продолжена при его закрытии
					Возврат;
				КонецЕсли;	
				
				ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока 
					+ ПараметрыПроверкиОрфографииТекст.Слово;
					
				Если СтрДлина(ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол) <> 0 Тогда
					ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока 
						+ ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол;
					ПараметрыПроверкиОрфографииТекст.ДобавочныйСимвол = "";
				КонецЕсли;
					
				ПараметрыПроверкиОрфографииТекст.Слово = "";
				
			КонецЕсли;
			
		КонецЦикла;
		
		ПараметрыПроверкиОрфографииТекст.НоваяСтрока = ПараметрыПроверкиОрфографииТекст.НоваяСтрока 
			+ ПараметрыПроверкиОрфографииТекст.Слово;
		
		ПараметрыПроверкиОрфографииТекст.НомерАнализируемогоСимвола = 1;
		ПараметрыПроверкиОрфографииТекст.НовыйТекстовыйДокумент.ДобавитьСтроку(ПараметрыПроверкиОрфографииТекст.НоваяСтрока);
		ПараметрыПроверкиОрфографииТекст.НоваяСтрока = "";
		
	КонецЦикла;
	
	ЗавершитьПроверкуОрфографии(ПараметрыПроверкиОрфографииТекст);
	
КонецПроцедуры

Процедура ЗавершениеПроверкиОрфографииВБлокеТекста(КодВозврата, ПараметрыПроверкиОрфографииТекст) Экспорт
    
	Если ТипЗнч(КодВозврата) <> Тип("Структура") Тогда
		ПараметрыПроверкиОрфографииТекст.ВсеПрочиеСловаНеПроверяем = Истина;
		Кнопка = "Завершить";
	Иначе
		Кнопка = КодВозврата.Кнопка;
	КонецЕсли;	
	
	СловоИсходное = ПараметрыПроверкиОрфографииТекст.Слово;
	
	Если Кнопка = "Завершить" Тогда
		ПараметрыПроверкиОрфографииТекст.ВсеПрочиеСловаНеПроверяем = Истина;
	КонецЕсли;
	
	Если Кнопка = "ПропуститьВсе" Тогда
		ПараметрыПроверкиОрфографииТекст.Исключения.Вставить(ПараметрыПроверкиОрфографииТекст.Слово, 1);
		ПараметрыПроверкиОрфографииТекст.СловПропущено = ПараметрыПроверкиОрфографииТекст.СловПропущено + 1;
	КонецЕсли;
	
	Если Кнопка = "Пропустить" Тогда
		ПараметрыПроверкиОрфографииТекст.СловПропущено = ПараметрыПроверкиОрфографииТекст.СловПропущено + 1;
	КонецЕсли;
	
	Если Кнопка = "Заменить" Тогда
		
		ПараметрыПроверкиОрфографииТекст.СловоОригинальное = ПараметрыПроверкиОрфографииТекст.Слово;
		ПараметрыПроверкиОрфографииТекст.СловоЗамены = КодВозврата.СловоЗамены;
		ПараметрыПроверкиОрфографииТекст.Слово = КодВозврата.СловоЗамены;
		ПараметрыПроверкиОрфографииТекст.СловЗаменено = ПараметрыПроверкиОрфографииТекст.СловЗаменено + 1;
		
	КонецЕсли;
	
	Если Кнопка = "ЗаменитьВсе" Тогда
		
		ПараметрыПроверкиОрфографииТекст.СловоЗамены = КодВозврата.СловоЗамены;
		ПараметрыПроверкиОрфографииТекст.СловаЗамены.Вставить(ПараметрыПроверкиОрфографииТекст.Слово, ПараметрыПроверкиОрфографииТекст.СловоЗамены);
		ПараметрыПроверкиОрфографииТекст.СловоОригинальное = ПараметрыПроверкиОрфографииТекст.Слово;
		ПараметрыПроверкиОрфографииТекст.Слово = КодВозврата.СловоЗамены;
		
		ПараметрыПроверкиОрфографииТекст.СловЗаменено = ПараметрыПроверкиОрфографииТекст.СловЗаменено + 1;
		
	КонецЕсли;
	
	Если Кнопка = "ДобавитьИсключение" Тогда
		
		ПараметрыПроверкиОрфографииТекст.Исключения.Вставить(ПараметрыПроверкиОрфографииТекст.Слово, 1);
		ДобавитьСловоВИСключенияWord(
			ПараметрыПроверкиОрфографииТекст.Word, 
			ПараметрыПроверкиОрфографииТекст.Слово);
			
	КонецЕсли;
	
	ПроверитьОрфографиюВБлокеТекста(ПараметрыПроверкиОрфографииТекст); 
	
КонецПроцедуры

Процедура ДобавитьСловоВИсключенияWord(Word, Слово) Экспорт
	
	#Если НЕ ВебКлиент Тогда
	    ПользовательскийСловарь = Word.Application.CustomDictionaries.ActiveCustomDictionary;
	    ПолныйПутьФайла = ПользовательскийСловарь.Path + "\" + ПользовательскийСловарь.Name;
	    
	    Файл = Новый Файл(ПолныйПутьФайла);
	    Если Не Файл.Существует() Тогда
	        Возврат;
	    КонецЕсли;	
	    
	    Кодировка = ОпределитьКодировкуТекстовогоФайла(ПолныйПутьФайла);
	    
	    // Дописывать = Истина
	    ЗаписьТекста = Новый ЗаписьТекста(ПолныйПутьФайла, Кодировка, , Истина);
	    ЗаписьТекста.ЗаписатьСтроку(Слово);
	    ЗаписьТекста.Закрыть();
	#КонецЕсли
	
КонецПроцедуры	

Функция ПолучитьСимволыРазделители() Экспорт 
	
	СимволыРазделители = " .,;:?!-+*/\%=<>[](){}""'|~@#$^&_";
	СимволыРазделители = СимволыРазделители + Символ(9) + Символ(10) + Символ(13) + Символ(160);
	Возврат СимволыРазделители;
	
КонецФункции	

Функция ОпределитьКодировкуТекстовогоФайла(ПолноеИмяФайла) Экспорт
	
	Кодировка = Неопределено;
	
#Если Не ВебКлиент Тогда	
	
	// Определяем кодировку
		
	ЧтениеТекста = Новый ЧтениеТекста(ПолноеИмяФайла, КодировкаТекста.Системная);
	
	// Проверяем наличие BOM (Byte order mark)
	Символ0 = ЧтениеТекста.Прочитать(1);
	Символ1 = ЧтениеТекста.Прочитать(1);
	Символ2 = ЧтениеТекста.Прочитать(1);
	
	КодСимвола0 = КодСимвола(Символ0);
	КодСимвола1 = КодСимвола(Символ1);
	КодСимвола2 = КодСимвола(Символ2);
	
	Если КодСимвола0 = 1087 И КодСимвола1 = 187 И КодСимвола2 = 1111 Тогда
		Кодировка = "UTF-8";
	ИначеЕсли КодСимвола0 = 1103 И КодСимвола1 = 1102 Тогда
		Кодировка = "UTF-16";
	Иначе	
		Кодировка = "windows-1251";
	КонецЕсли;
		
#КонецЕсли

	Возврат Кодировка;
	
КонецФункции	

#КонецОбласти 
