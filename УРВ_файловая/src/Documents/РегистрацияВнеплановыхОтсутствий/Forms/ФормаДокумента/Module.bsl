#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

&НаСервере
Процедура УстановитьВидимостьДоступность()
	Элементы.Сотрудник.ТолькоПросмотр = НЕ РольДоступна("ПолныеПрава");
КонецПроцедуры

#КонецОбласти


#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Задача") Тогда
		
		Объект.Задача = Параметры.Задача;
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыДокументаОтсутствия.Черновик;	
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Документы.РегистрацияВнеплановыхОтсутствий.ТекущиеДанныеПоСотруднику(Объект.Сотрудник, Объект.Дата));
	КонецЕсли;
	УстановитьВидимостьДоступность();
	
	Если РольДоступна("Сотрудник") Тогда
		
		Элементы.ФормаУтвержден.Видимость = Ложь;
		Элементы.ФормаОтклонен.Видимость = Ложь;
		
	КонецЕсли;
	
	Если РольДоступна("РуководительПодразделения") Тогда
		
		Элементы.ФормаНаУтверждение.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсутствияДатаНачалаОтсутствияПриИзменении(Элемент)
	
	ТекДанные = Элементы.Отсутствия.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаНачалаОтсутствия) И ЗначениеЗаполнено(ТекДанные.ДатаОкончанияОтсутствия) Тогда
	
		Если ТекДанные.ДатаНачалаОтсутствия > ТекДанные.ДатаОкончанияОтсутствия Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Дата начала отсутствия не может быть позже даты окончания отсутствия.";
			Сообщение.Поле = "Объект.Отсутствия[" + (ТекДанные.НомерСтроки - 1) + "].ДатаНачалаОтсутствия";
			Сообщение.Сообщить();
			
			
			
		Иначе
			Для Каждого Стр Из Объект.Отсутствия Цикл
				
				Если ЗначениеЗаполнено(Стр.ДатаОкончанияОтсутствия) Тогда
					
					Стр.КоличествоЧасов = СотрудникиСервер.ПолучитьНормуЧасовВПериоде(Стр.ДатаНачалаОтсутствия, Стр.ДатаОкончанияОтсутствия);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ОтсутствияДатаОкончанияОтсутствияПриИзменении(Элемент)
	
	
	ТекДанные = Элементы.Отсутствия.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаНачалаОтсутствия) И ЗначениеЗаполнено(ТекДанные.ДатаОкончанияОтсутствия) Тогда 	
			
			Если ТекДанные.ДатаНачалаОтсутствия > ТекДанные.ДатаОкончанияОтсутствия Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Дата окончания отсутствия не может быть раньше даты начала отсутствия.";
			Сообщение.Поле = "Объект.Отсутствия[" + (ТекДанные.НомерСтроки - 1) + "].ДатаОкончанияОтсутствия";
			Сообщение.Сообщить();
			
		Иначе
			
			Для Каждого Стр Из Объект.Отсутствия Цикл
				
				Если ЗначениеЗаполнено(Стр.ДатаНачалаОтсутствия) Тогда
					
					Стр.КоличествоЧасов = СотрудникиСервер.ПолучитьНормуЧасовВПериоде(Стр.ДатаНачалаОтсутствия, Стр.ДатаОкончанияОтсутствия);
					
				КонецЕсли;
				
			КонецЦикла;
			
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнениеЗадачи()
	     Если НЕ Объект.Задача.Ссылка.Пустая() Тогда
			
			Если Объект.Статус = Перечисления.СтатусыДокументаОтсутствия.Утвержден ИЛИ Объект.Статус = Перечисления.СтатусыДокументаОтсутствия.Отклонен Тогда
				
				ЗадачаУтверждения = Объект.Задача.Ссылка.ПолучитьОбъект();
				ЗадачаУтверждения.ВыполнитьЗадачу();
				ЗадачаУтверждения.Записать();
			КонецЕсли;
			
		КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ВыполнениеЗадачи();		
КонецПроцедуры

&НаСервере
Процедура НаУтверждениеНаСервере()
	
	Объект.Статус =	ПредопределенноеЗначение("Перечисление.СтатусыДокументаОтсутствия.НаУтверждение");
	
	Если Объект.Ссылка.Пустая() ТОгда
		ЭтотОбъект.Записать();
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаКлиенте
Процедура НаУтверждение(Команда)
	
	НаУтверждениеНаСервере();
	ОповеститьОбИзменении(Тип("ДокументСсылка.РегистрацияВнеплановыхОтсутствий"));
	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаСервере
Процедура УтвержденНаСервере() 
	
	Объект.Статус =	ПредопределенноеЗначение("Перечисление.СтатусыДокументаОтсутствия.Утвержден"); 
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ВыполнениеЗадачи();
	
КонецПроцедуры

&НаКлиенте
Процедура Утвержден(Команда)
	УтвержденНаСервере();
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.ЗадачиПоУтверждениюВнеплановыхОтсутствий"));
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОтклоненНаСервере()
	Объект.Статус =	ПредопределенноеЗначение("Перечисление.СтатусыДокументаОтсутствия.Отклонен");	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ВыполнениеЗадачи();
КонецПроцедуры

&НаКлиенте
Процедура Отклонен(Команда)
	ОтклоненНаСервере();
	ОповеститьОбИзменении(Тип("ЗадачаСсылка.ЗадачиПоУтверждениюВнеплановыхОтсутствий"));
	ЭтаФорма.Закрыть();
КонецПроцедуры

#КонецОбласти
