
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)   	

		Сотрудник = ПараметрыСеанса.ТекущийПользователь;
		Подразделение = ПараметрыСеанса.ТекущееПодразделение;   

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.СтатусыДокументаОтсутствия.Утвержден Тогда
		// регистр ВнеплановыеОтсутствия
		Движения.ВнеплановыеОтсутствия.Записывать = Истина;
		Для Каждого ТекСтрокаОтсутствия Из Отсутствия Цикл
			Движение = Движения.ВнеплановыеОтсутствия.Добавить();
			Движение.Период = Дата;
			Движение.Сотрудник = Сотрудник;
			Движение.ТипОтсутствия = ТекСтрокаОтсутствия.ТипОтсутствия;
			Движение.ПричинаОтсутствия = ТекСтрокаОтсутствия.ПричинаОтсутствия;
			Движение.Подразделение = Подразделение;
			Движение.ДатаНачалаОтсутствия = ТекСтрокаОтсутствия.ДатаНачалаОтсутствия;
			Движение.ДатаОкончанияОтсутствия = ТекСтрокаОтсутствия.ДатаОкончанияОтсутствия;
			Движение.КоличествоЧасов = ТекСтрокаОтсутствия.КоличествоЧасов;
		КонецЦикла;
		
		
		ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
		
		ПроведениеСервер.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
		
		ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
		
		ПроведениеСервер.ВыполнитьКонтрольПередПроведением(ЭтотОбъект, Отказ);
		
		ПроведениеСервер.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ, "ВнеплановыеОтсутствия");
		
		Движения.Записать();
		
	КонецЕсли;
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	
	Для Каждого Стр Из  ЭтотОбъект.Отсутствия Цикл
		
		Если ЗначениеЗаполнено(Стр.ДатаНачалаОтсутствия) И ЗначениеЗаполнено(Стр.ДатаОкончанияОтсутствия) Тогда
			
			Если Стр.ДатаНачалаОтсутствия>Стр.ДатаОкончанияОтсутствия Тогда
				
				ПолеДанныхВыдачиСообщения = "Отсутствия[" + (Стр.НомерСтроки-1) + "].ДатаНачалаОтсутствия";
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Дата начала отсутствия должна быть меньше даты окончания отсутствия";
				Сообщение.Поле = ПолеДанныхВыдачиСообщения;
				Сообщение.КлючДанных = ЭтотОбъект.Ссылка;
				Сообщение.ПутьКДанным = "Объект";
				Сообщение.Сообщить();
				
				Отказ=Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;  
	
		
	   Если ЭтотОбъект.Статус = Перечисления.СтатусыДокументаОтсутствия.НаУтверждение  Тогда
		
			Если ЭтотОбъект.Задача.Ссылка.Пустая() Тогда
				Попытка
					
					БП = БизнесПроцессы.УтверждениеВнеплановыхОтсутствий.СоздатьБизнесПроцесс();
					БП.Документ = ЭтотОбъект.Ссылка;
					БП.Автор = ЭтотОбъект.Сотрудник;
					БП.Дата = ТекущаяДата();
					БП.Наименование = ЭтотОбъект.Ссылка;
					БП.Записать();
					БП.Старт();	
					
				Исключение
					
					Сообщить(ОписаниеОшибки());
					
				КонецПопытки;
			КонецЕсли;	 		
			
		КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения); 	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры
