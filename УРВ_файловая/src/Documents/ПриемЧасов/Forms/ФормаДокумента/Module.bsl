
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Или Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		Объект.Месяц = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");		
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Направление = 1 Тогда
		Объект.Месяц = КонецМесяца(Объект.Месяц) + 1;
	Иначе
		Объект.Месяц = НачалоМесяца(НачалоМесяца(Объект.Месяц) - 1);
	КонецЕсли;
	
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Объект.Месяц = НачалоМесяца(Объект.Дата);
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамНаСервере()
	
	Если Объект.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.РасчетПервойПоловиныМесяца Тогда
		ДатаКонцаПериода = НачалоМесяца(Объект.Месяц) + 60*60*24*15-1;
	ИначеЕсли Объект.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.ОкончательныйРасчет Тогда
		ДатаКонцаПериода 	= КонецМесяца(Объект.Месяц);
	Иначе 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремяОстатки.Дата КАК Дата,
		|	ОтработанноеВремяОстатки.ЭтапПроекта КАК ЭтапПроекта,
		|	ОтработанноеВремяОстатки.ЭтапПроекта КАК НовыйЭтапПроекта,
		|	ОтработанноеВремяОстатки.Задача КАК Задача,
		|	ОтработанноеВремяОстатки.Задача КАК НоваяЗадача,
		|	ОтработанноеВремяОстатки.Обращение КАК Обращение,
		|	ОтработанноеВремяОстатки.Обращение КАК НовоеОбращение,
		|	ОтработанноеВремяОстатки.ЧасыОстаток КАК Часы,
		|	ОтработанноеВремяОстатки.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ОтработанноеВремяОстатки.Работа КАК Работа,
		|	ОтработанноеВремяОстатки.Подразделение КАК Подразделение,
		|	ОтработанноеВремяОстатки.Подразделение КАК НовоеПодразделение,
		|	УчетФактическихДанныхВремя.Описание КАК Описание,
		|	УчетФактическихДанныхВремя.КонтрагентАбонент КАК КонтрагентАбонент,
		|	ОтработанноеВремяОстатки.Проект КАК Проект,
		|	ОтработанноеВремяОстатки.ВидРабочегоВремени КАК ВидРабочегоВремени
		|ИЗ
		|	РегистрНакопления.ОтработанноеВремя.Остатки(
		|			&Дата,
		|			Сотрудник = &Сотрудник
		|				И Проект = &Проект
		|				И Дата <= &КонецПериода
		|				И (ЭтапПроекта = &ЭтапПроекта
		|					ИЛИ &ЭтапПроекта = ЗНАЧЕНИЕ(Справочник.ЭтапыПроектов.ПустаяСсылка))
		|				И Работа.ВидРаботы <> ЗНАЧЕНИЕ(Перечисление.ВидыРабот.ОкладнаяРабота)) КАК ОтработанноеВремяОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УчетФактическихДанных.Время КАК УчетФактическихДанныхВремя
		|		ПО ОтработанноеВремяОстатки.Проект = УчетФактическихДанныхВремя.Проект
		|			И ОтработанноеВремяОстатки.ЭтапПроекта = УчетФактическихДанныхВремя.ЭтапПроекта
		|			И ОтработанноеВремяОстатки.Сотрудник = УчетФактическихДанныхВремя.Ссылка.Сотрудник
		|			И ОтработанноеВремяОстатки.ИдентификаторСтроки = УчетФактическихДанныхВремя.ИдентификаторСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтработанноеВремяОстатки.Дата";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("КонецПериода", ДатаКонцаПериода);
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("ЭтапПроекта", Объект.ЭтапПроекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТЧ = Объект.Работы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаДетальныеЗаписи);
		СтрокаТЧ.Время				= ЧасыВоВремя( СтрокаТЧ.Часы);
		СтрокаТЧ.ВремяНачала		= ВыборкаДетальныеЗаписи.Дата;
		СтрокаТЧ.ВремяОкончания		= ЧасыВоВремя(ВыборкаДетальныеЗаписи.Часы, СтрокаТЧ.ВремяНачала);
		СтрокаТЧ.ЭффективноеВремя	= СтрокаТЧ.Время;
		СтрокаТЧ.ЭффективныеЧасы	= СтрокаТЧ.Часы;
		СтрокаТЧ.Коэффициент		= СтрокаТЧ.ВидРабочегоВремени.Коэффициент;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Если Объект.Проведен Тогда
		Сообщить("Невозможно заполнение в проведенном документе!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Сообщить("Сначала необходимо выбрать сотрудника!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		Сообщить("Сначала необходимо выбрать месяц!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.РежимНачисления) Тогда
		Сообщить("Сначала необходимо выбрать режим начисления!");
		Возврат;
	КонецЕсли;

	Если Объект.Работы.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОстаткамЗавершение", ЭтотОбъект), "При заполнении табличная часть ""Работы"" будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	Иначе
		ЗаполнитьПоОстаткамНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткамЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Работы.Очистить();
	ЗаполнитьПоОстаткамНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура РаботыКоэффициентПриИзменении(Элемент)
	ЭффективныеЧасы = Элементы.Работы.ТекущиеДанные.Часы * Элементы.Работы.ТекущиеДанные.Коэффициент;
	Элементы.Работы.ТекущиеДанные.ЭффективныеЧасы = ЭффективныеЧасы;
	Элементы.Работы.ТекущиеДанные.ЭффективноеВремя = ЧасыВоВремя(ЭффективныеЧасы);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовыйЭтап(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Проект", Объект.Проект);
	ОткрытьФорму("Документ.ПриемЧасов.Форма.ФормаВыбораНовогоЭтапа", СтруктураПараметров, ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьНовыйЭтапЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовыйЭтапЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ЭтапДляЗаполнения = ДополнительныеПараметры.ЭтапДляЗаполнения;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Идентификатор Из Элементы.Работы.ВыделенныеСтроки Цикл
		Строка = Объект.Работы.НайтиПоИдентификатору(Идентификатор);
		Строка.НовыйЭтапПроекта = ЭтапДляЗаполнения;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНовоеПодразделение(Команда)
	
	ОткрытьФорму("Документ.ПриемЧасов.Форма.ФормаВыбораНовогоПодразделения", , ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьНовоеПодразделениеЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНовоеПодразделениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПодразделениеДляЗаполнения = Результат;
	Если НЕ ЗначениеЗаполнено(ПодразделениеДляЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьНовоеПодразделениеЗавершение", ЭтотОбъект, Новый Структура("ПодразделениеДляЗаполнения", ПодразделениеДляЗаполнения)), "Установить для выделенных строк новое подразделение: """ + ПодразделениеДляЗаполнения + """?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры


&НаКлиенте
Процедура УстановитьНовоеПодразделениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПодразделениеДляЗаполнения = ДополнительныеПараметры.ПодразделениеДляЗаполнения;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Идентификатор Из Элементы.Работы.ВыделенныеСтроки Цикл
		Строка = Объект.Работы.НайтиПоИдентификатору(Идентификатор);
		Строка.НовоеПодразделение = ПодразделениеДляЗаполнения;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНовыйЭтапЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЭтапДляЗаполнения = Результат;
	Если НЕ ЗначениеЗаполнено(ЭтапДляЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьНовыйЭтапЗавершение", ЭтотОбъект, Новый Структура("ЭтапДляЗаполнения", ЭтапДляЗаполнения)), "Установить для выделенных строк новый этап: """ + ЭтапДляЗаполнения + """?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоэффициент(Команда)
	
	Коэффициент = 1;
	
	ОписаниеТипов = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 2));
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("УстановитьКоэффициентЗавершение", ЭтотОбъект, Новый Структура("Коэффициент", Коэффициент)), Коэффициент, "Введите коэффициент:", ОписаниеТипов);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоэффициентЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Коэффициент = ?(Значение = Неопределено, ДополнительныеПараметры.Коэффициент, Значение);
	
	Если НЕ (Значение <> Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из Элементы.Работы.ВыделенныеСтроки Цикл
		СтрокаТЧ = Объект.Работы.НайтиПоИдентификатору(ИдентификаторСтроки);
		ЭффективныеЧасы = СтрокаТЧ.Часы * Коэффициент;
		СтрокаТЧ.Коэффициент = Коэффициент;
		СтрокаТЧ.ЭффективныеЧасы = ЭффективныеЧасы;
		СтрокаТЧ.ЭффективноеВремя = ЧасыВоВремя(ЭффективныеЧасы);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЧасыВоВремя(Часы, ДатаВремя = '00010101')
	Время = ДатаВремя + Часы * 3600;
	Возврат ?(Секунда(Время) < 30, НачалоМинуты(Время), КонецМинуты(Время) + 1);
КонецФункции

&НаКлиенте
Процедура РаспределитьВремя(Команда)
	
	ОткрытьФорму("Документ.ПриемЧасов.Форма.ФормаВыбораВремени", , ЭтаФорма,,,, Новый ОписаниеОповещения("ВыбратьВремяЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВремяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыбора = Результат;
	Если РезультатВыбора = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	РаспределитьЧасов = РезультатВыбора.НовыеЧасы;
	
	ЧасыПоСтрокам = 0;
	Для Каждого Идентификатор Из Элементы.Работы.ВыделенныеСтроки Цикл
		Строка = Объект.Работы.НайтиПоИдентификатору(Идентификатор);
		ЧасыПоСтрокам = ЧасыПоСтрокам + Строка.Часы;
	КонецЦикла;
	
	Коэффициент = РаспределитьЧасов / ЧасыПоСтрокам;
	Для Каждого Идентификатор Из Элементы.Работы.ВыделенныеСтроки Цикл
		Строка = Объект.Работы.НайтиПоИдентификатору(Идентификатор);
		Строка.Коэффициент = Коэффициент; 
		Строка.ЭффективныеЧасы = Строка.Часы * Коэффициент;
		Строка.ЭффективноеВремя = ЧасыВоВремя(Строка.ЭффективныеЧасы);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтроку(Команда)
	
	Если Элементы.Работы.ТекущаяСтрока = Неопределено Тогда 
		Сообщить("Выберите строку, которую необходимо разбить");
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ПриемЧасов.Форма.ФормаВыбораВремени", , ЭтаФорма,,,, Новый ОписаниеОповещения("РазбитьСтрокуЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтрокуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыбора = Результат;
	Если РезультатВыбора = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	НовоеВремя = РезультатВыбора.НовоеВремя;
	
	НомерСтроки = Элементы.Работы.ТекущаяСтрока;
	ТекущаяСтрока = Объект.Работы.НайтиПоИдентификатору(НомерСтроки);
	
	НоваяСтрока = Объект.Работы.Вставить(ТекущаяСтрока.НомерСтроки);
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока, , "НомерСтроки");
	НоваяСтрока.ИдентификаторСкорректированнойСтроки = Строка(Новый УникальныйИдентификатор);

	ТекущаяСтрока.ВремяОкончания = '00010101' + (ТекущаяСтрока.ВремяОкончания - НовоеВремя);
	ОбновитьПоляВремени(ТекущаяСтрока);
	
	НоваяСтрока.ВремяНачала = ТекущаяСтрока.ВремяОкончания;//ВремяНачала;
	ОбновитьПоляВремени(НоваяСтрока);
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте    
Процедура ОбновитьПоляВремени(ТекущиеДанные)
	
	ТекущиеДанные.ВремяОкончания = НачалоМинуты(ТекущиеДанные.ВремяОкончания);
	ТекущиеДанные.ВремяНачала = НачалоМинуты(ТекущиеДанные.ВремяНачала);

	Если ЗначениеЗаполнено(ТекущиеДанные.ВремяОкончания) Тогда
		Время = ТекущиеДанные.ВремяОкончания - ТекущиеДанные.ВремяНачала;
		
		ТекущиеДанные.Время = Дата(1,1,1) + Время;
		ТекущиеДанные.Часы = Время / 3600;

		Если ТекущиеДанные.Часы < ТекущиеДанные.ЭффективныеЧасы Тогда
			ТекущиеДанные.ЭффективныеЧасы = ТекущиеДанные.Часы;
			ТекущиеДанные.ЭффективноеВремя = ТекущиеДанные.Время;
		    
			Если ТекущиеДанные.Часы > 0 Тогда
				ТекущиеДанные.Коэффициент = ТекущиеДанные.ЭффективныеЧасы / ТекущиеДанные.Часы;
			Иначе
			    ТекущиеДанные.Коэффициент = 0;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Проект) Тогда
		Объект.ЭтапПроекта = УРВСервер.НайтиОсновнойЭтапДляПодстановкиВДокументы(Объект.Проект);
	Иначе
		Объект.ЭтапПроекта = ПредопределенноеЗначение("Справочник.ЭтапыПроектов.ПустаяСсылка");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДР = УРВПовтИспКлиентСервер.ПолучитьДоступностьРолей();
	ДоступныВсеПроекты = ДР.ПолныеПрава  ИЛИ ДР.Экономист; 
	Если НЕ ДоступныВсеПроекты Тогда
		СписокВыбора = ПолучитьСписокПроектовСервер();
		ДополнительныеПараметры = Новый Структура();
		
		ПоказатьВыборИзСписка(
			Новый ОписаниеОповещения("ПроектНачалоВыбора_Завершение", ЭтотОбъект, ДополнительныеПараметры), 
			СписокВыбора);		
			
		СтандартнаяОбработка = Ложь; 
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПроектНачалоВыбора_Завершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Объект.Проект = ВыбранныйЭлемент.Значение;
	Объект.ЭтапПроекта = УРВСервер.НайтиОсновнойЭтапДляПодстановкиВДокументы(Объект.Проект);
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПроектовСервер()
	Возврат ОбщегоНазначения.ПолучитьСписокДоступныхПроектов();
КонецФункции



