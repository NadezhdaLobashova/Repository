
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ = Истина Тогда
		Отказ = ДополнительныеСвойства.Отказ;
		ВозВрат;
	КонецЕсли;
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	
	Движения.РасписаниеКонсультаций.Очистить();
	Движения.РасписаниеКонсультаций.Записать();
	ДвиженияРасписаниеКонсультаций = ПолучитьДвиженияРасписаниеКонсультаций(РежимПроведения, Отказ);
	Если ДвиженияРасписаниеКонсультаций = Неопределено Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	Движения.РасписаниеКонсультаций.Загрузить(ДвиженияРасписаниеКонсультаций);
	Движения.РасписаниеКонсультаций.Записывать = Истина;
	
	Движения.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		ВозВрат;
	КонецЕсли;
	
	БоР_ОбщийМодуль.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Перепланирование Тогда
		//ОтменяемыеПланы.Очистить();
	КонецЕсли;
	Для каждого СтрокаРаботы Из Работы Цикл
		БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(СтрокаРаботы.ОписаниеXML, , , СтрокаРаботы.ОписаниеТекст);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДвиженияРасписаниеКонсультаций(РежимПроведения, Отказ) Экспорт
	
	#Область ПараметрыСообщения
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Сотрудник"						, Сотрудник);
	ПараметрыСообщения.Вставить("Сообщение_УстановитьДанные"	, ЭтотОбъект);
	#КонецОбласти	
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ДР = Бор_ПовторноеИспользованиеКлиентСервер.ПолучитьДоступностьРолей();
	ДоступностьДляПП				= БоР_ОбщийМодульКлиентСервер.ВБулево(БоР_ОбщийМодуль.ПолучитьНастройку("ЛК_ПолныеПраваЭтоПривилегированныйСотрудник"));
	ДанныеПоРолям = Справочники.Пользователи.ДанныеПоРолямСотрудникаЛК(ТекущийПользователь);
	ЭтоПривилегированныйСотрудник	= (ДанныеПоРолям["Итого"] - ДанныеПоРолям[Перечисления.РолиСотрудниковЛК.Сотрудник]) > 0 ИЛИ (ДоступностьДляПП И ДР.ПолныеПрава);
	ЭтоСотрудник					= ДанныеПоРолям[Перечисления.РолиСотрудниковЛК.Сотрудник] > 0;
	
	Если Не ЭтоПривилегированныйСотрудник Тогда
		ДоступноСотруднику = РегистрыСведений.РолиСотрудниковЛК.ПолучитьДоступныеДействия(Сотрудник);
		
		Если НЕ ЭтотОбъект.Перепланирование Тогда
			Если НЕ ДоступноСотруднику.ДоступноСоздание Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст	= "Для планирования недостаточно прав.";
				Сообщение.Поле	= "Сотрудник";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;                                                                                                                                             
				ВозВрат Неопределено;
			КонецЕсли;
		Иначе
			Если НЕ ДоступноСотруднику.ДоступноПерепланирование Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст	= "Для перепланирования недостаточно прав.";
				Сообщение.Поле	= "Сотрудник";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;                                                                                                                                             
				ВозВрат Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	#Область Запрос
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	&Сотрудник КАК Сотрудник,
	|	ТабличнаяЧасть.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ТабличнаяЧасть.ДатаВремяОкончания КАК ДатаВремяОкончания,
	|	ТабличнаяЧасть.Продолжительность,
	|	ТабличнаяЧасть.КомментарийЗаписи,
	|	ТабличнаяЧасть.Контрагент,
	|	ТабличнаяЧасть.КонтактноеЛицо,
	|	ТабличнаяЧасть.Работа,
	|	ТабличнаяЧасть.Проект,
	//|	ТабличнаяЧасть.Задание,
	//|	ТабличнаяЧасть.ПакетЧасов,
	|	ТабличнаяЧасть.Событие,
	|	ТабличнаяЧасть.КрайнийСрок,
	|	ТабличнаяЧасть.ЗапретитьЗамещение,
	|	ТабличнаяЧасть.ОписаниеXML,
	|	ТабличнаяЧасть.ОписаниеТекст
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть_Работы
	|ИЗ
	|	Документ.ПланированиеЗагрузкиЛК.Работы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаВремяНачала,
	|	ДатаВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.Сотрудник КАК Сотрудник,
	|	ТабличнаяЧасть.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ТабличнаяЧасть.ДатаВремяОкончания КАК ДатаВремяОкончания
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть_ОтменяемыеПланы
	|ИЗ
	|	Документ.ПланированиеЗагрузкиЛК.ОтменяемыеПланы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Перепланирование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаВремяНачала,
	|	ДатаВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Состояние
	|ПОМЕСТИТЬ ВТРасписаниеОтмен
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&МоментВремени,
	|			Сотрудник В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВТ_ТабличнаяЧасть_ОтменяемыеПланы.Сотрудник
	|					ИЗ
	|						ВТ_ТабличнаяЧасть_ОтменяемыеПланы)
	|				И ДатаВремяНачала >= &НачалоПериодаОтмен
	|				И ДатаВремяНачала <= &КонецПериодаОтмен) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|	И РасписаниеКонсультацийСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Свободно)
	|	И &Перепланирование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабличнаяЧасть_ОтменяемыеПланы.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТабличнаяЧасть_ОтменяемыеПланы.Сотрудник КАК Сотрудник,
	|	ВТ_ТабличнаяЧасть_ОтменяемыеПланы.ДатаВремяНачала КАК ДатаВремяНачалаОтмены,
	|	ВТ_ТабличнаяЧасть_ОтменяемыеПланы.ДатаВремяОкончания КАК ДатаВремяОкончанияОтмены,
	|	ВТРасписаниеОтмен.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТРасписаниеОтмен.ДатаВремяНачала КАК П_ДатаВремяНачала,
	|	ВТРасписаниеОтмен.ДатаВремяОкончания КАК П_ДатаВремяОкончания,
	|	ВТРасписаниеОтмен.Состояние КАК П_Состояние,
	|	ВЫБОР
	|		КОГДА ВТРасписаниеОтмен.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Запланировано)
	|			ТОГДА ИСТИНА
	|		КОГДА ВТРасписаниеОтмен.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Блокировка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МожноОтменить
	|ПОМЕСТИТЬ ВТПересеченияОтмен
	|ИЗ
	|	ВТРасписаниеОтмен КАК ВТРасписаниеОтмен
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть_ОтменяемыеПланы КАК ВТ_ТабличнаяЧасть_ОтменяемыеПланы
	|		ПО (&Перепланирование)
	|			И ВТРасписаниеОтмен.Сотрудник = ВТ_ТабличнаяЧасть_ОтменяемыеПланы.Сотрудник
	|			И ВТРасписаниеОтмен.ДатаВремяНачала < ВТ_ТабличнаяЧасть_ОтменяемыеПланы.ДатаВремяОкончания
	|			И ВТРасписаниеОтмен.ДатаВремяОкончания > ВТ_ТабличнаяЧасть_ОтменяемыеПланы.ДатаВремяНачала
	|ГДЕ
	|	&Перепланирование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТПересеченияОтмен.Сотрудник КАК Сотрудник,
	|	ВТПересеченияОтмен.ДатаВремяНачала КАК ДатаВремяНачала
	|ПОМЕСТИТЬ ВТСлотыДляОтмены
	|ИЗ
	|	ВТПересеченияОтмен КАК ВТПересеченияОтмен
	|ГДЕ
	|	ВТПересеченияОтмен.МожноОтменить
	|	И &Перепланирование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаВремяНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Продолжительность,
	|	РасписаниеКонсультацийСрезПоследних.Состояние,
	|	РасписаниеКонсультацийСрезПоследних.Контрагент,
	|	РасписаниеКонсультацийСрезПоследних.КонтактноеЛицо,
	|	РасписаниеКонсультацийСрезПоследних.ВидУслуги,
	|	РасписаниеКонсультацийСрезПоследних.ТемаВопроса,
	|	РасписаниеКонсультацийСрезПоследних.Работа,
	|	РасписаниеКонсультацийСрезПоследних.Проект,
	//|	РасписаниеКонсультацийСрезПоследних.Задание,
	//|	РасписаниеКонсультацийСрезПоследних.ПакетЧасов,
	|	РасписаниеКонсультацийСрезПоследних.Событие,
	|	РасписаниеКонсультацийСрезПоследних.ЗапретитьЗамещение
	|ПОМЕСТИТЬ ВТРасписаниеЗаПериод
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&МоментВремени,
	|			Сотрудник = &Сотрудник
	|				И ДатаВремяНачала >= &НачалоПериода
	|				И ДатаВремяНачала <= &КонецПериода) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|	И РасписаниеКонсультацийСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Свободно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасписаниеЗаПериод.Сотрудник,
	|	ВТРасписаниеЗаПериод.ДатаВремяНачала,
	|	ВТРасписаниеЗаПериод.ДатаВремяОкончания,
	|	ВТРасписаниеЗаПериод.Продолжительность,
	|	ВТРасписаниеЗаПериод.Состояние,
	|	ВТРасписаниеЗаПериод.Контрагент,
	|	ВТРасписаниеЗаПериод.КонтактноеЛицо,
	|	ВТРасписаниеЗаПериод.ВидУслуги,
	|	ВТРасписаниеЗаПериод.ТемаВопроса,
	|	ВТРасписаниеЗаПериод.Работа,
	|	ВТРасписаниеЗаПериод.Проект,
	//|	ВТРасписаниеЗаПериод.Задание,
	//|	ВТРасписаниеЗаПериод.ПакетЧасов,
	|	ВТРасписаниеЗаПериод.Событие,
	|	ВТРасписаниеЗаПериод.ЗапретитьЗамещение
	|ПОМЕСТИТЬ ВТРасписаниеЗаПериодНеОтмененные
	|ИЗ
	|	ВТРасписаниеЗаПериод КАК ВТРасписаниеЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСлотыДляОтмены КАК ВТСлотыДляОтмены
	|		ПО ВТРасписаниеЗаПериод.Сотрудник = ВТСлотыДляОтмены.Сотрудник
	|			И ВТРасписаниеЗаПериод.ДатаВремяНачала = ВТСлотыДляОтмены.ДатаВремяНачала
	|			И (&Перепланирование)
	|ГДЕ
	|	ВТСлотыДляОтмены.ДатаВремяНачала ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТРасписаниеЗаПериод.ДатаВремяНачала,
	|	ВТРасписаниеЗаПериод.ДатаВремяОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабличнаяЧасть_Работы.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТабличнаяЧасть_Работы.Сотрудник КАК Сотрудник,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяОкончания,
	|	ВТ_ТабличнаяЧасть_Работы.Продолжительность,
	|	ВТ_ТабличнаяЧасть_Работы.Контрагент,
	|	ВТ_ТабличнаяЧасть_Работы.КонтактноеЛицо,
	|	ВТ_ТабличнаяЧасть_Работы.КомментарийЗаписи,
	|	ВТ_ТабличнаяЧасть_Работы.Работа,
	|	ВТ_ТабличнаяЧасть_Работы.Проект,
	//|	ВТ_ТабличнаяЧасть_Работы.Задание,
	//|	ВТ_ТабличнаяЧасть_Работы.ПакетЧасов,
	|	ВТ_ТабличнаяЧасть_Работы.Событие,
	|	ВТРасписаниеЗаПериодНеОтмененные.ДатаВремяНачала КАК П_ДатаВремяНачала,
	|	ВТРасписаниеЗаПериодНеОтмененные.ДатаВремяОкончания КАК П_ДатаВремяОкончания,
	|	ВТРасписаниеЗаПериодНеОтмененные.Состояние КАК П_Состояние,
	|	ВТРасписаниеЗаПериодНеОтмененные.Контрагент КАК П_Контрагент,
	|	ВТРасписаниеЗаПериодНеОтмененные.КонтактноеЛицо КАК П_КонтактноеЛицо,
	|	ВТРасписаниеЗаПериодНеОтмененные.ВидУслуги КАК П_ВидУслуги,
	|	ВТРасписаниеЗаПериодНеОтмененные.ТемаВопроса КАК П_ТемаВопроса,
	|	ВТРасписаниеЗаПериодНеОтмененные.Работа КАК П_Работа,
	|	ВТРасписаниеЗаПериодНеОтмененные.Проект КАК П_Проект,
	|	ВЫБОР
	|		КОГДА ВТРасписаниеЗаПериодНеОтмененные.ЗапретитьЗамещение
	|			ТОГДА ЛОЖЬ
	|		КОГДА ВТРасписаниеЗаПериодНеОтмененные.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Запланировано)
	|			ТОГДА &Замещение
	|		КОГДА ВТРасписаниеЗаПериодНеОтмененные.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Блокировка)
	|			ТОГДА &Замещение
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МожноОтменить
	|ПОМЕСТИТЬ ВТПересечения
	|ИЗ
	|	ВТРасписаниеЗаПериодНеОтмененные КАК ВТРасписаниеЗаПериодНеОтмененные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть_Работы КАК ВТ_ТабличнаяЧасть_Работы
	|		ПО ВТРасписаниеЗаПериодНеОтмененные.ДатаВремяНачала < ВТ_ТабличнаяЧасть_Работы.ДатаВремяОкончания
	|			И ВТРасписаниеЗаПериодНеОтмененные.ДатаВремяОкончания > ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСлотыДляОтмены.Сотрудник КАК Сотрудник,
	|	ВТСлотыДляОтмены.ДатаВремяНачала КАК ДатаВремяНачала
	|ПОМЕСТИТЬ ВТСлотыДляОтменыВРегистре
	|ИЗ
	|	ВТСлотыДляОтмены КАК ВТСлотыДляОтмены
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть_Работы КАК ВТ_ТабличнаяЧасть_Работы
	|		ПО ВТСлотыДляОтмены.Сотрудник = ВТ_ТабличнаяЧасть_Работы.Сотрудник
	|			И ВТСлотыДляОтмены.ДатаВремяНачала = ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала
	|			И (&Перепланирование)
	|ГДЕ
	|	ВТ_ТабличнаяЧасть_Работы.Сотрудник ЕСТЬ NULL
	|	И &Перепланирование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПересеченияОтмен.НомерСтроки КАК НомерСтроки,
	|	ВТПересеченияОтмен.ДатаВремяНачалаОтмены КАК ДатаВремяНачалаОтмены,
	|	ВТПересеченияОтмен.Сотрудник КАК Сотрудник,
	|	ВТПересеченияОтмен.ДатаВремяОкончанияОтмены КАК ДатаВремяОкончанияОтмены,
	|	ВТПересеченияОтмен.П_ДатаВремяНачала,
	|	ВТПересеченияОтмен.П_ДатаВремяОкончания,
	|	ВТПересеченияОтмен.П_Состояние
	|ИЗ
	|	ВТПересеченияОтмен КАК ВТПересеченияОтмен
	|ГДЕ
	|	НЕ ВТПересеченияОтмен.МожноОтменить
	|	И &Перепланирование
	|ИТОГИ
	|	МАКСИМУМ(ДатаВремяНачалаОтмены),
	|	МАКСИМУМ(Сотрудник),
	|	МАКСИМУМ(ДатаВремяОкончанияОтмены)
	|ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабличнаяЧасть_Работы.НомерСтроки КАК НомерСтроки1,
	|	ВТ_ТабличнаяЧасть_Работы.Сотрудник КАК Сотрудник,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяОкончания КАК ДатаВремяОкончания,
	|	ВТ_ТабличнаяЧасть_Работы.Продолжительность КАК Продолжительность,
	|	ВТ_ТабличнаяЧасть_Работы2.НомерСтроки КАК НомерСтроки2,
	|	ВТ_ТабличнаяЧасть_Работы2.ДатаВремяНачала КАК П_ДатаВремяНачала,
	|	ВТ_ТабличнаяЧасть_Работы2.ДатаВремяОкончания КАК П_ДатаВремяОкончания
	|ИЗ
	|	ВТ_ТабличнаяЧасть_Работы КАК ВТ_ТабличнаяЧасть_Работы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть_Работы КАК ВТ_ТабличнаяЧасть_Работы2
	|		ПО ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала < ВТ_ТабличнаяЧасть_Работы2.ДатаВремяОкончания
	|			И ВТ_ТабличнаяЧасть_Работы.ДатаВремяОкончания > ВТ_ТабличнаяЧасть_Работы2.ДатаВремяНачала
	|			И ВТ_ТабличнаяЧасть_Работы.НомерСтроки < ВТ_ТабличнаяЧасть_Работы2.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки1,
	|	НомерСтроки2
	|ИТОГИ
	|	МАКСИМУМ(Сотрудник),
	|	МАКСИМУМ(ДатаВремяНачала),
	|	МАКСИМУМ(ДатаВремяОкончания)
	|ПО
	|	НомерСтроки1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПересечения.НомерСтроки КАК НомерСтроки,
	|	ВТПересечения.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТПересечения.Сотрудник КАК Сотрудник,
	|	ВТПересечения.ДатаВремяОкончания КАК ДатаВремяОкончания,
	|	ВТПересечения.Продолжительность,
	|	ВТПересечения.Контрагент,
	|	ВТПересечения.КонтактноеЛицо,
	|	ВТПересечения.КомментарийЗаписи,
	|	ВТПересечения.Работа,
	|	ВТПересечения.Проект,
	//|	ВТПересечения.Задание,
	//|	ВТПересечения.ПакетЧасов,
	|	ВТПересечения.Событие,
	|	ВТПересечения.П_ДатаВремяНачала,
	|	ВТПересечения.П_ДатаВремяОкончания,
	|	ВТПересечения.П_Состояние,
	|	ВТПересечения.П_Контрагент,
	|	ВТПересечения.П_КонтактноеЛицо,
	|	ВТПересечения.П_ВидУслуги,
	|	ВТПересечения.П_ТемаВопроса,
	|	ВТПересечения.П_Работа,
	|	ВТПересечения.П_Проект
	|ИЗ
	|	ВТПересечения КАК ВТПересечения
	|ГДЕ
	|	НЕ ВТПересечения.МожноОтменить
	|ИТОГИ
	|	МАКСИМУМ(ДатаВремяНачала),
	|	МАКСИМУМ(Сотрудник),
	|	МАКСИМУМ(ДатаВремяОкончания)
	|ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Сотрудник КАК Сотрудник,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяНачала КАК ДатаВремяНачала,
	|	ВТ_ТабличнаяЧасть_Работы.ДатаВремяОкончания КАК ДатаВремяОкончания,
	|	ВТ_ТабличнаяЧасть_Работы.Продолжительность КАК Продолжительность,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Запланировано) КАК Состояние,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть_Работы.Работа.ТребуетУказанияКонтрагента
	|			ТОГДА ВТ_ТабличнаяЧасть_Работы.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Абоненты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть_Работы.Работа.ТребуетУказанияКонтрагента
	|			ТОГДА ВТ_ТабличнаяЧасть_Работы.КонтактноеЛицо
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПользователиСервисов.ПустаяСсылка)
	|	КОНЕЦ КАК КонтактноеЛицо,
	|	ВТ_ТабличнаяЧасть_Работы.КомментарийЗаписи КАК КомментарийЗаписи,
	|	ВТ_ТабличнаяЧасть_Работы.Проект КАК Проект,
	|	ВТ_ТабличнаяЧасть_Работы.Работа КАК Работа,
	//|	ВТ_ТабличнаяЧасть_Работы.Задание КАК Задание,
	//|	ВТ_ТабличнаяЧасть_Работы.ПакетЧасов КАК ПакетЧасов,
	|	ВТ_ТабличнаяЧасть_Работы.Событие КАК Событие,
	|	ВТ_ТабличнаяЧасть_Работы.КрайнийСрок,
	|	ВТ_ТабличнаяЧасть_Работы.ЗапретитьЗамещение,
	|	ВТ_ТабличнаяЧасть_Работы.ОписаниеXML,
	|	ВТ_ТабличнаяЧасть_Работы.ОписаниеТекст
	|ИЗ
	|	ВТ_ТабличнаяЧасть_Работы КАК ВТ_ТабличнаяЧасть_Работы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВТСлотыДляОтменыВРегистре.Сотрудник,
	|	ВТСлотыДляОтменыВРегистре.ДатаВремяНачала,
	|	ДОБАВИТЬКДАТЕ(ВТСлотыДляОтменыВРегистре.ДатаВремяНачала, МИНУТА, &ШагСеткиМин),
	|	&ШагСеткиМин,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Свободно),
	|	ЗНАЧЕНИЕ(Справочник.Абоненты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ПользователиСервисов.ПустаяСсылка),
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка),
	//|	ЗНАЧЕНИЕ(Документ.франЗадание.ПустаяСсылка),
	//|	ЗНАЧЕНИЕ(Документ.ПакетЧасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Документ.Обращение.ПустаяСсылка),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЛОЖЬ,
	|	"""",
	|	""""
	|ИЗ
	|	ВТСлотыДляОтменыВРегистре КАК ВТСлотыДляОтменыВРегистре
	|ГДЕ
	|	&Перепланирование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ВТПересечения.Сотрудник,
	|	ВТПересечения.П_ДатаВремяНачала,
	|	ДОБАВИТЬКДАТЕ(ВТПересечения.П_ДатаВремяНачала, МИНУТА, &ШагСеткиМин),
	|	&ШагСеткиМин,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Свободно),
	|	ЗНАЧЕНИЕ(Справочник.Абоненты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ПользователиСервисов.ПустаяСсылка),
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка),
	//|	ЗНАЧЕНИЕ(Документ.франЗадание.ПустаяСсылка),
	//|	ЗНАЧЕНИЕ(Документ.ПакетЧасов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Документ.Обращение.ПустаяСсылка),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЛОЖЬ,
	|	"""",
	|	""""
	|ИЗ
	|	ВТПересечения КАК ВТПересечения
	|ГДЕ
	|	&Замещение
	|	И ВТПересечения.МожноОтменить
	|	И НЕ(ВТПересечения.Сотрудник = &Сотрудник
	|				И ВТПересечения.П_ДатаВремяНачала = ВТПересечения.ДатаВремяНачала)";
	#КонецОбласти	
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		МоментВремени = Неопределено;
	Иначе
		МоментВремени = МоментВремени();
	КонецЕсли;
	
	Границы = ПолучитьГраницыПериода(Работы);
	ШагСеткиМин = Бор_ПовторноеИспользованиеКлиентСервер.ПолучитьШагСеткиРасписания();
	Запрос.УстановитьПараметр("МоментВремени"		, МоментВремени);
	Запрос.УстановитьПараметр("Период"				, Дата);
	Запрос.УстановитьПараметр("Ссылка"				, Ссылка);
	
	Запрос.УстановитьПараметр("Сотрудник"			, Сотрудник);
	
	Запрос.УстановитьПараметр("Замещение"			, Замещение);
	Запрос.УстановитьПараметр("ШагСеткиМин"			, ШагСеткиМин);
	Запрос.УстановитьПараметр("НачалоПериода"		, Границы.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"		, Границы.КонецПериода);
	
	ГраницыОтмен = ПолучитьГраницыПериода(ОтменяемыеПланы);
	Запрос.УстановитьПараметр("НачалоПериодаОтмен"	, ГраницыОтмен.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериодаОтмен"	, ГраницыОтмен.КонецПериода);
	Запрос.УстановитьПараметр("Перепланирование"	, Перепланирование);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	РезультатСамоПересечения = РезультатыЗапроса[РезультатыЗапроса.Количество() - 3];
	ВыборкаСтрок = РезультатСамоПересечения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтрок.Следующий() Цикл
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Работы[" + (ВыборкаСтрок.НомерСтроки1 - 1) + "].ДатаВремяНачала");
		ПараметрыСообщения.Вставить("ДатаВремяНачала"		, ВыборкаСтрок.ДатаВремяНачала);
		ПараметрыСообщения.Вставить("ДатаВремяОкончания"	, ВыборкаСтрок.ДатаВремяОкончания);
		ПараметрыСообщения.Вставить("Сотрудник"				, ВыборкаСтрок.Сотрудник);
		ПараметрыСообщения.Вставить("НомерСтроки1"			, ВыборкаСтрок.НомерСтроки1);
		ШаблонСообщения = "Строка &НомерСтроки1 [&Сотрудник, &ДатаВремяНачала - &ДатаВремяОкончания] конфликтует с другими строками:";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		
		ВыборкаДетали = ВыборкаСтрок.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Работы[" + (ВыборкаДетали.НомерСтроки2 - 1) + "].ДатаВремяНачала");
			ПараметрыСообщения.Вставить("П_ДатаВремяНачала"		, ВыборкаДетали.П_ДатаВремяНачала);
			ПараметрыСообщения.Вставить("П_ДатаВремяОкончания"	, ВыборкаДетали.П_ДатаВремяОкончания);
			ПараметрыСообщения.Вставить("НомерСтроки2"			, ВыборкаДетали.НомерСтроки2);
			ШаблонСообщения = "	Строка &НомерСтроки2 [&Сотрудник, &П_ДатаВремяНачала - &П_ДатаВремяОкончания]";
			БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
			Отказ = Истина;
		КонецЦикла;
	КонецЦикла;
	
	РезультатПересечения = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2];
	ВыборкаСтрок = РезультатПересечения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтрок.Следующий() Цикл
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Работы[" + (ВыборкаСтрок.НомерСтроки - 1) + "].ДатаВремяНачала");
		ПараметрыСообщения.Вставить("ДатаВремяНачала"		, ВыборкаСтрок.ДатаВремяНачала);
		ПараметрыСообщения.Вставить("ДатаВремяОкончания"	, ВыборкаСтрок.ДатаВремяОкончания);
		ПараметрыСообщения.Вставить("Сотрудник"				, ВыборкаСтрок.Сотрудник);
		ПараметрыСообщения.Вставить("НомерСтроки"			, ВыборкаСтрок.НомерСтроки);
		ШаблонСообщения = "Строка &НомерСтроки [&Сотрудник, &ДатаВремяНачала - &ДатаВремяОкончания] конфликтует с существующими записями:";
		
		ВыборкаДетали = ВыборкаСтрок.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ВыборкаДетали.П_Состояние = Перечисления.СостоянияЭлементаРасписанияЛК.ЗаписанКлиент Тогда
				ПараметрыСообщения.Вставить("П_ДатаВремяНачала"		, ВыборкаДетали.П_ДатаВремяНачала);
				ПараметрыСообщения.Вставить("П_ДатаВремяОкончания"	, ВыборкаДетали.П_ДатаВремяОкончания);
				ПараметрыСообщения.Вставить("П_Контрагент"			, ВыборкаДетали.П_Контрагент);
				ШаблонСообщения = ШаблонСообщения + " &ПС " + 
				БоР_ОбщийМодуль.СформироватьТекстСообщения("	Запись [&Сотрудник, &П_ДатаВремяНачала - &П_ДатаВремяОкончания]. Уже записан контрагент &П_Контрагент", ПараметрыСообщения);
				Отказ = Истина;
			Иначе
				ПараметрыСообщения.Вставить("П_ДатаВремяНачала"		, ВыборкаДетали.П_ДатаВремяНачала);
				ПараметрыСообщения.Вставить("П_ДатаВремяОкончания"	, ВыборкаДетали.П_ДатаВремяОкончания);
				ПараметрыСообщения.Вставить("П_Состояние"			, ВыборкаДетали.П_Состояние);
				ШаблонСообщения = ШаблонСообщения + " &ПС " + 
				БоР_ОбщийМодуль.СформироватьТекстСообщения("	Запись [&Сотрудник, &П_ДатаВремяНачала - &П_ДатаВремяОкончания]. Установлено состояние &П_Состояние", ПараметрыСообщения);
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
	КонецЦикла;
	
	РезультатНеОтменяемых = РезультатыЗапроса[РезультатыЗапроса.Количество() - 4];
	ВыборкаСтрок = РезультатНеОтменяемых.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтрок.Следующий() Цикл
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "ОтменяемыеПланы[" + (ВыборкаСтрок.НомерСтроки - 1) + "].ДатаВремяНачала");
		ПараметрыСообщения.Вставить("О_ДатаВремяНачала"		, ВыборкаСтрок.ДатаВремяНачалаОтмены);
		ПараметрыСообщения.Вставить("О_ДатаВремяОкончания"	, ВыборкаСтрок.ДатаВремяОкончанияОтмены);
		ПараметрыСообщения.Вставить("Сотрудник"				, ВыборкаСтрок.Сотрудник);
		ПараметрыСообщения.Вставить("НомерСтроки"			, ВыборкаСтрок.НомерСтроки);
		ШаблонСообщения = "Строка &НомерСтроки [&Сотрудник, &О_ДатаВремяНачала - &О_ДатаВремяОкончания]- записи невозможно отменить:";
		
		ВыборкаДетали = ВыборкаСтрок.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ВыборкаДетали.П_Состояние = Перечисления.СостоянияЭлементаРасписанияЛК.ЗаписанКлиент Тогда
				ПараметрыСообщения.Вставить("П_ДатаВремяНачала"		, ВыборкаДетали.П_ДатаВремяНачала);
				ПараметрыСообщения.Вставить("П_ДатаВремяОкончания"	, ВыборкаДетали.П_ДатаВремяОкончания);
				ПараметрыСообщения.Вставить("П_Контрагент"			, ВыборкаДетали.П_Контрагент);
				ШаблонСообщения = ШаблонСообщения + " &ПС " + 
				БоР_ОбщийМодуль.СформироватьТекстСообщения("	Запись [&Сотрудник, &П_ДатаВремяНачала - &П_ДатаВремяОкончания]. Уже записан контрагент &П_Контрагент", ПараметрыСообщения);
				Отказ = Истина;
			Иначе
				ПараметрыСообщения.Вставить("П_ДатаВремяНачала"		, ВыборкаДетали.П_ДатаВремяНачала);
				ПараметрыСообщения.Вставить("П_ДатаВремяОкончания"	, ВыборкаДетали.П_ДатаВремяОкончания);
				ПараметрыСообщения.Вставить("П_Состояние"			, ВыборкаДетали.П_Состояние);
				ШаблонСообщения = ШаблонСообщения + " &ПС " + 
				БоР_ОбщийМодуль.СформироватьТекстСообщения("	Запись [&Сотрудник, &П_ДатаВремяНачала - &П_ДатаВремяОкончания]. Установлено состояние &П_Состояние", ПараметрыСообщения);
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
	КонецЦикла;
	
	Если Отказ Тогда
		ВозВрат Неопределено
	КонецЕсли;
	
	РезультатЗапроса = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	ВозВрат РезультатЗапроса.Выгрузить();
	
КонецФункции

// БоР : Вычисляет минимум и максимум дат по ТЧ 17.07.2017 22:11:12
Функция ПолучитьГраницыПериода(ТабличнаяЧасть) Экспорт
	НачалоПериода = '39991101';
	КонецПериода = '00010101';
	Для каждого Строка_ТабличнаяЧасть Из ТабличнаяЧасть Цикл
		НачалоПериода = Мин(НачалоПериода, Строка_ТабличнаяЧасть.ДатаВремяНачала);
		КонецПериода = Макс(КонецПериода, Строка_ТабличнаяЧасть.ДатаВремяОкончания);
	КонецЦикла;
	
	Границы = Новый Структура;
	Границы.Вставить("НачалоПериода", 	НачалоПериода);
	Границы.Вставить("КонецПериода", 	КонецПериода);
	ВозВрат Границы;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	БоР_ОбщийМодуль.УстановитьПроверкуЗаполненияРеквизита(ПроверяемыеРеквизиты, "ОтменяемыеПланы", Перепланирование);
	Для каждого СтрокаДокумента Из Работы Цикл
		Если СтрокаДокумента.Работа.ТребуетУказанияКонтрагента Тогда
			Если Не ЗначениеЗаполнено(СтрокаДокумента.Контрагент) Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не заполнено поле ""Контрагент"" в строке " + СтрокаДокумента.НомерСтроки + " табличной части ""Работа"".";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Поле = "Работы[" + (СтрокаДокумента.НомерСтроки - 1) + "].Контрагент";
				Сообщение.Сообщить();
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаДокумента.КонтактноеЛицо) Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не заполнено поле ""КонтактноеЛицо"" в строке " + СтрокаДокумента.НомерСтроки + " табличной части ""Работа"".";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Поле = "Работы[" + (СтрокаДокумента.НомерСтроки - 1) + "].КонтактноеЛицо";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
