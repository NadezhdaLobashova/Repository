#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Взаимодействия.ЗаполнитьРеквизитыПоУмолчанию(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		ИсходныеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПометкаУдаления");
	Иначе 
		ИсходныеРеквизиты = Новый Структура;
		ИсходныеРеквизиты.Вставить("ПометкаУдаления", Ложь);
    КонецЕсли;
    
    Входящий = Не ЦентрИдей.ЭтоКомментарийСлужбыПоддержки(Автор);
    
    ЗначениеОписания = ОписаниеХранилище.Получить();
	Если ТипЗнч(ЗначениеОписания) = Тип("ФорматированныйДокумент") Тогда 
		Описание = ЗначениеОписания.ПолучитьТекст();
	КонецЕсли;
    
    ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
    
    Если Не ЗначениеЗаполнено(Номер) Тогда
        УстановитьНовыйНомер();
    КонецЕсли;
    
    Если Не ЗначениеЗаполнено(Сервис) Тогда
    	Если ДополнительныеСвойства.Свойство("Предмет") Тогда
			ТекущийПредмет = ДополнительныеСвойства.Предмет;
            Принадлежность = БазаЗнаний.ОсновнаяПринадлежностьКарточки(ТекущийПредмет);
            Сервис = Принадлежность.Сервис;
            Витрина = Принадлежность.Витрина;
        КонецЕсли;
    КонецЕсли;
    
    Если Не ЗначениеЗаполнено(Витрина) Тогда
        Витрина = БазаЗнанийПовтИсп.ОсновнаяВитринаСервиса(Сервис);
    КонецЕсли;
    
    
	Если Не ЭтоНовый() Тогда
		Если ИсходныеРеквизиты.ПометкаУдаления И Не ПометкаУдаления Тогда
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
		КонецЕсли;
	КонецЕсли;
    
    АвторПредставление = Строка(Автор);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = ТекущаяДатаСеанса();
	Ответственный = Пользователи.АвторизованныйПользователь();
	Автор = Пользователи.АвторизованныйПользователь();
	
	ОписаниеХранилище = Новый ХранилищеЗначения(ОбъектКопирования.ОписаниеХранилище.Получить(), Новый СжатиеДанных(9));
	ОписаниеАвторИзменения = Неопределено;
	ОписаниеДатаИзменения = Неопределено;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВзаимодействияУСП.ПриЗаписи(ЭтотОбъект);
    
    Если ДополнительныеСвойства.ЭтоНовый Тогда
		Если ДополнительныеСвойства.Свойство("Предмет") Тогда
			ТекущийПредмет = ДополнительныеСвойства.Предмет;
		Иначе
			ТекущийПредмет = ВзаимодействияУСП.ПредметВзаимодействия(Ссылка);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ТекущийПредмет) Тогда
			Возврат;
        КонецЕсли;
        
        ДанныеКонтекста = Новый Структура;
        ДанныеКонтекста.Вставить("Описание", Описание);
        
        КонтекстСобытия = БизнесСобытия.СформироватьКонтекстСобытия(ДанныеКонтекста);
        ВидСобытия = ?(Входящий, Справочники.ВидыБизнесСобытий.ПолученКомментарийОтПользователя, Справочники.ВидыБизнесСобытий.ОтправленКомментарийПользователю);
        БизнесСобытия.ЗарегистрироватьСобытие(ТекущийПредмет, ВидСобытия, КонтекстСобытия,,
            СтрШаблон(НСтр("ru='%1
                           |Описание: %2'"), Строка(ВидСобытия), БизнесСобытия.ПредставлениеЗначения(Описание)), Ссылка);
    КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
    КонецЕсли;
    
    Если ДополнительныеСвойства.Свойство("Предмет") Тогда
        ТекущийПредмет = ДополнительныеСвойства.Предмет;
    Иначе
        ТекущийПредмет = ВзаимодействияУСП.ПредметВзаимодействия(Ссылка);
    КонецЕсли;
    
    Если ТипЗнч(ТекущийПредмет) = Тип("СправочникСсылка.Пожелания") Тогда
        
        РегистрыНакопления.ЗначенияПоказателей.ДобавитьДвижение(
            Движения.ЗначенияПоказателей, Дата, ТекущийПредмет, Перечисления.ПоказателиКарточек.КоличествоКомментариев, 1);    
            
        НоваяЗапись = РегистрыСведений.ИзбранныеПожелания.СоздатьМенеджерЗаписи();
        НоваяЗапись.Пожелание = ТекущийПредмет;
        НоваяЗапись.Пользователь = Автор;
        НоваяЗапись.ДатаИзменения = ТекущаяУниверсальнаяДата();
        НоваяЗапись.Записать();
        Если Не ЗначениеЗаполнено(ВзаимодействиеОснование) Тогда
            РегистрыСведений.ОповещенияИнформационногоЦентра.ДобавитьОповещение(Ссылка);
        КонецЕсли;
        
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Вызывается при заполнении документа на основании
//
Процедура ЗаполнитьКонтакты(Контакты) Экспорт
	
	Если Не Взаимодействия.КонтактыЗаполнены(Контакты) Тогда
		Возврат;
	КонецЕсли;
	
	// В телефонный звонок переносим первого контакта
	Параметр = Контакты[0];
	Если ТипЗнч(Параметр) = Тип("Структура") Тогда
		АбонентКонтакт       = Параметр.Контакт;
		АбонентКакСвязаться  = Параметр.Адрес;
		АбонентПредставление = Параметр.Представление;
	Иначе
		АбонентКонтакт = Параметр;
	КонецЕсли;
	
	Взаимодействия.ДозаполнитьПоляКонтактов(АбонентКонтакт, АбонентПредставление, 
		АбонентКакСвязаться, Перечисления.ТипыКонтактнойИнформации.Телефон);
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли



