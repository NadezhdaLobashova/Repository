
#Область Обработка_Описания
&НаКлиенте
Процедура ОписаниеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(ДанныеСобытия.Href);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьОписание(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОписаниеXML"					, Объект.ОписаниеXML);
	
	ДополнительныеПараметры = Новый Структура;
	
	ИмяФормыДляОткрытия = "Обработка.РасписаниеЛК.Форма.ФормаВводаОписания";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "РедактироватьОписание_Завершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьОписание_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	Объект.ОписаниеXML	= Результат.ОписаниеXML;
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(Объект.ОписаниеXML, ОписаниеФД, ОписаниеHTML);
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ПодобратьИзРасписания(Команда)
	ДатаРасписания = НачалоДня(Объект.ДатаВремяНачала);
	Если Не ЗначениеЗаполнено(ДатаРасписания) Тогда
		ДатаРасписания = НачалоДня(Объект.Дата);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаРасписания) Тогда
		ДатаРасписания = НачалоДня(ТекущаяДата());
	КонецЕсли;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Дата"				, ДатаРасписания);
	ПараметрыФормы.Вставить("Сотрудник"			, Объект.Сотрудник);
	ПараметрыФормы.Вставить("ДатаАктуальности"	, Объект.Дата);
	ПараметрыФормы.Вставить("ДокументСсылка"	, Объект.Ссылка);
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьИзРасписанияЗавершение", ЭтаФорма);
	//ОткрытьФорму("Документ.ВыполнениеКонсультацииЛК.Форма.ФормаПодбораРасписания", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ДополнительныеПараметры = Новый Структура;
	ИмяФормыДляОткрытия = "Документ.ВыполнениеКонсультацииЛК.Форма.ФормаПодбораРасписания";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "ПодобратьИзРасписанияЗавершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьИзРасписанияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураВозВрата = Результат;
	Если ТипЗнч(СтруктураВозВрата) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	
	Объект.Сотрудник		= СтруктураВозВрата.Сотрудник;
	Объект.ДатаВремяНачала	= СтруктураВозВрата.ДатаВремяНачала;
	Объект.Контрагент		= СтруктураВозВрата.Контрагент;
	Объект.КонтактноеЛицо	= СтруктураВозВрата.КонтактноеЛицо;
	Объект.ВидУслуги		= СтруктураВозВрата.ВидУслуги;
	Объект.ТемаВопроса		= СтруктураВозВрата.ТемаВопроса;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаВремяНачалаФакт) Тогда
		Объект.ДатаВремяНачалаФакт	= СтруктураВозВрата.ДатаВремяНачала;
		БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяНачалаПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяНачалаФакт", "Объект", Объект.Ссылка, Неопределено, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСвязанныеДанные();
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(Объект.ОписаниеXML, , ОписаниеHTML, );
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьСвязанныеДанные();
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(Объект.ОписаниеXML, , ОписаниеHTML, );
КонецПроцедуры

// БоР :  24.07.2017 3:06:34
&НаСервере
Процедура ЗаполнитьСвязанныеДанные() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.Контрагент,
	|	РасписаниеКонсультацийСрезПоследних.КонтактноеЛицо,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Продолжительность,
	|	РасписаниеКонсультацийСрезПоследних.Работа,
	|	РасписаниеКонсультацийСрезПоследних.Проект,
	//|	РасписаниеКонсультацийСрезПоследних.Задание,
	//|	РасписаниеКонсультацийСрезПоследних.ПакетЧасов,
	|	РасписаниеКонсультацийСрезПоследних.Событие,
	|	РасписаниеКонсультацийСрезПоследних.КрайнийСрок
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&Момент,
	|			ДатаВремяНачала = &ДатаВремяНачала
	|				И Сотрудник = &Сотрудник) КАК РасписаниеКонсультацийСрезПоследних";
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Момент = Новый МоментВремени(Объект.Дата, Объект.Ссылка);
	Иначе
		Момент = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаВремяНачала"	, Объект.ДатаВремяНачала);
	Запрос.УстановитьПараметр("Момент"			, Момент);
	Запрос.УстановитьПараметр("Сотрудник"		, Объект.Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ВыборкаДетальныеЗаписи);
		ВозВрат;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьСвязанныеДанные();
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяНачалаПриИзменении(Элемент)
	ЗаполнитьСвязанныеДанные();
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяНачалаФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяНачалаПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяНачалаФакт", "Объект", Объект.Ссылка, Неопределено, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ПродолжительностьПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ПродолжительностьФакт", "Объект", Объект.Ссылка, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяОкончанияФактПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяОкончанияПриИзменении(Объект.ДатаВремяНачалаФакт, Объект.ДатаВремяОкончанияФакт, Объект.ПродолжительностьФакт, "ДатаВремяОкончанияФакт", "Объект", Объект.Ссылка, Ложь);
КонецПроцедуры

