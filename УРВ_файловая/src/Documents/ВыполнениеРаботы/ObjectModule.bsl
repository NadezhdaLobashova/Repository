
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ = Истина Тогда
		Отказ = ДополнительныеСвойства.Отказ;
		ВозВрат;
	КонецЕсли;
	
	Движения.РасписаниеКонсультаций.Очистить();
	Движения.РасписаниеКонсультаций.Записать();
	Движения.РезультатыКонсультаций.Очистить();
	Движения.РезультатыКонсультаций.Записать();
	
	ДвиженияДокумента = ПолучитьДвижения(РежимПроведения, Отказ);
	Если ДвиженияДокумента = Неопределено Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	
	ДвиженияРасписаниеКонсультаций = ДвиженияДокумента["РасписаниеКонсультаций"];
	Движения.РасписаниеКонсультаций.Загрузить(ДвиженияРасписаниеКонсультаций);
	Движения.РасписаниеКонсультаций.Записывать = Истина;
	
	ДвиженияРезультатыКонсультаций = ДвиженияДокумента["РезультатыКонсультаций"];
	Движения.РезультатыКонсультаций.Загрузить(ДвиженияРезультатыКонсультаций);
	Движения.РезультатыКонсультаций.Записывать = Истина;
	Движения.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	БоР_ОбщийМодуль.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	БоР_ОбщийМодульКлиентСервер.РазвернутьФорматированныйДокументИзXML(ОписаниеXML, , , ОписаниеТекст);
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

// БоР :  14.01.2017 21:32:07
Функция ПолучитьДвижения(РежимПроведения, Отказ) Экспорт
	
	#Область ПараметрыСообщения
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Сотрудник"						, Сотрудник);
	ПараметрыСообщения.Вставить("ДатаВремяНачала"				, ДатаВремяНачала);
	ПараметрыСообщения.Вставить("Сообщение_УстановитьДанные"	, ЭтотОбъект);
	#КонецОбласти	

	Запрос = Новый Запрос;
	
	#Область Запрос
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.Работа,
	|	РасписаниеКонсультацийСрезПоследних.Проект,
	//|	РасписаниеКонсультацийСрезПоследних.Задание,
	//|	РасписаниеКонсультацийСрезПоследних.ПакетЧасов,
	|	РасписаниеКонсультацийСрезПоследних.Событие,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.Контрагент,
	|	РасписаниеКонсультацийСрезПоследних.КонтактноеЛицо,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Продолжительность,
	|	РасписаниеКонсультацийСрезПоследних.ВидУслуги,
	|	РасписаниеКонсультацийСрезПоследних.ТемаВопроса,
	|	РасписаниеКонсультацийСрезПоследних.Состояние,
	|	РасписаниеКонсультацийСрезПоследних.КомментарийЗаписи,
	|	РасписаниеКонсультацийСрезПоследних.ТипЗаписи,
	|	РасписаниеКонсультацийСрезПоследних.КрайнийСрок,
	|	РасписаниеКонсультацийСрезПоследних.ЗапретитьЗамещение,
	|	РасписаниеКонсультацийСрезПоследних.КонтактныеТелефоны,
	|	РасписаниеКонсультацийСрезПоследних.СрочнаяЗапись
	|ПОМЕСТИТЬ ВТТекущееРасписание
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&МоментВремени,
	|			Сотрудник = &Сотрудник
	|				И ДатаВремяНачала = &ДатаВремяНачала) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТекущееРасписание.Сотрудник,
	|	ВТТекущееРасписание.ДатаВремяНачала,
	|	ВТТекущееРасписание.ДатаВремяОкончания,
	|	ВТТекущееРасписание.Продолжительность,
	|	ВТТекущееРасписание.Контрагент,
	|	ВТТекущееРасписание.КонтактноеЛицо,
	|	ВТТекущееРасписание.Работа,
	|	ВТТекущееРасписание.Проект,
	//|	ВТТекущееРасписание.Задание,
	//|	ВТТекущееРасписание.ПакетЧасов,
	|	ВТТекущееРасписание.Событие,
	|	ВТТекущееРасписание.ВидУслуги,
	|	ВТТекущееРасписание.ТемаВопроса,
	|	ВТТекущееРасписание.Состояние,
	|	ВТТекущееРасписание.КомментарийЗаписи,
	|	ВТТекущееРасписание.ТипЗаписи,
	|	ВТТекущееРасписание.СрочнаяЗапись
	|ИЗ
	|	ВТТекущееРасписание КАК ВТТекущееРасписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период,
	|	ВыполнениеРаботы.Сотрудник,
	|	ВыполнениеРаботы.ДатаВремяНачала,
	|	ВТТекущееРасписание.ДатаВремяОкончания,
	|	ВТТекущееРасписание.Продолжительность,
	|	ВТТекущееРасписание.Работа,
	|	ВТТекущееРасписание.Проект,
	//|	ВТТекущееРасписание.Задание,
	//|	ВТТекущееРасписание.ПакетЧасов,
	|	ВТТекущееРасписание.Событие,
	|	ВТТекущееРасписание.Контрагент,
	|	ВТТекущееРасписание.КонтактноеЛицо,
	|	ВыполнениеРаботы.КомментарийЗаписи,
	|	ВТТекущееРасписание.КрайнийСрок,
	|	ВТТекущееРасписание.ЗапретитьЗамещение,
	|	ВТТекущееРасписание.КонтактныеТелефоны,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Выполнено) КАК Состояние,
	|	&ОписаниеXML КАК ОписаниеXML,
	|	&ОписаниеТекст КАК ОписаниеТекст
	|ИЗ
	|	Документ.ВыполнениеРаботы КАК ВыполнениеРаботы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТекущееРасписание КАК ВТТекущееРасписание
	|		ПО ВыполнениеРаботы.Сотрудник = ВТТекущееРасписание.Сотрудник
	|			И ВыполнениеРаботы.ДатаВремяНачала = ВТТекущееРасписание.ДатаВремяНачала
	|ГДЕ
	|	ВыполнениеРаботы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период,
	|	ВыполнениеРаботы.Сотрудник,
	|	ВыполнениеРаботы.ДатаВремяНачала,
	|	&Ссылка КАК ДокументВыполнения,
	|	ВТТекущееРасписание.ДатаВремяОкончания,
	|	ВТТекущееРасписание.Продолжительность,
	|	ВТТекущееРасписание.Работа,
	|	ВТТекущееРасписание.Проект,
	//|	ВТТекущееРасписание.Задание,
	//|	ВТТекущееРасписание.ПакетЧасов,
	|	ВТТекущееРасписание.Событие,
	|	ВТТекущееРасписание.Контрагент,
	|	ВТТекущееРасписание.КонтактноеЛицо,
	|	ВТТекущееРасписание.КомментарийЗаписи,
	|	ВТТекущееРасписание.ТипЗаписи,
	|	ВТТекущееРасписание.СрочнаяЗапись,
	|	ВТТекущееРасписание.ВидУслуги,
	|	ВТТекущееРасписание.ТемаВопроса,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыКонсультации.ВыполненаРабота) КАК Результат,
	|	"""" КАК ВопросКлиента,
	|	"""" КАК ОтветСотрудника,
	|	ВыполнениеРаботы.ДатаВремяНачалаФакт,
	|	ВыполнениеРаботы.ДатаВремяОкончанияФакт,
	|	ВыполнениеРаботы.ПродолжительностьФакт,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныНеоказанияКонсультацииЛК.ПустаяСсылка) КАК ПричинаНеоказания
	|ИЗ
	|	Документ.ВыполнениеРаботы КАК ВыполнениеРаботы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТекущееРасписание КАК ВТТекущееРасписание
	|		ПО ВыполнениеРаботы.Сотрудник = ВТТекущееРасписание.Сотрудник
	|			И ВыполнениеРаботы.ДатаВремяНачала = ВТТекущееРасписание.ДатаВремяНачала
	|ГДЕ
	|	ВыполнениеРаботы.Ссылка = &Ссылка";
	
	#КонецОбласти
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		МоментВремени = Неопределено;
	Иначе
		МоментВремени = МоментВремени();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментВремени"	, МоментВремени);
	Запрос.УстановитьПараметр("ДатаВремяНачала"	, ДатаВремяНачала);
	Запрос.УстановитьПараметр("Сотрудник"		, Сотрудник);
	Запрос.УстановитьПараметр("Период"			, Дата);
	Запрос.УстановитьПараметр("Ссылка"			, Ссылка);
	Запрос.УстановитьПараметр("ОписаниеXML"		, ОписаниеXML);
	Запрос.УстановитьПараметр("ОписаниеТекст"	, ОписаниеТекст);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	РезультатТекущееРасписание = РезультатыЗапроса[РезультатыЗапроса.Количество() - 3];
	Выборка = РезультатТекущееРасписание.Выбрать();
	Если Не Выборка.Следующий() Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Сотрудник");
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Не запланировано.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;
	// БоР : две последующих проверки - почти одно и то же. Если оставим состояния, можно убирать проверку на контрагента 15.01.2017 15:08:05
	Если Выборка.Состояние <> Перечисления.СостоянияЭлементаРасписанияЛК.Запланировано Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Сотрудник");
		ПараметрыСообщения.Вставить("Состояние"				, Выборка.Состояние);
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Состояние записи - &Состояние.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;
	Если Не Выборка.Работа.ТребуетВыполнения Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Работа");
		ПараметрыСообщения.Вставить("Работа"				, Выборка.Работа);
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Работа &Работа не требует регистрации выполнения.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;
	Если Выборка.Работа.РаботаПоРасписанию Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, Выборка.Работа);
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Работа &Работа - работа по расписанию, выполнение регистрируется документом """ + Метаданные.Документы.ВыполнениеКонсультацииЛК.Синоним + """.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;

	//РезультатТекущиеРезультаты = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2];
	//Выборка = РезультатТекущиеРезультаты.Выбрать();
	//Если Выборка.Следующий() Тогда
	//	ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Контрагент");
	//	ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС	Результат уже зарегистрирован";
	//	БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
	//	Отказ = Истина;
	//	ВозВрат Неопределено;
	//КонецЕсли;
	
	Если Отказ Тогда
		ВозВрат Неопределено
	КонецЕсли;
	
	ДвиженияДокумента =Новый Структура;
	ДвиженияДокумента.Вставить("РезультатыКонсультаций", РезультатыЗапроса[РезультатыЗапроса.Количество() - 1].Выгрузить());
	ДвиженияДокумента.Вставить("РасписаниеКонсультаций", РезультатыЗапроса[РезультатыЗапроса.Количество() - 2].Выгрузить());
	ВозВрат ДвиженияДокумента;
	
КонецФункции

