
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ = Истина Тогда
		Отказ = ДополнительныеСвойства.Отказ;
		ВозВрат;
	КонецЕсли;
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;

	Движения.РасписаниеКонсультаций.Очистить();
	Движения.РасписаниеКонсультаций.Записать();
	ДвиженияРасписаниеКонсультаций = ПолучитьДвиженияРасписаниеКонсультаций(РежимПроведения, Отказ);
	Если ДвиженияРасписаниеКонсультаций = Неопределено Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	Движения.РасписаниеКонсультаций.Загрузить(ДвиженияРасписаниеКонсультаций);
	Движения.РасписаниеКонсультаций.Записывать = Истина;
	
	Движения.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		ВозВрат;
	КонецЕсли;
	
	БоР_ОбщийМодуль.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДвиженияРасписаниеКонсультаций(РежимПроведения, Отказ) Экспорт

	#Область ПараметрыСообщения
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Сотрудник"						, Сотрудник);
	ПараметрыСообщения.Вставить("ДатаВремяНачала"				, ДатаВремяНачала);
	ПараметрыСообщения.Вставить("Сообщение_УстановитьДанные"	, ЭтотОбъект);
	#КонецОбласти	
	
	Запрос = Новый Запрос;
	
	#Область Запрос
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник,
	|	РасписаниеКонсультацийСрезПоследних.Работа,
	|	РасписаниеКонсультацийСрезПоследних.Проект,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РасписаниеКонсультацийСрезПоследних.Контрагент,
	|	РасписаниеКонсультацийСрезПоследних.КонтактноеЛицо,
	|	РасписаниеКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РасписаниеКонсультацийСрезПоследних.Продолжительность,
	|	РасписаниеКонсультацийСрезПоследних.ВидУслуги,
	|	РасписаниеКонсультацийСрезПоследних.ТемаВопроса,
	|	РасписаниеКонсультацийСрезПоследних.Состояние
	|ПОМЕСТИТЬ ВТТекущееРасписание
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			&МоментВремени,
	|			Сотрудник = &Сотрудник
	|				И ДатаВремяНачала = &ДатаВремяНачала) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатыКонсультацийСрезПоследних.Сотрудник,
	|	РезультатыКонсультацийСрезПоследних.ДатаВремяНачала,
	|	РезультатыКонсультацийСрезПоследних.Контрагент,
	|	РезультатыКонсультацийСрезПоследних.КонтактноеЛицо,
	|	РезультатыКонсультацийСрезПоследних.Результат,
	|	РезультатыКонсультацийСрезПоследних.ДатаВремяОкончания,
	|	РезультатыКонсультацийСрезПоследних.Продолжительность,
	|	РезультатыКонсультацийСрезПоследних.ВидУслуги,
	|	РезультатыКонсультацийСрезПоследних.ТемаВопроса,
	|	РезультатыКонсультацийСрезПоследних.ВопросКлиента,
	|	РезультатыКонсультацийСрезПоследних.ОтветСотрудника
	|ПОМЕСТИТЬ ВТТекущиеРезультаты
	|ИЗ
	|	РегистрСведений.РезультатыКонсультаций.СрезПоследних(
	|			&МоментВремени,
	|			Сотрудник = &Сотрудник
	|				И ДатаВремяНачала = &ДатаВремяНачала) КАК РезультатыКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РезультатыКонсультацийСрезПоследних.НеДействует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТекущееРасписание.Сотрудник,
	|	ВТТекущееРасписание.ДатаВремяНачала,
	|	ВТТекущееРасписание.Контрагент,
	|	ВТТекущееРасписание.КонтактноеЛицо,
	|	ВТТекущееРасписание.ДатаВремяОкончания,
	|	ВТТекущееРасписание.Продолжительность,
	|	ВТТекущееРасписание.ВидУслуги,
	|	ВТТекущееРасписание.ТемаВопроса,
	|	ВТТекущееРасписание.Состояние
	|ИЗ
	|	ВТТекущееРасписание КАК ВТТекущееРасписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТекущиеРезультаты.Сотрудник,
	|	ВТТекущиеРезультаты.ДатаВремяНачала,
	|	ВТТекущиеРезультаты.Контрагент,
	|	ВТТекущиеРезультаты.КонтактноеЛицо,
	|	ВТТекущиеРезультаты.Результат,
	|	ВТТекущиеРезультаты.ДатаВремяОкончания,
	|	ВТТекущиеРезультаты.Продолжительность,
	|	ВТТекущиеРезультаты.ВидУслуги,
	|	ВТТекущиеРезультаты.ТемаВопроса,
	|	ВТТекущиеРезультаты.ВопросКлиента,
	|	ВТТекущиеРезультаты.ОтветСотрудника
	|ИЗ
	|	ВТТекущиеРезультаты КАК ВТТекущиеРезультаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ДатаВремяНачала КАК ДатаВремяНачала,
	|	&Сотрудник КАК Сотрудник,
	|	ДОБАВИТЬКДАТЕ(&ДатаВремяНачала, МИНУТА, &ШагСеткиМин) КАК ДатаВремяОкончания,
	|	&ШагСеткиМин КАК Продолжительность,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияЭлементаРасписанияЛК.Свободно) КАК Состояние,
	|	ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка) КАК Работа,
	|	ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка) КАК Проект,
	//|	ЗНАЧЕНИЕ(Документ.франЗадание.ПустаяСсылка) КАК Задание,
	//|	ЗНАЧЕНИЕ(Документ.ПакетЧасов.ПустаяСсылка) КАК ПакетЧасов,
	|	ЗНАЧЕНИЕ(Документ.Обращение.ПустаяСсылка) КАК Событие";
	
	#КонецОбласти
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		МоментВремени = Неопределено;
	Иначе
		МоментВремени = МоментВремени();
	КонецЕсли;
	
	ШагСеткиМин = Бор_ПовторноеИспользованиеКлиентСервер.ПолучитьШагСеткиРасписания();
	Запрос.УстановитьПараметр("МоментВремени"		, МоментВремени);
	Запрос.УстановитьПараметр("Период"				, Дата);
	Запрос.УстановитьПараметр("Ссылка"				, Ссылка);
	
	Запрос.УстановитьПараметр("Сотрудник"			, Сотрудник);
	Запрос.УстановитьПараметр("ДатаВремяНачала"		, ДатаВремяНачала);
	
	Запрос.УстановитьПараметр("ШагСеткиМин"			, ШагСеткиМин);
	Запрос.УстановитьПараметр("НачалоДня"			, НачалоДня(ДатаВремяНачала));
	Запрос.УстановитьПараметр("КонецДня"			, КонецДня(ДатаВремяНачала));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	РезультатТекущееРасписание = РезультатыЗапроса[РезультатыЗапроса.Количество() - 3];
	Выборка = РезультатТекущееРасписание.Выбрать();
	Если Не Выборка.Следующий() Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Сотрудник");
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Не запланировано.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;
	Если Выборка.Состояние <> Перечисления.СостоянияЭлементаРасписанияЛК.Запланировано Тогда
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Сотрудник");
		ШаблонСообщения = "Запись [&ДатаВремяНачала, &Сотрудник]. &ПС Не запланировано.";
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
		Отказ = Истина;
		ВозВрат Неопределено;
	КонецЕсли;
	//Если Не ЗначениеЗаполнено(Выборка.Контрагент) Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Время """ + ДатаВремяНачала + """, сотрудник """ + Сотрудник + """" + Символы.ПС + "	Никто не записан.";
	//	Сообщение.Поле = "Сотрудник";
	//	Сообщение.УстановитьДанные(ЭтотОбъект);
	//	Сообщение.Сообщить();
	//	ВозВрат Неопределено;
	//КонецЕсли;
	
	//РезультатыЗапроса = Запрос.ВыполнитьПакет();
	//РезультатТекущиеРезультаты = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2];
	//Выборка = РезультатТекущиеРезультаты.Выбрать();
	//Если Выборка.Следующий() Тогда
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Время """ + ДатаВремяНачала + """, сотрудник """ + Сотрудник + """" + Символы.ПС + "	Результат уже зарегистрирован";
	//	Сообщение.Поле = "Сотрудник";
	//	Сообщение.УстановитьДанные(ЭтотОбъект);
	//	Сообщение.Сообщить();
	//	ВозВрат Неопределено;
	//КонецЕсли;
	
	Если Отказ Тогда
		ВозВрат Неопределено
	КонецЕсли;
	
	РезультатЗапроса = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	ВозВрат РезультатЗапроса.Выгрузить();
	
КонецФункции

