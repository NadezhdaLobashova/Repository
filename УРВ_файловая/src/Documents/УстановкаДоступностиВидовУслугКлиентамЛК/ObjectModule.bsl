
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("Отказ") И ДополнительныеСвойства.Отказ = Истина Тогда
		Отказ = ДополнительныеСвойства.Отказ;
		ВозВрат;
	КонецЕсли;

	Движения.ДоступностьВидовУслугКлиентамЛК.Очистить();
	Движения.ДоступностьВидовУслугКлиентамЛК.Записать();
	ДвиженияДоступностьВидовУслугКлиентамЛК = ПолучитьДвиженияДоступностьВидовУслугКлиентамЛК(РежимПроведения);
	Если ДвиженияДоступностьВидовУслугКлиентамЛК = Неопределено Тогда
		Отказ = Истина;
		ВозВрат;
	КонецЕсли;
	Движения.ДоступностьВидовУслугКлиентамЛК.Загрузить(ДвиженияДоступностьВидовУслугКлиентамЛК);
	Движения.ДоступностьВидовУслугКлиентамЛК.Записывать = Истина;
	
	Движения.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	БоР_ОбщийМодуль.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Не ЗначениеЗаполнено(Автор) Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДвиженияДоступностьВидовУслугКлиентамЛК(РежимПроведения)
	
	#Область ПараметрыСообщения
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Сообщение_УстановитьДанные"	, ЭтотОбъект);
	#КонецОбласти	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	#Область Запрос
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.Контрагент КАК Контрагент,
	|	ТабличнаяЧасть.ВидУслуги КАК ВидУслуги,
	|	ТабличнаяЧасть.ДатаНачала,
	|	ТабличнаяЧасть.ДатаОкончания,
	|	ТабличнаяЧасть.Отменить
	|ПОМЕСТИТЬ ВТ_Ограничения
	|ИЗ
	|	Документ.УстановкаДоступностиВидовУслугКлиентамЛК.Ограничения КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	ВидУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Ограничения.Контрагент,
	|	ВТ_Ограничения.ВидУслуги,
	|	СУММА(1) КАК КоличествоСтрок,
	|	МИНИМУМ(ВТ_Ограничения.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ВТ_Ограничения КАК ВТ_Ограничения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Ограничения.ВидУслуги,
	|	ВТ_Ограничения.Контрагент
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период,
	|	ВТ_Ограничения.Контрагент,
	|	ВТ_Ограничения.ВидУслуги,
	|	ВТ_Ограничения.ДатаНачала,
	|	ВТ_Ограничения.ДатаОкончания,
	|	ВТ_Ограничения.Отменить КАК НеДействует
	|ИЗ
	|	ВТ_Ограничения КАК ВТ_Ограничения";
	#КонецОбласти
	
	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		МоментВремени = Неопределено;
	Иначе
		МоментВремени = МоментВремени();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МоментВремени"		, МоментВремени);
	Запрос.УстановитьПараметр("Период"				, Дата);
	Запрос.УстановитьПараметр("Ссылка"				, Ссылка);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();

	РезультатОшибок = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2];
	ВыборкаСтрок = РезультатОшибок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтрок.Следующий() Цикл
		ПараметрыСообщения.Вставить("Сообщение_Поле"		, "Ограничения[" + (ВыборкаСтрок.НомерСтроки - 1) + "].Контрагент");
		ПараметрыСообщения.Вставить("Контрагент"			, ВыборкаСтрок.Контрагент);
		ПараметрыСообщения.Вставить("ВидУслуги"		, ВыборкаСтрок.ВидУслуги);
		ПараметрыСообщения.Вставить("НомерСтроки"			, ВыборкаСтрок.НомерСтроки);
		ШаблонСообщения = "Контрагент &Контрагент, Вид услуги &ВидУслуги указан в документе несколько раз.";
		Отказ = Истина;
		БоР_ОбщийМодуль.Сообщить_С(ШаблонСообщения, ПараметрыСообщения);
	КонецЦикла;
	
	РезультатЗапроса = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1];
	ВозВрат РезультатЗапроса.Выгрузить();
	
	
КонецФункции
