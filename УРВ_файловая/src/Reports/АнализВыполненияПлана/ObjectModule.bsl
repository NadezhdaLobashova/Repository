
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Если КлючВарианта = "ЧасыПоПроектам" или КлючВарианта = "ЧасыПоСотрудникам" Тогда
		
		Попытка
			
			СтандартнаяОбработка = Ложь;
			НастройкиОтчета = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
			
			ЗначениеПериод = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("Период");
			
			ДатаНачала    = НачалоГОда(ТекущаяДата());
			ДатаОкончания = КонецГода(ТекущаяДата());
			
			Если ТипЗнч(ЗначениеПериод.Значение) = Тип("СтандартныйПериод") Тогда
				ДатаНачала = ЗначениеПериод.Значение.ДатаНачала;
				ДатаОкончания = ЗначениеПериод.Значение.ДатаОкончания; 
			КонецЕсли;
			
			// Параметры документа
			ДокументРезультат.ТолькоПросмотр = Истина;
			ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ДокументРезультат.Очистить();
			ДокументРезультат.АвтоМасштаб = Истина;
			ДокументРезультат.НачатьАвтогруппировкуСтрок();
			
			Данные = Новый ДеревоЗначений;
			
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
			
			//Создадим и инициализируем процессор компоновки
			ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
			
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ПроцессорВывода.УстановитьОбъект(Данные);
			
			//Обозначим начало вывода
			ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
			
			Если КлючВарианта = "ЧасыПоПроектам" Тогда
				Макет = ПолучитьМакет("МакетПоПроектам");
				ОбластьШапка1 = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьШапка1");
				ДокументРезультат.Вывести(ОбластьШапка1);
				ОбластьШапка2 = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьШапка2");
				ДокументРезультат.Присоединить(ОбластьШапка2);
								
				МассивМесяцев = ПолучитьМесяцыПоПериоду(ДатаНачала,ДатаОкончания);
				
				Для Каждого СтрокаДереваМесяц из МассивМесяцев Цикл
					ТекущийМесяц = Формат(СтрокаДереваМесяц,"ДФ=ММММ");
					ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьМесяц");
					ОбластьШапка.Параметры.Месяц = ТекущийМесяц;
					ОбластьШапка.Параметры.НормаЧасов = СотрудникиСервер.ПолучитьНормуЧасовВПериоде(НачалоМесяца(СтрокаДереваМесяц),КонецМесяца(СтрокаДереваМесяц));
					ДокументРезультат.Присоединить(ОбластьШапка);
				КонецЦикла;
				
				ТаблицаДанных = Новый ТаблицаЗначений();
				ТаблицаДанных.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.Проекты"));
				ТаблицаДанных.Колонки.Добавить("Месяц" ,Новый ОписаниеТипов("Дата"));
				ТаблицаДанных.Колонки.Добавить("ЧасовОперПлан",Новый ОписаниеТипов("Число"));
				ТаблицаДанных.Колонки.Добавить("ЧасовФакт",Новый ОписаниеТипов("Число"));
				
				Для Каждого СтрокаДереваПроект из Данные.Строки Цикл
					Для Индекс = 0 По СтрокаДереваПроект.Строки.Количество()-1 Цикл
						СтрокаДанных = ТаблицаДанных.Добавить();
						СтрокаДанных.Проект = СтрокаДереваПроект.Строки[Индекс].Проект;
						ЗаполнитьЗначенияСвойств(СтрокаДанных,СтрокаДереваПроект.Строки[Индекс]);
						//Для Каждого СтрокаМесяц из СтрокаДереваПроект.Строки Цикл
						//	СтрокаДанных.Месяц = СтрокаМесяц.Месяц;
						//	Для Каждого СтрокаЧасы из СтрокаМесяц.Строки Цикл
						//		ЗаполнитьЗначенияСвойств(СтрокаДанных,СтрокаЧасы);
						//	КонецЦикла;
						//КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				ТаблицаДанных.Свернуть("Проект,Месяц,ЧасовОперПлан,ЧасовФакт");
				
				ТаблицаПроектов = ТаблицаДанных.Скопировать();
				ТаблицаПроектов.Свернуть("Проект");
				
				Для Каждого СтрокаДанных из ТаблицаПроектов Цикл
					ОбластьПроект1 = Макет.ПолучитьОбласть("ОбластьПроект|ОбластьШапка1");
					ОбластьПроект1.Параметры.Проект = СтрокаДанных.Проект;
					ОбластьПроект1.Параметры.ПроектРасшифровка = СтрокаДанных.Проект;
					ДокументРезультат.Вывести(ОбластьПроект1);
					
					ОбластьПроект2 = Макет.ПолучитьОбласть("ОбластьПроект|ОбластьШапка2");
					ДокументРезультат.Присоединить(ОбластьПроект2);
					
					ОбластьПроект3 = Макет.ПолучитьОбласть("ОбластьПроект|ОбластьМесяц");
					Для Каждого Месяц из МассивМесяцев Цикл
						МассивПоиска = ТаблицаДанных.НайтиСтроки(Новый Структура("Проект,Месяц",СтрокаДанных.Проект,Месяц));
						Если НЕ МассивПоиска.Количество()=0 Тогда
							ОбластьПроект3.Параметры.ЧасовПлан   = МассивПоиска[0].ЧасовОперПлан;
							ОбластьПроект3.Параметры.ЧасовФакт   = МассивПоиска[0].ЧасовФакт;
						Иначе
							ОбластьПроект3.Параметры.ЧасовПлан = "";
							ОбластьПроект3.Параметры.ЧасовФакт = "";
						КонецЕсли;
						ДокументРезультат.Присоединить(ОбластьПроект3);
					КонецЦикла;		
				КонецЦикла;
				
				ТаблицаДанных.Свернуть("Месяц","ЧасовОперПлан,ЧасовФакт");
				ТаблицаДанных.Сортировать("Месяц Возр");
				
				ОбластьИтог1 = Макет.ПолучитьОбласть("ОбластьИтог|ОбластьШапка1");
				ДокументРезультат.Вывести(ОбластьИтог1);
				ОбластьИтог2 = Макет.ПолучитьОбласть("ОбластьИтог|ОбластьШапка2");
				ДокументРезультат.Присоединить(ОбластьИтог2);
				
				ОбластьИтог3 = Макет.ПолучитьОбласть("ОбластьИтог|ОбластьМесяц");
				
				Для Каждого Месяц из МассивМесяцев Цикл
					МассивПоиска = ТаблицаДанных.НайтиСтроки(Новый Структура("Месяц",Месяц));
					Если НЕ МассивПоиска.Количество()=0 Тогда
						ОбластьИтог3.Параметры.ИтогЧасовПлан = МассивПоиска[0].ЧасовОперПлан;
						ОбластьИтог3.Параметры.ИтогЧасовФакт = МассивПоиска[0].ЧасовФакт;
						ОбластьИтог3.Параметры.ПростойЧасы = МассивПоиска[0].ЧасовОперПлан - МассивПоиска[0].ЧасовФакт;
					Иначе
						ОбластьИтог3.Параметры.ИтогЧасовПлан = "";
						ОбластьИтог3.Параметры.ИтогЧасовФакт = "";
						ОбластьИтог3.Параметры.ПростойЧасы = "";
					КонецЕсли;
					ДокументРезультат.Присоединить(ОбластьИтог3);
				КонецЦикла;		
				
			ИначеЕсли КлючВарианта = "ЧасыПоСотрудникам" Тогда
				Макет = ПолучитьМакет("МакетПоСотрудникам");
				ОбластьШапка1 = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьСотрудник");
				ДокументРезультат.Вывести(ОбластьШапка1);
				
				МассивМесяцев = ПолучитьМесяцыПоПериоду(ДатаНачала,ДатаОкончания);
				
				Для Каждого СтрокаДереваМесяц из МассивМесяцев Цикл
					ТекущийМесяц = Формат(СтрокаДереваМесяц,"ДФ=ММММ");
					ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьМесяц");
					ОбластьШапка.Параметры.Месяц = ТекущийМесяц;
					ДокументРезультат.Присоединить(ОбластьШапка);
				КонецЦикла;
				
				ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьИтогЗаПериод");
				ДокументРезультат.Присоединить(ОбластьШапка);
				
				ТаблицаДанных = Новый ТаблицаЗначений();
				ТаблицаДанных.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
				ТаблицаДанных.Колонки.Добавить("Месяц" ,Новый ОписаниеТипов("Дата"));
				ТаблицаДанных.Колонки.Добавить("ЧасовОперПлан",Новый ОписаниеТипов("Число"));
				ТаблицаДанных.Колонки.Добавить("ЧасовФакт",Новый ОписаниеТипов("Число"));
				
				Для Каждого СтрокаДереваСотрудник из Данные.Строки Цикл
					Для Индекс = 0 По СтрокаДереваСотрудник.Строки.Количество()-1 Цикл
						СтрокаДанных = ТаблицаДанных.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных,СтрокаДереваСотрудник.Строки[Индекс]);
					КонецЦикла;
				КонецЦикла;
				
				ТаблицаДанных.Свернуть("Сотрудник,Месяц,ЧасовОперПлан,ЧасовФакт");
				
				ТаблицаСотрудник = ТаблицаДанных.Скопировать();
				ТаблицаСотрудник.Свернуть("Сотрудник");
				
				ТаблицаИтогПоВертикали   = ТаблицаДанных.Скопировать();				
				ТаблицаИтогПоВертикали.Свернуть("Сотрудник","ЧасовОперПлан,ЧасовФакт");
				
				Для Каждого СтрокаДанных из ТаблицаСотрудник Цикл
					ОбластьСотрудник = Макет.ПолучитьОбласть("СтрокаСотрудник|ОбластьСотрудник");
					ОбластьСотрудник.Параметры.Сотрудник = СтрокаДанных.Сотрудник;
					ДокументРезультат.Вывести(ОбластьСотрудник);
										
					ОбластьЧасы = Макет.ПолучитьОбласть("СтрокаСотрудник|ОбластьМесяц");
					Для Каждого Месяц из МассивМесяцев Цикл
						МассивПоиска = ТаблицаДанных.НайтиСтроки(Новый Структура("Сотрудник,Месяц",СтрокаДанных.Сотрудник,Месяц));
						Если НЕ МассивПоиска.Количество()=0 Тогда
							ОбластьЧасы.Параметры.План   = МассивПоиска[0].ЧасовОперПлан;
							ОбластьЧасы.Параметры.Факт   = МассивПоиска[0].ЧасовФакт;
						Иначе
							ОбластьЧасы.Параметры.План = "";
							ОбластьЧасы.Параметры.Факт = "";
						КонецЕсли;
						ДокументРезультат.Присоединить(ОбластьЧасы);
					КонецЦикла;	
					МассивИтог = ТаблицаИтогПоВертикали.НайтиСтроки(Новый Структура("Сотрудник",СтрокаДанных.Сотрудник));
					ОбластьИтог = Макет.ПолучитьОбласть("СтрокаСотрудник|ОбластьИтогЗаПериод");
					Если МассивИтог.Количество()>0 Тогда
					   ОбластьИтог.Параметры.План   = МассивИтог[0].ЧасовОперПлан;
					   ОбластьИтог.Параметры.Факт   = МассивИтог[0].ЧасовФакт;
				   Иначе
					   ОбластьИтог.Параметры.План = "";
					   ОбластьИтог.Параметры.Факт = "";
					КонецЕсли;
					ДокументРезультат.Присоединить(ОбластьИтог);
				КонецЦикла;



				
			КонецЕсли;
			
			ДокументРезультат.ЗакончитьАвтогруппировкуКолонок();
			
		Исключение
			Инфо = ИнформацияОбОшибке();
			ВызватьИсключение НСтр("ru = 'В настройку отчета внесены критичные изменения. Отчет не будет сформирован.'") + " " + Инфо.Описание;
		КонецПопытки;
		
		
	КонецЕсли;		
	
КонецПроцедуры

Функция ПолучитьМесяцыПоПериоду(ДатаНачала,ДатаОкончания)
	СписокДат = Новый Массив;
	Пока НачалоМесяца(ДатаНачала) <= НачалоМесяца(ДатаОкончания) Цикл
		СписокДат.Добавить(НачалоМесяца(ДатаНачала));
		ДатаНачала =  НачалоМесяца(ДобавитьМесяц(ДатаНачала, 1));
	КонецЦикла;
	Возврат СписокДат
КонецФункции	




