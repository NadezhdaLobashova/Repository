
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоВебКлиент = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент();
	
	ВыполнитьПроверкуПравДоступа("СохранениеДанныхПользователя", Метаданные);
	
	ПредлагатьПерейтиНаСайтПриЗапуске = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбщиеНастройкиПользователя", 
		"ПредлагатьПерейтиНаСайтПриЗапуске",
		Ложь);

	// СтандартныеПодсистемы.БазоваяФункциональность
	Если ЭтоВебКлиент Тогда
		Элементы.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы.Видимость = Ложь;
	Иначе
		Элементы.ГруппаУстановитьРасширениеРаботыСФайламиНаКлиенте.Видимость = Ложь;
	КонецЕсли;
	ЗапрашиватьПодтверждениеПриЗавершенииПрограммы = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы();
	
	// Определение текущей настройки рабочей даты
	ЗначениеРабочейДаты = ОбщегоНазначения.РабочаяДатаПользователя();
	Если ЗначениеЗаполнено(ЗначениеРабочейДаты) Тогда
		ИспользоватьТекущуюДатуКомпьютера = 0;
	Иначе
		ИспользоватьТекущуюДатуКомпьютера = 1;
		Элементы.ЗначениеРабочейДаты.Доступность = Ложь;
	КонецЕсли;
	
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	// СтандартныеПодсистемы.Пользователи
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
	Элементы.СведенияОПользователе.Заголовок = АвторизованныйПользователь;
	// Конец СтандартныеПодсистемы.Пользователи
	
	// СтандартныеПодсистемы.РаботаСФайлами
	СпрашиватьРежимРедактированияПриОткрытииФайла = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов",
		"СпрашиватьРежимРедактированияПриОткрытииФайла",
		Истина);
	
	ДействиеПоДвойномуЩелчкуМыши = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов",
		"ДействиеПоДвойномуЩелчкуМыши",
		Перечисления.ДействияСФайламиПоДвойномуЩелчку.ОткрыватьФайл);
	
	СпособСравненияВерсийФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиСравненияФайлов",
		"СпособСравненияВерсийФайлов",
		Перечисления.СпособыСравненияВерсийФайлов.ПустаяСсылка());
	
	ПоказыватьПодсказкиПриРедактированииФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ПоказыватьПодсказкиПриРедактированииФайлов",
		Ложь);
	
	ПоказыватьИнформациюЧтоФайлНеБылИзменен = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ПоказыватьИнформациюЧтоФайлНеБылИзменен",
		Ложь);
	
	ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ПоказыватьЗанятыеФайлыПриЗавершенииРаботы",
		Истина);
	
	ПоказыватьКолонкуРазмер = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ПоказыватьКолонкуРазмер",
		Ложь);
	
	// Заполнение настроек открытия файлов.
	СтрокаНастройки = НастройкиОткрытияФайлов.Добавить();
	СтрокаНастройки.ТипФайла = Перечисления.ТипыФайловДляВстроенногоРедактора.ТекстовыеФайлы;
	
	СтрокаНастройки.Расширение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ТекстовыеФайлы",
		"Расширение",
		"TXT XML INI");
	
	СтрокаНастройки.СпособОткрытия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиОткрытияФайлов\ТекстовыеФайлы",
		"СпособОткрытия",
		Перечисления.СпособыОткрытияФайлаНаПросмотр.ВоВстроенномРедакторе);
	
	Если ЭтоВебКлиент Тогда
		Элементы.ПоказыватьЗанятыеФайлыПриЗавершенииРаботы.Видимость      = Ложь;
	КонецЕсли;
	
	Если ЭтоВебКлиент Или ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент() Тогда
		Элементы.НастройкаСканирования.Видимость = Ложь;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.ЭлектроннаяПодпись
	Элементы.НастройкаЭП.Видимость = ПравоДоступа("СохранениеДанныхПользователя", Метаданные);
	// Конец СтандартныеПодсистемы.ЭлектроннаяПодпись
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
#Если ВебКлиент Тогда	
	НапоминатьОбУстановкеРасширенияРаботыСФайлами = ОбщегоНазначенияКлиент.ПредлагатьУстановкуРасширенияРаботыСФайлами();
	ОбновитьГруппуУстановкиРасширенияРаботыСФайлами();
#КонецЕсли	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// Страница Главное

&НаКлиенте
Процедура СведенияОПользователе(Команда)
	
	ПоказатьЗначение(, АвторизованныйПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональнаяНастройкаПроксиСервера(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера", Новый Структура("НастройкаПроксиНаКлиенте", Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиенте(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьРасширениеРаботыСФайламиНаКлиентеЗавершение", ЭтотОбъект);
	НачатьУстановкуРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГруппуУстановкиРасширенияРаботыСФайлами()
	
	Подключено = ПодключитьРасширениеРаботыСФайлами();
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ?(Подключено, Элементы.ГруппаРасширениеРаботыСФайламиУстановлено, 
		Элементы.ГруппаРасширениеРаботыСФайламиНеУстановлено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы(Команда)
	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТекущуюДатуКомпьютераПриИзменении(Элемент)

	Если ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДаты = '0001-01-01';
	Иначе
		ЗначениеРабочейДаты = ТекущаяДата();
	КонецЕсли;
	Элементы.ЗначениеРабочейДаты.Доступность = ИспользоватьТекущуюДатуКомпьютера = 0;
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Страница Органайзер

////////////////////////////////////////////////////////////////////////////////
// Страница РаботаСФайлами

&НаКлиенте
Процедура НастройкаРабочегоКаталога(Команда)
	
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиРабочегоКаталога();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	
	РаботаСФайламиКлиент.ОткрытьФормуНастройкиСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаЭП(Команда)
	
	ЭлектроннаяПодписьКлиент.ОткрытьНастройкиЭлектроннойПодписиИШифрования();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСКриптографиейНаКлиенте(Команда)
	Обработчик = Новый ОписаниеОповещения("УстановитьРасширениеРаботыСКриптографиейНаКлиентеЗавершение", ЭтотОбъект);
	НачатьУстановкуРасширенияРаботыСКриптографией(Обработчик);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Настройки = Новый Массив;
	
	Настройки.Добавить(ОписаниеНастройки(
		"ОбщиеНастройкиПользователя",
		"ПредлагатьПерейтиНаСайтПриЗапуске",
		ПредлагатьПерейтиНаСайтПриЗапуске));
		
	// СтандартныеПодсистемы.БазоваяФункциональность
	Настройки.Добавить(ОписаниеНастройки(
		"ОбщиеНастройкиПользователя",
		"ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
		ЗапрашиватьПодтверждениеПриЗавершенииПрограммы));
		
#Если ВебКлиент Тогда		
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиПрограммы/ПредлагатьУстановкуРасширенияРаботыСФайлами",
		ИдентификаторКлиента,
		НапоминатьОбУстановкеРасширенияРаботыСФайлами));
#КонецЕсли
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	// СтандартныеПодсистемы.РаботаСФайлами
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиОткрытияФайлов",
		"ДействиеПоДвойномуЩелчкуМыши",
		ДействиеПоДвойномуЩелчкуМыши));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиОткрытияФайлов",
		"СпрашиватьРежимРедактированияПриОткрытииФайла",
		СпрашиватьРежимРедактированияПриОткрытииФайла));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиПрограммы",
		"ПоказыватьПодсказкиПриРедактированииФайлов",
		ПоказыватьПодсказкиПриРедактированииФайлов));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиПрограммы",
		"ПоказыватьЗанятыеФайлыПриЗавершенииРаботы",
		ПоказыватьЗанятыеФайлыПриЗавершенииРаботы));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиСравненияФайлов",
		"СпособСравненияВерсийФайлов",
		СпособСравненияВерсийФайлов));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиПрограммы",
		"ПоказыватьКолонкуРазмер",
		ПоказыватьКолонкуРазмер));
	
	Настройки.Добавить(ОписаниеНастройки(
		"НастройкиПрограммы",
		"ПоказыватьИнформациюЧтоФайлНеБылИзменен",
		ПоказыватьИнформациюЧтоФайлНеБылИзменен));
	
	// Настройки открытия файлов
	Если НастройкиОткрытияФайлов.Количество() >= 1 Тогда
	
		Настройки.Добавить(ОписаниеНастройки(
			"НастройкиОткрытияФайлов\ТекстовыеФайлы",
			"Расширение",
			НастройкиОткрытияФайлов[0].Расширение));
		
		Настройки.Добавить(ОписаниеНастройки(
			"НастройкиОткрытияФайлов\ТекстовыеФайлы",
			"СпособОткрытия",
			НастройкиОткрытияФайлов[0].СпособОткрытия));
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	ЗаписатьНастройкиНаСервере(Настройки);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеНастройки(Объект, Настойка, Значение)
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", Объект);
	Элемент.Вставить("Настройка", Настойка);
	Элемент.Вставить("Значение", Значение);
	
	Возврат Элемент;
	
КонецФункции

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиентеЗавершение(ДополнительныеПараметры) Экспорт
	
	ОбновитьГруппуУстановкиРасширенияРаботыСФайлами();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСКриптографиейНаКлиентеЗавершение(ПараметрыВыполнения) Экспорт
	Перем ОбработчикНеТребуется; // Обработчик не требуется.
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиНаСервере(Настройки)

	// Сохранение рабочей даты
	Если ИспользоватьТекущуюДатуКомпьютера = 1 Тогда
		ЗначениеРабочейДатыДляСохранения  = '0001-01-01';
	Иначе
		ЗначениеРабочейДатыДляСохранения  = ЗначениеРабочейДаты;
	КонецЕсли;
	ОбщегоНазначения.УстановитьРабочуюДатуПользователя(ЗначениеРабочейДатыДляСохранения);

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассивИОбновитьПовторноИспользуемыеЗначения(Настройки);

КонецПроцедуры

#КонецОбласти
