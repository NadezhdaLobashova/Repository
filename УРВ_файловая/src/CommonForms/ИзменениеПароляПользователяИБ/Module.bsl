
#Область ОбработчикиСобытийФормы
    
// Обработчик события "ПриСозданииНаСервере" формы.
// Считываются настройки пользователя ИБ
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Параметры.Свойство("ПриВходеВПрограмму", ПриВходеВПрограмму);
    
	ХранилищеСистемныхНастроек.Удалить("ОбщаяФорма.ИзменениеПароляПользователяИБ/НастройкиОкна", "", ИмяПользователя());
	
	ОбязательнаяУстановкаПароля = Параметры.Свойство("ОбязательнаяУстановкаПароля") 
								И Параметры.ОбязательнаяУстановкаПароля;
								
	ИзменениеПароляДоступно = ПроверитьДоступностьСменыПароляПользователю();
    
    Если ПриВходеВПрограмму Тогда
        Элементы.Отмена.Заголовок = НСтр("ru='Завершить работу'"); 
    КонецЕсли;
    
КонецПроцедуры

// Обработчик события формы "ПриОткрытии".
// Если при формировании данных возникли ошибки, то необходимо
// сообщить о них пользователю.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИзменениеПароляДоступно = Ложь Тогда
		
		ПоказатьПредупреждение(, ТекстЗапретаИзмененияПароля,, НСтр("ru = 'Смена пароля'"));
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	УстановитьВидимостьПолейПароля();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы
    
&НаКлиенте
Процедура ПоказатьПарольПриИзменении(Элемент)
	
	УстановитьВидимостьПолейПароля();
	
	Если ПоказатьПароль Тогда
		ПодтверждениеПароля = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы
    
&НаКлиенте
Процедура СоздатьПароль(Команда)
	
	Пароль = ОбслуживаниеКлиент.НовыйПароль();

	ПоказатьПароль = Истина;
	УстановитьВидимостьПолейПароля();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
    
// Функция проверяет флаг ЗапрещеноИзменятьПароль у текущего
// пользователя ИБ.
//
// Возвращаемое значение
// Истина        - смена пароля доступна
// Ложь          - смена пароля недоступна (либо потому что пользователю запрещено
//                 изменять пароль, либо потому что не установлена стандартная
//                 аутентификация)
//
&НаСервере
Функция ПроверитьДоступностьСменыПароляПользователю()
	
	ИзменениеПароляДоступно = Истина;
	
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если НЕ ЗначениеЗаполнено(ПользовательИБ.Имя) Тогда
		ТекстЗапретаИзмененияПароля = 
			НСтр("ru = 'Текущий пользователь не определен. Изменение пароля невозможно. 
			|Обратитесь к администратору.'");
		ИзменениеПароляДоступно = Ложь;
	ИначеЕсли НЕ ПользовательИБ.АутентификацияСтандартная Тогда
		ТекстЗапретаИзмененияПароля = 
			НСтр("ru = 'Изменение пароля не требуется, т.к. используется аутентификация операционной системы.'");
		ИзменениеПароляДоступно = Ложь;
	ИначеЕсли ПользовательИБ.ЗапрещеноИзменятьПароль Тогда
		ТекстЗапретаИзмененияПароля = 
			НСтр("ru = 'Изменение пароля запрещено. Обратитесь к администратору.'");
		ИзменениеПароляДоступно = Ложь;
	КонецЕсли;
	
	Возврат ИзменениеПароляДоступно;
	
КонецФункции

// Обработчик события нажатия на кнопку "Сменить пароль".
//
&НаКлиенте
Процедура СменитьПарольВыполнить()
	
	ОчиститьСообщения();
	
	Если ОбязательнаяУстановкаПароля И Пароль = "" Тогда
		ТекстОшибки = НСтр("ru = 'Не заполнен пароль'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Пароль");
		Возврат
	КонецЕсли;
	
	Если Не ПоказатьПароль И Пароль <> ПодтверждениеПароля Тогда
		ТекстОшибки = НСтр("ru = 'Подтверждение не совпадает с паролем'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "ПодтверждениеПароля");
		Возврат
	КонецЕсли;
    
    СтарыйПарольСовпадает = Ложь;
	СменитьПарольПользователяИБ(СтарыйПароль, Пароль, СтарыйПарольСовпадает, ПриВходеВПрограмму);
    Если СтарыйПарольСовпадает Тогда
    	Закрыть(Истина);
        ПоказатьОповещениеПользователя(НСтр("ru='Установлен новый пароль.'"),,, БиблиотекаКартинок.Информация32);  
    Иначе
        ПоказатьПредупреждение(, НСтр("ru='Текущий пароль указан неверно.'")); 
    КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СменитьПарольПользователяИБ(СтарыйПароль, Пароль, СтарыйПарольСовпадает, ПриВходеВПрограмму)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
    ХешированиеДанных.Добавить(СтарыйПароль);
    
    СохраняемоеЗначениеПароля = Base64Строка(ХешированиеДанных.ХешСумма);
    
    ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
    ХешированиеДанных.Добавить(ВРег(СтарыйПароль));
    
    СохраняемоеЗначениеПароля = СохраняемоеЗначениеПароля + ","
        + Base64Строка(ХешированиеДанных.ХешСумма);
    
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
    
    Если ЗначениеЗаполнено(ПользовательИБ.СохраняемоеЗначениеПароля) Тогда
        СтарыйПарольСовпадает = (ПользовательИБ.СохраняемоеЗначениеПароля = СохраняемоеЗначениеПароля);
    Иначе
        СтарыйПарольСовпадает = (СтарыйПароль = "");
    КонецЕсли;
    
    Если СтарыйПарольСовпадает Тогда
    	ПользовательИБ.Пароль = Пароль;
    	ПользовательИБ.Записать();
    КонецЕсли;
    
    Если ПриВходеВПрограмму Тогда
        Сведения = РегистрыСведений.СведенияОПользователях.СведенияОПользователе();
        Менеджер = РегистрыСведений.СведенияОПользователях.СоздатьМенеджерЗаписи();
        Менеджер.Заполнить(Сведения);
        Менеджер.Пользователь = Пользователи.АвторизованныйПользователь();
        Менеджер.ПотребоватьСменуПароляПриВходе = Ложь;
        Менеджер.Записать();
    КонецЕсли;     
    
    УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обработчик события ПриИзменении флажка ПоказатьПароль
&НаКлиенте
Процедура УстановитьВидимостьПолейПароля()
	
	Элементы.СтраницаОткрытыйПароль.Видимость = ПоказатьПароль;
	Элементы.СтраницаСкрытыйПароль.Видимость = Не ПоказатьПароль;
	
КонецПроцедуры

#КонецОбласти 
