
#Область ОбработчикиСобытийФормы
    
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
    КонецЕсли;
    
    УстановитьУсловноеОформление();
    
    ОтображатьПревышение =  ПолучитьФункциональнуюОпцию("ИспользоватьСоглашения");
    Элементы.СписокДлительностьОбработкиПревышение.Видимость = ОтображатьПревышение;
    Элементы.СписокДлительностьОбработкиПревышениеВРабочееВремя.Видимость = ОтображатьПревышение;

    Если Параметры.Отбор.Свойство("Обращение") Тогда
		Обращение = Параметры.Отбор.Обращение;
        ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокДлительностьОбработки, "Обращение", Обращение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Обращение) Тогда
		АвтоЗаголовок = Ложь;
		Элементы.СписокДлительностьОбработкиОбращение.Видимость = Ложь;
	КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущаяДатаКлиента = ТекущаяДата();
	СекундДоМестногоВремени = ТекущаяДатаКлиента - УниверсальноеВремя(ТекущаяДатаКлиента);
	Список.Параметры.УстановитьЗначениеПараметра("СекундДоМестногоВремени", СекундДоМестногоВремени);
		
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
    
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
    
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |   СоглашенияПараметрыСоглашения.Ссылка КАК Соглашение,
        |   СоглашенияПараметрыСоглашения.НомерСтроки,
        |   СоглашенияПараметрыСоглашения.КлючПараметров,
        |   СоглашенияПараметрыСоглашения.ТипОбращения,
        |   СоглашенияПараметрыСоглашения.Важность,
        |   СоглашенияПараметрыСоглашения.ЛинияПоддержки,
        |   СоглашенияПараметрыСоглашения.СостояниеОбращения,
        |   СоглашенияПараметрыСоглашения.КомпонентСервиса,
        |   СоглашенияПараметрыСоглашения.Раздел,
        |   СоглашенияПараметрыСоглашения.ВремяОбработки,
		//+ Котова А.Ю. 06.11.2018 ТЗ№ 74355 {
		|   СоглашенияПараметрыСоглашения.Абонент,
        |   СоглашенияПараметрыСоглашения.Проект,
		//- Котова А.Ю. 06.11.2018 ТЗ№ 74355 }
        |   СоглашенияПараметрыСоглашения.ВремяРеакции
        |ИЗ
        |   Справочник.Соглашения.ПараметрыСоглашения КАК СоглашенияПараметрыСоглашения
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СрокиОбращенийПоСоглашениям КАК СрокиОбращенийПоСоглашениям
        |       ПО СоглашенияПараметрыСоглашения.КлючПараметров = СрокиОбращенийПоСоглашениям.КлючПараметров
        |           И СоглашенияПараметрыСоглашения.Ссылка = СрокиОбращенийПоСоглашениям.Соглашение
        |           И (СрокиОбращенийПоСоглашениям.Обращение = &Обращение)";
        
    Запрос.УстановитьПараметр("Обращение", Параметры.Отбор.Обращение);
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ПредставлениеКлюча = "";
        Для каждого КлючевойРеквизит Из Выборка.Соглашение.КлючевыеРеквизиты Цикл
            ПредставлениеКлюча = ПредставлениеКлюча + Выборка[КлючевойРеквизит.Реквизит.ИмяПредопределенныхДанных] + "; ";
        КонецЦикла; 
        ПредставлениеКлюча = Лев(ПредставлениеКлюча, СтрДлина(ПредставлениеКлюча) - 2);
        
    	Элемент = Список.УсловноеОформление.Элементы.Добавить();
    	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
    	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("КлючПараметров");
    	
    	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлючПараметров");
    	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    	ОтборЭлемента.ПравоеЗначение = Выборка.КлючПараметров;

    	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПредставлениеКлюча);
        
    КонецЦикла;
    
    ПоляДлительности = СтрРазделить("Длительность,ДлительностьВРабочееВремя,Превышение,ПревышениеВРабочееВремя", ",", Ложь);
    
    Для каждого ИмяПоля Из ПоляДлительности Цикл
    	Элемент = УсловноеОформление.Элементы.Добавить();
    	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
    	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокДлительностьОбработки" + ИмяПоля);
    	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокДлительностьОбработки." + ИмяПоля);
    	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    	ОтборЭлемента.ПравоеЗначение = '00010102';
    	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "24:00:00");
    КонецЦикла; 
    
КонецПроцедуры
 
#КонецОбласти 
