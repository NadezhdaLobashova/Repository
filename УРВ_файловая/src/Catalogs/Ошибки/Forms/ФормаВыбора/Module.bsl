
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    БазаЗнаний.ФормаВыбораПриСозданииНаСервере(ЭтотОбъект);
    
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТипКарточек = Настройки.Получить("ТипКарточек");
	Если ТипКарточек <> Неопределено Тогда
		Настройки.Удалить("ТипКарточек");
	КонецЕсли;
	
	КоличествоДнейОтбораОбращений = Настройки.Получить("КоличествоДнейОтбораОбращений");
	Если КоличествоДнейОтбораОбращений <> Неопределено Тогда
		Настройки.Удалить("КоличествоДнейОтбораОбращений");
	КонецЕсли;
	
	ОтображатьЗакрытые = Настройки.Получить("ОтображатьЗакрытые");
	Если ОтображатьЗакрытые <> Неопределено Тогда
		Настройки.Удалить("ОтображатьЗакрытые");
	КонецЕсли;
	
    БазаЗнаний.УстановитьОтборыСписков(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Основание  = Новый Структура;
	Основание.Вставить("Сервис", Сервис);
	Основание.Вставить("Витрина", Витрина);
	Основание.Вставить("Компоненты", КомпонентСписок.ВыгрузитьЗначения());
	Основание.Вставить("Разделы", РазделСписок.ВыгрузитьЗначения());
	Основание.Вставить("Обращение", Обращение);
	
	ПараметрыФормы = Новый Структура("Основание", Основание);
	
	ОткрытьФорму("Справочник.Ошибки.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СервисПриИзменении(Элемент)
    
    СервисПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СервисОчистка(Элемент, СтандартнаяОбработка)
    
    СервисПриИзмененииНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура ВитринаПриИзменении(Элемент)
    
    ВитринаПриИзмененииНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура ВитринаОчистка(Элемент, СтандартнаяОбработка)
    
    ВитринаПриИзмененииНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеПодбора = КомпонентСписок.ВыгрузитьЗначения();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДанныеПодбора", ДанныеПодбора);
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", Сервис));
	
	Оповещение = Новый ОписаниеОповещения("КомпонентСписокНачалоВыбораЗавершение", ЭтотОбъект);
	 
	ОткрытьФорму("Справочник.КомпонентыСервиса.Форма.ФормаПодбора", ПараметрыФормы, Элементы.КомпонентСписок, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокПриИзменении(Элемент)
	
	УстановитьОтборыСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеПодбора = РазделСписок.ВыгрузитьЗначения();
	
	Оповещение = Новый ОписаниеОповещения("РазделСписокНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("ДанныеПодбора", ДанныеПодбора);
	 
	ОткрытьФорму("Справочник.Разделы.Форма.ФормаПодбора", ПараметрыФормы, Элементы.РазделСписок, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокПриИзменении(Элемент)
	
	УстановитьОтборыСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура Топ10Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
    ОповеститьОВыборе(Элементы.Топ10.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНастроитьНажатие(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ГиперссылкаНастроитьНажатиеЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КоличествоДнейОтбораОбращений", КоличествоДнейОтбораОбращений);
	ПараметрыФормы.Вставить("ИспользоватьОтображатьЗакрытые", Истина);
	ПараметрыФормы.Вставить("ОтображатьЗакрытые", ОтображатьЗакрытые);
	ПараметрыФормы.Вставить("ТипКарточек", "Ошибки");
	 
	ОткрытьФорму("ОбщаяФорма.УстановкаНастроекДляТоп10",ПараметрыФормы,ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьИсправленныеПриИзменении(Элемент)
	
    ОтображатьИсправленныеПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ГиперссылкаНастроитьНажатиеЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
        ГиперссылкаНастроитьНажатиеЗавершениеНаСервере(Результат);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыСписков()
	
    БазаЗнаний.УстановитьОтборыСписков(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделСписокНачалоВыбораЗавершение(Результат, ПараметрыДляВыбора) Экспорт
	
	Если Результат <> Неопределено Тогда
		РазделСписок.ЗагрузитьЗначения(Результат);
		УстановитьОтборыСписков();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомпонентСписокНачалоВыбораЗавершение(Результат, ПараметрыДляВыбора) Экспорт
	
	Если Результат <> Неопределено Тогда
		КомпонентСписок.ЗагрузитьЗначения(Результат);
		УстановитьОтборыСписков();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СервисПриИзмененииНаСервере()
    
    Если БазаЗнанийПовтИсп.СервисВитрины(Витрина) <> Сервис Тогда
        Витрина = БазаЗнанийПовтИсп.ОсновнаяВитринаСервиса(Сервис);
    КонецЕсли;
    
    БазаЗнаний.УстановитьПараметрыВыбораВладельца(Элементы.КомпонентСписок, Сервис);
	УстановитьОтборыСписков();
	
КонецПроцедуры

&НаСервере
Процедура ВитринаПриИзмененииНаСервере()
	
    Если Сервис <> БазаЗнанийПовтИсп.СервисВитрины(Витрина) Тогда
        Сервис = БазаЗнанийПовтИсп.СервисВитрины(Витрина);
    КонецЕсли;
    
    БазаЗнаний.УстановитьПараметрыВыбораВладельца(Элементы.КомпонентСписок, Сервис);
	УстановитьОтборыСписков();
	
КонецПроцедуры

&НаСервере
Процедура ГиперссылкаНастроитьНажатиеЗавершениеНаСервере(Результат)
    
    КоличествоДнейОтбораОбращений = Результат.КоличествоДнейОтбораОбращений;
    ОтображатьЗакрытые = Результат.ОтображатьЗакрытые;
    БазаЗнаний.ЗаполнитьТоп10(ЭтотОбъект);
    
КонецПроцедуры

&НаСервере
Процедура ОтображатьИсправленныеПриИзмененииНаСервере()
	
    УстановитьОтборыСписков();
	
КонецПроцедуры

#КонецОбласти

