#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;  
    КонецЕсли;
    
    ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
    
    БазаЗнаний.ПередЗаписью(ЭтотОбъект);
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
    Если ОбменДанными.Загрузка Тогда
		Возврат;  
	КонецЕсли;
	
    БазаЗнаний.ПриЗаписи(ЭтотОбъект);
    
    Если ДополнительныеСвойства.ЭтоНовый Тогда
        // Добавление пожелания в Избранное
        РегистрыСведений.ИзбранныеПожелания.ДобавитьПожелание(Ссылка, Автор);
        
        Если Состояние = Перечисления.СостоянияПожеланий.Рассматривается Тогда
			РегистрыСведений.ОповещенияИнформационногоЦентра.ДобавитьОповещение(Ссылка);
		КонецЕсли;
    
        БизнесСобытия.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.СозданиеПожелания);
    Иначе
		БизнесСобытия.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.ИзменениеПожелания);
	КонецЕсли;
	
    Если Состояние = Перечисления.СостоянияПожеланий.НаГолосовании Тогда 
        МассивПользователей = Новый Массив;
        МассивПользователей.Добавить(Автор);
        ЦентрИдей.ДобавитьГолосаПользователейКПожеланию(МассивПользователей, Ссылка, 1);
    КонецЕсли;
    
	Если Состояние = Перечисления.СостоянияПожеланий.Дубль Тогда 
		// Добавление пожелания в Избранное
        РегистрыСведений.ИзбранныеПожелания.ДобавитьПожелание(ОсновнаяКарточка, Автор);
		МассивПользователей = Новый Массив;
		МассивПользователей.Добавить(Автор);
		ЦентрИдей.ДобавитьГолосаПользователейКПожеланию(МассивПользователей, ОсновнаяКарточка, 1);
	КонецЕсли;
    
    Если ДополнительныеСвойства.ИзменилосьСостояние Тогда
        РегистрыСведений.ОповещенияИнформационногоЦентра.ДобавитьОповещение(Ссылка);
    КонецЕсли;
    
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
    БазаЗнаний.ПриКопированииПриЗаполнении(ЭтотОбъект);
    Состояние = Перечисления.СостоянияПожеланий.Рассматривается;
    УточнениеДатыРеализации = Перечисления.Периодичность.Месяц;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
    БазаЗнаний.ПриКопированииПриЗаполнении(ЭтотОбъект);
    Состояние = Перечисления.СостоянияПожеланий.Рассматривается;
	
	Комментарии.Очистить();
	
	ОписаниеХранилище = Новый ХранилищеЗначения(ОбъектКопирования.ОписаниеХранилище.Получить(), Новый СжатиеДанных(9));
	ОписаниеАвторИзменения = Неопределено;
	ОписаниеДатаИзменения = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ДобавитьСервис(Сервис, Витрина) Экспорт
    
    Если ПолучитьФункциональнуюОпцию("НеИспользоватьНесколькоВитринСервисов") Тогда
        Если Сервисы.Найти(Сервис, "Сервис") = Неопределено Тогда
            НоваяСтрока = Сервисы.Добавить();
            НоваяСтрока.Сервис = Сервис;
            НоваяСтрока.Витрина = БазаЗнанийПовтИсп.ОсновнаяВитринаСервиса(Сервис);
        КонецЕсли;
    Иначе
        Если Сервисы.Найти(Витрина, "Витрина") = Неопределено Тогда
            НоваяСтрока = Сервисы.Добавить();
            НоваяСтрока.Сервис = Сервис;
            НоваяСтрока.Витрина = Витрина;
        КонецЕсли; 
    КонецЕсли;
    
КонецПроцедуры

Процедура ДобавитьКомпонент(Компонент) Экспорт
    
    Если Компоненты.Найти(Компонент, "Компонент") = Неопределено Тогда
        НоваяСтрока = Компоненты.Добавить();
        НоваяСтрока.Компонент = Компонент;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
    Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если Состояние = Перечисления.СостоянияПожеланий.Отклонено Тогда 
		Если ПустаяСтрока(КомментарийРазработчика) Тогда 
			ВызватьИсключение НСтр("ru = 'Комментарий разработчика должен быть заполнен'");
		КонецЕсли;
		Если ДатаЗакрытия = '00010101' Тогда
			ВызватьИсключение НСтр("ru = 'Дата закрытия должна быть заполнена'");
		КонецЕсли;
	ИначеЕсли Состояние = Перечисления.СостоянияПожеланий.Запланировано Тогда 
		Если ПлановаяДатаРеализации = '00010101' Тогда 
			ВызватьИсключение НСтр("ru = 'Плановая дата реализации должна быть заполнена'");
		КонецЕсли;
		Если УточнениеДатыРеализации.Пустая() Тогда
			ВызватьИсключение НСтр("ru = 'Уточнение даты реализации должно быть заполнено'");
		КонецЕсли;
		ПредставлениеДатыРеализации = ЦентрИдей.ПредставлениеДатыРеализации(ПлановаяДатаРеализации, УточнениеДатыРеализации);
		Если ПустаяСтрока(ПредставлениеДатыРеализации) Тогда 
			ВызватьИсключение НСтр("ru = 'Не удалось определить плановую дату реализации. Попробуйте выбрать другой вариант Уточнения даты реализации'");
		КонецЕсли;
	ИначеЕсли Состояние = Перечисления.СостоянияПожеланий.Дубль Тогда 
		Если ОсновнаяКарточка.Пустая() Тогда
			ВызватьИсключение НСтр("ru = 'Основное пожелание должно быть заполнено'");
		КонецЕсли;
	ИначеЕсли Состояние = Перечисления.СостоянияПожеланий.Реализовано Тогда 
		Если ДатаЗакрытия = '00010101' Тогда
			ВызватьИсключение НСтр("ru = 'Дата закрытия должна быть заполнена'");
		КонецЕсли;
	КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
