#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Установить исключительную управляемую блокировку на массив переданных пожеланий.
//
// Параметры:
//   Пожелания - Массив - массив ссылок на пожелания, или одна ссылка СправочникСсылка.Пожелание.
//
Процедура ЗаблокироватьОбъекты(Пожелания) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	
	Если ТипЗнч(Пожелания) = Тип("Массив") Тогда
		Для каждого Пожелание Из Пожелания Цикл
			
			Если ТипЗнч(Пожелания) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда 
				Продолжить;
			КонецЕсли;
			
			ЭлементБлокировки = Блокировка.Добавить("Справочник.Пожелания");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Пожелание);
		КонецЦикла;
	Иначе	
		Если ТипЗнч(Пожелания) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Возврат;
		КонецЕсли;	
		ЭлементБлокировки = Блокировка.Добавить("Справочник.Пожелания");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Пожелания);
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

// Возвращает форматированное описание пожелания.
//
// Параметры:
//  Ссылка - СправочникСсылка.Пожелания - пожелание, по которой нужно получить описание.
// 
// Возвращаемое значение:
//  ФорматированныйДокумент - описание пожелание.
//
Функция ФорматированноеОписание(Ссылка) Экспорт
    
    РеквизитыКарточки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Наименование, ОписаниеХранилище");
			
    Возврат РеквизитыКарточки.ОписаниеХранилище.Получить();
    
КонецФункции

// Возвращает вид события создания объекта.
//
Функция ВидСобытия_Создание() Экспорт
	
    Возврат Справочники.ВидыБизнесСобытий.СозданиеПожелания;	
	
КонецФункции

// Возвращает вид события изменения объекта.
//
Функция ВидСобытия_Изменение() Экспорт
	
    Возврат Справочники.ВидыБизнесСобытий.ИзменениеПожелания;	
	
КонецФункции

// Возвращает вид события перенаправления объекта.
//
Функция ВидСобытия_Перенаправление() Экспорт
	
    Возврат Справочники.ВидыБизнесСобытий.ПеренаправлениеПожелания;	
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет, подходит ли объект к шаблону бизнес-процесса.
//
Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытия.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоКарточке(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
КонецФункции

// Возвращает автора
// 
Функция ПолучитьКонтакты(Ссылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоКонтактам();
	Запрос.УстановитьПараметр("Предмет",Ссылка);
	
	НачатьТранзакцию();
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Результат = Неопределено;
		Иначе
			Результат = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Контакт");
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПоКонтактам(ТекстВременнаяТаблица = "", Объединить = Ложь) Экспорт
	
	ШаблонВыбрать = ?(Объединить,"ВЫБРАТЬ РАЗЛИЧНЫЕ","ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ");
	
	ТекстЗапроса = "
	|%ШаблонВыбрать%
	|	Пожелания.Автор КАК Контакт " + ТекстВременнаяТаблица + "
	|ИЗ
	|	Справочник.Пожелания КАК Пожелания
	|ГДЕ
	|	Пожелания.Ссылка = &Предмет
	|	И (НЕ Пожелания.Автор = ЗНАЧЕНИЕ(Справочник.ПользователиСервисов.ПустаяСсылка))
	|	И (НЕ Пожелания.Автор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Пожелания.Ответственный
	|ИЗ
	|	Справочник.Пожелания КАК Пожелания
	|ГДЕ
	|	Пожелания.Ссылка = &Предмет
	|	И (НЕ Пожелания.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ШаблонВыбрать%", ШаблонВыбрать);
	
	Если Объединить Тогда
		
		ТекстЗапроса = "
		| ОБЪЕДИНИТЬ ВСЕ
		|" + ТекстЗапроса;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли