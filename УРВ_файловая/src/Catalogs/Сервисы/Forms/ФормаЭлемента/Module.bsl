
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
    
    Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарифы") Тогда
        Элементы.ИспользоватьТарифы.Видимость = Ложь;
	КонецЕсли;
	
	//{Рарус kruser 22.04.2019 84132
	ВывестиНаФормуТипСервиса();
	//}Рарус kruser 22.04.2019 84132

КонецПроцедуры

//{Рарус kruser 22.04.2019 84132
&НаСервере
Процедура ВывестиНаФормуТипСервиса()

	НовыйЭлемент = Элементы.Вставить("ГруппаТипОбращения", Тип("ГруппаФормы"), ЭтаФорма, Элементы.ГруппаНастройки);
	НовыйЭлемент.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлемент.Заголовок				= "Тип сервиса";	
	НовыйЭлемент.Отображение			= ОтображениеОбычнойГруппы.СлабоеВыделение;
	НовыйЭлемент.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НовыйЭлемент.ОтображатьЗаголовок    = Истина;
	
	НовыйЭлемент = Элементы.Вставить("ТипОбращения", Тип("ПолеФормы"), Элементы.ГруппаТипОбращения); 
	НовыйЭлемент.ПутьКДанным			= "Объект.Внутренний";
	НовыйЭлемент.Вид					= ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.Заголовок				= "Тип сервиса";					
	НовыйЭлемент.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовыйЭлемент.ВидФлажка				= ВидФлажка.Тумблер;
	НовыйЭлемент.ФорматРедактирования	= "БЛ=Внешнее; БИ=Внутреннее";
	
	НовыйЭлемент = Элементы.Вставить("ОсновнойСервис", Тип("ПолеФормы"), Элементы.ГруппаТипОбращения); 
	НовыйЭлемент.ПутьКДанным			= "Объект.ОсновнойСервис";
	НовыйЭлемент.Вид					= ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.Заголовок				= "Сервис по умолчанию";

КонецПроцедуры
//}Рарус kruser 22.04.2019 84132

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru='Учетная запись службы поддержки по умолчанию'"); 
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("УчетныеЗаписиСлужбыПоддержки");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.УчетныеЗаписиСлужбыПоддержки.УчетнаяЗапись");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ВыделенныйШрифт);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяУчетнаяЗапись(Команда)
	
	ТекущиеДанные = Элементы.УчетныеЗаписиСлужбыПоддержки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию = ТекущиеДанные.УчетнаяЗапись;
		Элементы.ОсновнаяУчетнаяЗапись.Пометка = (ТекущиеДанные.УчетнаяЗапись = Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию);
		Модифицированность = Истина;
		УстановитьУсловноеОформление();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЗаписиСлужбыПоддержкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.УчетныеЗаписиСлужбыПоддержки.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Элементы.ОсновнаяУчетнаяЗапись.Пометка = (ТекущиеДанные.УчетнаяЗапись = Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
    
    // Если выбрали учетную запись и основная запись не установлена, то установим основной выбранную учетную запись.
    Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию) Тогда
        Если Объект.УчетныеЗаписиСлужбыПоддержки.Количество() = 1 Тогда
            Объект.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию = Объект.УчетныеЗаписиСлужбыПоддержки[0].УчетнаяЗапись;
        КонецЕсли;
    КонецЕсли;
    
    ЭтотОбъект.ОбновитьОтображениеДанных();

КонецПроцедуры

#КонецОбласти

