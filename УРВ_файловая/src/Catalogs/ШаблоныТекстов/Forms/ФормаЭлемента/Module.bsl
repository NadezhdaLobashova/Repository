
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ОбщегоНазначенияУСП.УстановитьФорматированноеОписаниеИзХранилища(Текст, Параметры.ЗначениеКопирования.ТекстХранилище);
		КонецЕсли;
    КонецЕсли;
    
    Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВитринСервисов") Тогда
        Элементы.Сервис.Видимость = Ложь;
    КонецЕсли;
    
    Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
        Элементы.Текст.АктивизироватьПоУмолчанию = Истина;
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Объект.Текст = Текст.ПолучитьТекст();
	ОбщегоНазначенияУСП.ПоместитьФорматированноеОписаниеВХранилище(Текст, ТекущийОбъект.ТекстХранилище);
	
КонецПроцедуры                                                        

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	РедактируемыйОбъект = РеквизитФормыВЗначение("Объект");
	ОбщегоНазначенияУСП.УстановитьФорматированноеОписаниеИзХранилища(Текст, РедактируемыйОбъект.ТекстХранилище);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовФормы
    
&НаКлиенте
Процедура СервисПриИзменении(Элемент)
    
    СервисПриИзмененииНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура ВитринаПриИзменении(Элемент)
    ВитринаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СервисПриИзмененииНаСервере()
    
    Если Объект.Сервис <> БазаЗнанийПовтИсп.СервисВитрины(Объект.Витрина) Тогда
        Объект.Витрина = БазаЗнанийПовтИсп.ОсновнаяВитринаСервиса(Объект.Сервис);
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВитринаПриИзмененииНаСервере()
    
    Если Объект.Сервис <> БазаЗнанийПовтИсп.СервисВитрины(Объект.Витрина) Тогда
        Объект.Сервис = БазаЗнанийПовтИсп.СервисВитрины(Объект.Витрина);
    КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы
    
&НаКлиенте
Процедура ТипШаблонаПриИзменении(Элемент)
    
    Если ЗначениеЗаполнено(Объект.ТипШаблона) Тогда
        Оповещение = Новый ОписаниеОповещения("ТипШаблонаПриИзмененииЗавершение", ЭтотОбъект);
        ПоказатьВопрос(Оповещение, НСтр("ru='Заполнить шаблон по-умолчанию?'"), РежимДиалогаВопрос.ДаНет);              
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТипШаблонаПриИзмененииЗавершение(Результат, ПараметрыОповещения) Экспорт
    
    Если Результат = КодВозвратаДиалога.Да Тогда
        ЗаполнитьШаблонПоУмолчанию();
    КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонПоУмолчанию()
    
    ТекстШаблона = Справочники.ШаблоныТекстов.ПолучитьШаблонПоУмолчанию(Объект.ТипШаблона);
    Если Не ЗначениеЗаполнено(Объект.Заголовок) Тогда
        Объект.Заголовок = Строка(Объект.ТипШаблона);
        НачалоЗаголовка = Найти(ТекстШаблона,"<title>");
        Если НачалоЗаголовка <> 0 Тогда
            Объект.Заголовок = Сред(ТекстШаблона, НачалоЗаголовка + 7, СтрНайти(ТекстШаблона, "</title>") - НачалоЗаголовка - 7);
        КонецЕсли;
    КонецЕсли;
    
    Текст.УстановитьHTML(ТекстШаблона, Новый Структура);
    
КонецПроцедуры

#КонецОбласти 