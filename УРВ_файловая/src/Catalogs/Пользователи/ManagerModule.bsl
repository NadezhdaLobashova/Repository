#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("Служебный");
	НеРедактируемыеРеквизиты.Добавить("ИдентификаторПользователяИБ");
	НеРедактируемыеРеквизиты.Добавить("ИдентификаторПользователяСервиса");
	НеРедактируемыеРеквизиты.Добавить("СвойстваПользователяИБ");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если НЕ Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
	
	Если НЕ Параметры.Отбор.Свойство("Служебный") Тогда
		Параметры.Отбор.Вставить("Служебный", Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


// БоР :  24.07.2017 10:54:12
Функция ПолучитьПользователейПоФизЛицу(Сотрудник) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизическоеЛицо = &ФизЛицо
	|	И НЕ Пользователи.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ФизЛицо", Сотрудник);
	
	ВозВрат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// БоР :  24.07.2017 10:54:12
Функция ДанныеПоРолямСотрудникаЛК(Сотрудник) Экспорт
	// БоР : На данный момент пользователь (сотрудник ЛК) может иметь несколько ролей, причем в разных подразделениях - разные 18.01.2018 13:33:37
	// БоР : Схему толком никто не понимает, неизвестно пока, изменится она или нет 18.01.2018 13:33:37
	// БоР : Поэтому решили, что сотрудник является Сотрудником ЛК (имеет роль РолиСотрудниковЛК.Сотрудник), если он не имеет других ролей. Подразделение не учитывается 18.01.2018 13:33:37
	// БоР : Но заниматься этим будет вызывающий контекст, а здесь пока посчитаем сколько каких ролей у сотрудника есть 18.01.2018 13:33:37
	// БоР : Надеемся, что это временная процедура 18.01.2018 13:33:37
	
	ДанныеПоРолям = Новый Соответствие;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиСотрудниковЛК.Ссылка КАК Роль,
	|	СУММА(ВЫБОР
	|			КОГДА РегистрРолиСотрудниковЛК.Сотрудник ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Перечисление.РолиСотрудниковЛК КАК РолиСотрудниковЛК
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиСотрудниковЛК КАК РегистрРолиСотрудниковЛК
	|		ПО (РегистрРолиСотрудниковЛК.Роль = РолиСотрудниковЛК.Ссылка)
	|			И (РегистрРолиСотрудниковЛК.Сотрудник = &Сотрудник)
	|
	|СГРУППИРОВАТЬ ПО
	|	РолиСотрудниковЛК.Ссылка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий();
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДанныеПоРолям.Вставить(ВыборкаДетальныеЗаписи.Роль, ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
	ДанныеПоРолям.Вставить("Итого", ВыборкаОбщийИтог.Количество);
	
	ВозВрат ДанныеПоРолям;
	
КонецФункции
