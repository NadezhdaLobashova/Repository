
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает массив линий поддержки обслуживающей организации.
//
// Параметры:
//  ОбслуживающаяОрганизация - СправочникСсылка.ОбслуживающиеОрганизации - обслуживающая организация.
// 
// Возвращаемое значение:
//  Массив - линии поддержки обслуживающей организации.
//
Функция ЛинииПоддержкиОбслуживающейОрганизации(ОбслуживающаяОрганизация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛинииПоддержки.Ссылка
		|ИЗ
		|	Справочник.ЛинииПоддержки КАК ЛинииПоддержки
		|ГДЕ
		|	НЕ ЛинииПоддержки.ПометкаУдаления
		|	И ЛинииПоддержки.Владелец = &ОбслуживающаяОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЛинииПоддержки.Код";
	
	Запрос.УстановитьПараметр("ОбслуживающаяОрганизация", ОбслуживающаяОрганизация);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Массив;
	Иначе
		Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли; 
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНачальныеДанныеПоЧасовымПоясам() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Календари.Ссылка
		|ИЗ
		|	Справочник.Календари КАК Календари
		|ГДЕ
		|	НЕ Календари.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ГрафикРаботы = Выборка.Ссылка;
	Иначе
		СоздатьКалендарь24Часа();
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		ГрафикРаботы = Выборка.Ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбслуживающиеОрганизации.Ссылка
		|ИЗ
		|	Справочник.ОбслуживающиеОрганизации КАК ОбслуживающиеОрганизации
		|ГДЕ
		|	(ОбслуживающиеОрганизации.ЧасовойПояс = """"
		|			ИЛИ ОбслуживающиеОрганизации.ГрафикРаботы = &ПустойГрафикРаботы)";
	Запрос.УстановитьПараметр("ПустойГрафикРаботы", Справочники.Календари.ПустаяСсылка());
	
	ЧасовойПоясПрограммы = ПолучитьЧасовойПоясИнформационнойБазы();
    
    Если Не ЗначениеЗаполнено(ЧасовойПоясПрограммы) Тогда
        ЧасовойПоясПрограммы = "Europe/Moscow";
    КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(Объект.ЧасовойПояс) Тогда
			Объект.ЧасовойПояс = ЧасовойПоясПрограммы;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ГрафикРаботы) Тогда
			Объект.ГрафикРаботы = ГрафикРаботы;
		КонецЕсли;
		Объект.Записать();
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьОтклоненияПоЧасовымПоясам() Экспорт
    
	Дата = ТекущаяДата();
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   ОбслуживающиеОрганизации.Ссылка
        |ИЗ
        |   Справочник.ОбслуживающиеОрганизации КАК ОбслуживающиеОрганизации
        |ГДЕ
        |   ОбслуживающиеОрганизации.ЧасовойПояс <> """"
        |   И ОбслуживающиеОрганизации.ОтклонениеОтУниверсальногоВремениВСекундах = 0";
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        Объект = Выборка.Ссылка.ПолучитьОбъект();
    	Объект.ОтклонениеОтУниверсальногоВремениВСекундах = Дата - УниверсальноеВремя(Дата, Объект.ЧасовойПояс);
	КонецЦикла; 
    
КонецПроцедуры

Процедура СоздатьКалендарь24Часа() Экспорт
	
	ПроизводственныйКалендарь = КалендарныеГрафики.ПроизводственныйКалендарьРоссийскойФедерации();
	Если ПроизводственныйКалендарь = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Справочники.Календари.НайтиПоРеквизиту("ПроизводственныйКалендарь", ПроизводственныйКалендарь).Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НовыйГрафикРаботы = Справочники.Календари.СоздатьЭлемент();
	НовыйГрафикРаботы.Наименование = НСтр("ru='24/7 без перерывов и выходных'"); ;
	НовыйГрафикРаботы.ПроизводственныйКалендарь = ПроизводственныйКалендарь;
	НовыйГрафикРаботы.СпособЗаполнения = Перечисления.СпособыЗаполненияГрафикаРаботы.ПоЦикламПроизвольнойДлины;
	НовыйГрафикРаботы.ДатаНачала = НачалоГода(ТекущаяДатаСеанса());
	НовыйГрафикРаботы.УчитыватьПраздники = Истина;
	
    ШаблонЗаполнения = НовыйГрафикРаботы.ШаблонЗаполнения.Добавить();
    ШаблонЗаполнения.ДеньВключенВГрафик = Истина;
    
    РасписаниеРаботы = НовыйГрафикРаботы.РасписаниеРаботы.Добавить();
    РасписаниеРаботы.НомерДня = 1;
    РасписаниеРаботы.ВремяОкончания = '00010101235959';
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйГрафикРаботы, Истина, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли