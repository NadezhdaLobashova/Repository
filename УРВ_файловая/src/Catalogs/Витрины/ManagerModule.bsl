#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПерваяЛиния(Витрина) Экспорт
    
    ПолучаемыеРеквизиты = Новый Структура("ПерваяЛиния, ПерваяЛинияСервиса", "ПерваяЛиния", "Владелец.ПерваяЛиния");
    Линии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Витрина, ПолучаемыеРеквизиты);
    Возврат ?(ЗначениеЗаполнено(Линии.ПерваяЛиния), Линии.ПерваяЛиния, Линии.ПерваяЛинияСервиса);
    
КонецФункции
 
#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьОсновныеВитрины_1_0_10_1() Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст =
        "ВЫБРАТЬ
        |   Сервисы.Ссылка КАК Владелец,
        |   Сервисы.УчетнаяЗаписьСлужбыПоддержкиПоУмолчанию КАК УчетнаяЗапись,
        |   Сервисы.ПометкаУдаления
        |ИЗ
        |   Справочник.Сервисы КАК Сервисы
        |ГДЕ
        |   Сервисы.ОсновнаяВитрина = &ПустаяВитрина";
    
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    Результат = Запрос.Выполнить();
    
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ВитринаОбъект = Справочники.Витрины.СоздатьЭлемент();
        ЗаполнитьЗначенияСвойств(ВитринаОбъект, Выборка);
        Если Выборка.ПометкаУдаления Тогда
            ВитринаОбъект.Записать();
            ВитринаОбъект.УстановитьПометкуУдаления(Истина);
        Иначе
            ВитринаОбъект.Записать();
        КонецЕсли;
        СервисОбъект = Выборка.Владелец.ПолучитьОбъект();
        СервисОбъект.ОсновнаяВитрина = ВитринаОбъект.Ссылка;
        СервисОбъект.Записать();
        
    КонецЦикла; 
    
КонецПроцедуры

Процедура ЗаполнитьВитринуВОткрытыхОбращениях_1_0_10_1() Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = 
    	"ВЫБРАТЬ
        |   Обращение.Ссылка,
        |   Обращение.Сервис.ОсновнаяВитрина КАК ОсновнаяВитрина
        |ИЗ
        |   Документ.Обращение КАК Обращение
        |ГДЕ
        |   Обращение.Состояние <> &СостояниеЗакрыто
        |   И Обращение.Витрина = &ПустаяВитрина
        |   И НЕ Обращение.ПометкаУдаления
        |
        |УПОРЯДОЧИТЬ ПО
        |   Обращение.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("СостояниеЗакрыто", Перечисления.СостоянияОбращений.Закрыто);
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ОбращениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
    	ОбращениеОбъект.ОбменДанными.Загрузка = Истина;
        ОбращениеОбъект.Витрина = Выборка.ОсновнаяВитрина;
        ОбращениеОбъект.Записать();
    КонецЦикла;
    
КонецПроцедуры

Процедура ЗаполнитьВитринуВЗакрытыхОбращениях_1_0_10_1(Параметры = Неопределено) Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = 
    	"ВЫБРАТЬ
        |   Обращение.Ссылка,
        |   Обращение.Сервис.ОсновнаяВитрина КАК ОсновнаяВитрина
        |ИЗ
        |   Документ.Обращение КАК Обращение
        |ГДЕ
        |   Обращение.Состояние = &СостояниеЗакрыто
        |   И Обращение.Витрина = &ПустаяВитрина
        |   И НЕ Обращение.ПометкаУдаления
        |
        |УПОРЯДОЧИТЬ ПО
        |   Обращение.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("СостояниеЗакрыто", Перечисления.СостоянияОбращений.Закрыто);
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ОбращениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
    	ОбращениеОбъект.ОбменДанными.Загрузка = Истина;
        ОбращениеОбъект.Витрина = Выборка.ОсновнаяВитрина;
        ОбращениеОбъект.Записать();
    КонецЦикла;
    
КонецПроцедуры

Процедура ЗаполнитьВитринуВШаблонахТекстов_1_0_10_1() Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = 
    	"ВЫБРАТЬ
        |   ШаблоныТекстов.Ссылка,
        |   ШаблоныТекстов.Сервис.ОсновнаяВитрина КАК ОсновнаяВитрина
        |ИЗ
        |   Справочник.ШаблоныТекстов КАК ШаблоныТекстов
        |ГДЕ
        |   ШаблоныТекстов.Витрина = &ПустаяВитрина";
    
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ШаблонОбъект = Выборка.Ссылка.ПолучитьОбъект();
        ШаблонОбъект.Витрина = Выборка.ОсновнаяВитрина;
        ШаблонОбъект.Записать();
    КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьВитринуВПомеченныхНаУдалениеОбращениях_1_0_10_2(Параметры = Неопределено) Экспорт
	
    Запрос = Новый Запрос;
    
    Запрос.Текст = 
    	"ВЫБРАТЬ
        |   Обращение.Ссылка,
        |   Обращение.Сервис.ОсновнаяВитрина КАК ОсновнаяВитрина
        |ИЗ
        |   Документ.Обращение КАК Обращение
        |ГДЕ
        |   Обращение.Витрина = &ПустаяВитрина
        |   И НЕ Обращение.ПометкаУдаления
        |
        |УПОРЯДОЧИТЬ ПО
        |   Обращение.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ОбращениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
    	ОбращениеОбъект.ОбменДанными.Загрузка = Истина;
        ОбращениеОбъект.Витрина = Выборка.ОсновнаяВитрина;
        ОбращениеОбъект.Записать();
    КонецЦикла;
	
КонецПроцедуры

Процедура СинхронизироватьЗначенияЗависимыхКонстант_1_0_11_1() Экспорт
	
    Если Константы.ИспользоватьНесколькоВитринСервисов.Получить() = Константы.НеИспользоватьНесколькоВитринСервисов.Получить() Тогда
        Константы.НеИспользоватьНесколькоВитринСервисов.Установить(Не Константы.ИспользоватьНесколькоВитринСервисов.Получить());
    КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВитриныВКарточкахБазыЗнаний_1_0_11_1() Экспорт
    
    Запрос = Новый Запрос;
    
    Запрос.УстановитьПараметр("ПустаяВитрина", Справочники.Витрины.ПустаяСсылка());
    
    ОсновныеВитрины = Новый Соответствие;
    
    ТипыОбъектов = СтрРазделить("Консультации,Ошибки,Пожелания", ",", Ложь);
    
    Для каждого ТипОбъекта Из ТипыОбъектов Цикл
        Запрос.Текст = 
        	"ВЫБРАТЬ РАЗЛИЧНЫЕ
            |   Объекты.Ссылка КАК Карточка
            |ИЗ
            |   Справочник.Консультации.Сервисы КАК Объекты
            |ГДЕ
            |   Объекты.Витрина = &ПустаяВитрина
            |   И НЕ Объекты.Ссылка.ПометкаУдаления";
        Запрос.Текст = СтрЗаменить(Запрос.Текст,"Консультации", ТипОбъекта);
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            КарточкаОбъект = Выборка.Карточка.ПолучитьОбъект();
            Для каждого Строка Из КарточкаОбъект.Сервисы Цикл
            	Строка.Витрина = ОсновныеВитрины.Получить(Строка.Сервис);
                Если Не ЗначениеЗаполнено(Строка.Витрина) Тогда
                    ОсновнаяВитрина = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Сервис, "ОсновнаяВитрина");
                    Строка.Витрина = ОсновнаяВитрина;
                    ОсновныеВитрины.Вставить(Строка.Сервис, ОсновнаяВитрина);
                КонецЕсли;
            КонецЦикла;
            КарточкаОбъект.ОбменДанными.Загрузка = Истина;
            КарточкаОбъект.Записать();
        КонецЦикла;
    КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
