#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу пользователей с дополнительной информацией по заданному условию. 
//
// Параметры:
//  Сервис           - СправочникСсылка.Сервисы - сервис для отбора.
//  ПараметрыОтбора - Структура - параметры отборов.
//  ДополнительныеПараметрыОтбора - ТаблицаЗначений - таблица с колонками Свойство и Значение, 
//                                  содержащие дополнительные реквизиты справочника Абоненты 
//                                  и их значения, если они используются в отборах.
// 
// Возвращаемое значение:
//  РезультатЗапроса - свойства найденных пользователей.
//
Функция СвойстваПользователей(Сервис, ПараметрыОтбора, ДополнительныеПараметрыОтбора = Неопределено) Экспорт
    
    ОтборКорректен = Ложь;
    Для каждого Параметр Из ПараметрыОтбора Цикл
        Если Лев(Параметр.Ключ, СтрДлина("Использовать")) = "Использовать" Тогда
            ОтборКорректен = Истина;
            Прервать;
        КонецЕсли;
    КонецЦикла; 
    
    Если Не ОтборКорректен Тогда
        ВызватьИсключение НСтр("ru='Отбор установлен не корректно'"); 
    КонецЕсли;
    
	Запрос = Новый Запрос;
    //+ Котова А.Ю. 25.09.2018 ТЗ№ 72350 {
	//Изменен текст запроса - добавлены отборы по телефону и ФИО
	Запрос.Текст =
	    
		"ВЫБРАТЬ
	    |   ПользователиПриложений.Приложение,
	    |   ПользователиПриложений.ПользовательСервиса,
	    |   ПользователиПриложений.Приложение.Абонент КАК Абонент
	    |ПОМЕСТИТЬ НайденныеОбласти
	    |ИЗ
	    |   РегистрСведений.ПользователиПриложений КАК ПользователиПриложений
	    |ГДЕ
	    |   ПользователиПриложений.Приложение.Код = &НомерОбласти
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	    |   ПользователиАбонентов.Абонент КАК Абонент,
	    |   ПользователиАбонентов.Абонент.Код КАК АбонентКод,
	    |   КИАдресАбонента.Представление КАК АдресАбонента,
	    |   ВзаимоотношенияАбонентов.ВедущийАбонент КАК ОбслуживающаяОрганизация,
	    |   ВзаимоотношенияАбонентов.ВедущийАбонент.Код КАК ОбслуживающаяОрганизацияКод,
	    |   Пользователи.Ссылка КАК ПользовательСервиса,
	    |   Пользователи.Код,
	    |   Пользователи.Наименование КАК Наименование,
	    |   Пользователи.СтрокаEmail КАК Email,
	    |   КИТелефон.Представление КАК Телефон,
	    |   Пользователи.Владелец КАК Сервис,
	    |   ВЫБОР
	    |       КОГДА НайденныеОбласти.ПользовательСервиса ЕСТЬ NULL
	    |           ТОГДА ЛОЖЬ
	    |       ИНАЧЕ ИСТИНА
	    |   КОНЕЦ КАК ЗначениеФильтраПоОбласти
	    |ПОМЕСТИТЬ ПользователиАбоненты
	    |ИЗ
	    |   Справочник.ПользователиСервисов КАК Пользователи
	    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиАбонентов КАК ПользователиАбонентов
	    |           ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Абоненты.КонтактнаяИнформация КАК КИАдресАбонента
	    |           ПО ПользователиАбонентов.Абонент = КИАдресАбонента.Ссылка
	    |               И (КИАдресАбонента.Вид = &АдресАбонента)
	    |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзаимоотношенияАбонентов КАК ВзаимоотношенияАбонентов
	    |           ПО ПользователиАбонентов.Абонент = ВзаимоотношенияАбонентов.Абонент
	    |               И (ВзаимоотношенияАбонентов.ВидВзаимоотношений = &ОбслуживающаяОрганизацияАбонент)
	    |           ЛЕВОЕ СОЕДИНЕНИЕ НайденныеОбласти КАК НайденныеОбласти
	    |           ПО ПользователиАбонентов.Абонент = НайденныеОбласти.Абонент
	    |               И ПользователиАбонентов.ПользовательСервиса = НайденныеОбласти.ПользовательСервиса
	    |           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	    |           ПО (ИСТИНА)
	    |       ПО Пользователи.Ссылка = ПользователиАбонентов.ПользовательСервиса
	    |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПользователиСервисов.КонтактнаяИнформация КАК КИТелефон
	    |       ПО Пользователи.Ссылка = КИТелефон.Ссылка
	    |           И (КИТелефон.Вид = &ТелефонПользователя)
	    |ГДЕ
	    |   ВЫБОР
	    |           КОГДА &ИспользоватьEmail = ИСТИНА
	    |               ТОГДА Пользователи.СтрокаEmail ПОДОБНО &Email
	    |           ИНАЧЕ ИСТИНА
	    |       КОНЕЦ
	    |   И ВЫБОР
	    |           КОГДА &ИспользоватьЛогин
	    |               ТОГДА Пользователи.Код ПОДОБНО &Логин
	    |           ИНАЧЕ ИСТИНА
	    |       КОНЕЦ
	    |   И ВЫБОР
	    |           КОГДА &ИспользоватьНомерАбонента
	    |               ТОГДА ПользователиАбонентов.Абонент.Код = &НомерАбонента
	    |           ИНАЧЕ ИСТИНА
	    |       КОНЕЦ
	    |   И Пользователи.Владелец = &Сервис
	    |   И &ДополнительныеРеквизитыУсловия
		 //+ Котова А.Ю. 25.09.2018 ТЗ№ 72350 {
		|	И ВЫБОР
		|			КОГДА &ИспользоватьПоискТелефон = ИСТИНА
		|				ТОГДА КИТелефон.Представление ПОДОБНО &ПоискТелефон
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ИспользоватьПоискФИО
		|				ТОГДА Пользователи.Наименование ПОДОБНО &ПоискФИО
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		//- Котова А.Ю. 25.09.2018 ТЗ№ 72350 }

	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	    |   ПользователиАбоненты.Абонент,
	    |   ПользователиАбоненты.АбонентКод,
	    |   ПользователиАбоненты.АдресАбонента,
	    |   ПользователиАбоненты.ОбслуживающаяОрганизация,
	    |   ПользователиАбоненты.ОбслуживающаяОрганизацияКод,
	    |   ПользователиАбоненты.Сервис,
	    |   ПользователиАбоненты.ПользовательСервиса,
	    |   ПользователиАбоненты.Код,
	    |   ПользователиАбоненты.Наименование,
	    |   ПОДСТРОКА(ПользователиАбоненты.Email, 1, 1000) КАК Email,
	    |   ПользователиАбоненты.Телефон
	    |ИЗ
	    |   ПользователиАбоненты КАК ПользователиАбоненты
	    |ГДЕ
	    |   ВЫБОР
	    |           КОГДА &ИспользоватьНомерОбласти
	    |               ТОГДА ПользователиАбоненты.ЗначениеФильтраПоОбласти
	    |           ИНАЧЕ ИСТИНА
	    |       КОНЕЦ";
		//- Котова А.Ю. 25.09.2018 ТЗ№ 72350 }	
	Запрос.УстановитьПараметр("ТелефонПользователя", Справочники.ВидыКонтактнойИнформации.ТелефонПользователяСервиса);
	Запрос.УстановитьПараметр("АдресАбонента", Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресАбонента);
	Запрос.УстановитьПараметр("ОбслуживающаяОрганизацияАбонент", Перечисления.ВидыВзаимоотношений.ОбслуживающаяОрганизацияАбонент);
	Запрос.УстановитьПараметр("Сервис", Сервис);
	
	Запрос.УстановитьПараметр("ИспользоватьНомерАбонента", ПараметрыОтбора.ИспользоватьНомерАбонента И ЗначениеЗаполнено(ПараметрыОтбора.НомерАбонента));
	Запрос.УстановитьПараметр("ИспользоватьНомерОбласти", ПараметрыОтбора.ИспользоватьНомерОбласти И ЗначениеЗаполнено(ПараметрыОтбора.НомерОбласти));
	Запрос.УстановитьПараметр("ИспользоватьЛогин", ПараметрыОтбора.ИспользоватьЛогин И ЗначениеЗаполнено(ПараметрыОтбора.Логин));
	Запрос.УстановитьПараметр("ИспользоватьEmail", ПараметрыОтбора.ИспользоватьEMail И ЗначениеЗаполнено(ПараметрыОтбора.Email));
	
	Запрос.УстановитьПараметр("НомерАбонента", ПараметрыОтбора.НомерАбонента);
	Запрос.УстановитьПараметр("НомерОбласти", ПараметрыОтбора.НомерОбласти);
	Запрос.УстановитьПараметр("Логин", "%" + ПараметрыОтбора.Логин + "%");
	Запрос.УстановитьПараметр("Email", "%" + ПараметрыОтбора.Email + "%");
	
	//+ Котова А.Ю. 25.09.2018 ТЗ№ 72350 {
	Запрос.УстановитьПараметр("ПоискФИО", "%" + ПараметрыОтбора.ПоискФИО + "%");
	Запрос.УстановитьПараметр("ПоискТелефон", "%" + ПараметрыОтбора.ПоискТелефон + "%");
	Запрос.УстановитьПараметр("ИспользоватьПоискФИО", ПараметрыОтбора.ИспользоватьПоискФИО И ЗначениеЗаполнено(ПараметрыОтбора.ПоискФИО));
	Запрос.УстановитьПараметр("ИспользоватьПоискТелефон", ПараметрыОтбора.ИспользоватьПоискТелефон И ЗначениеЗаполнено(ПараметрыОтбора.ПоискТелефон));
	//- Котова А.Ю. 25.09.2018 ТЗ№ 72350 }
    ДополнительныеУсловия = "";
    ДополнительныеСвязи = "";
    Если ДополнительныеПараметрыОтбора <> Неопределено Тогда
        ПараметрНомер = 1;                                        
        Для каждого Параметр Из ДополнительныеПараметрыОтбора Цикл
            Если Не ЗначениеЗаполнено(Параметр.Значение) Тогда
                Продолжить;
            КонецЕсли;
            ИмяТаблицы = "ДополнительныйРевизит"+Формат(ПараметрНомер, "ЧГ=0");
            Запрос.УстановитьПараметр("Свойство" + Формат(ПараметрНомер, "ЧГ=0"), Параметр.Свойство);
            Запрос.УстановитьПараметр("Значение" + Формат(ПараметрНомер, "ЧГ=0"), Параметр.Значение);
            ДополнительныеУсловия = ДополнительныеУсловия + СтрШаблон(" И %1.Свойство = &Свойство%2 И %1.Значение = &Значение%2", ИмяТаблицы, Формат(ПараметрНомер, "ЧГ=0")) + Символы.ПС;
            ДополнительныеСвязи = ДополнительныеСвязи + СтрШаблон(" ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Абоненты.ДополнительныеРеквизиты КАК %1 ПО ПользователиАбонентов.Абонент = %1.Ссылка", ИмяТаблицы) + Символы.ПС;
            ПараметрНомер = ПараметрНомер + 1;
        КонецЦикла;
    КонецЕсли;
    Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ДополнительныеРеквизитыУсловия", ДополнительныеУсловия);
    Запрос.Текст = СтрЗаменить(Запрос.Текст,"           ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
                                            |           ПО (ИСТИНА)", ДополнительныеСвязи);
    Попытка
        СвойстваПользователей = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
        АбонентыПользователи = СвойстваПользователей.Скопировать();
        АбонентыПользователи.Свернуть("Абонент, ПользовательСервиса");
        СвойстваПользователей.Колонки.Добавить("ПредставлениеПриложений", ОбщегоНазначения.ОписаниеТипаСтрока(3000));
        ПредставлениеПриложений = ПредставлениеПриложений(АбонентыПользователи);
        Для каждого Строка Из СвойстваПользователей Цикл
            СтрокиПредставлений = ПредставлениеПриложений.НайтиСтроки(Новый Структура("Абонент, ПользовательСервиса", Строка.Абонент, Строка.ПользовательСервиса));
            Если СтрокиПредставлений.Количество() > 0 Тогда
                Строка.ПредставлениеПриложений = СтрокиПредставлений[0].Приложения;
            КонецЕсли; 
        КонецЦикла; 
	Исключение
        ВызватьИсключение НСтр("ru='Недостаточно прав для получения сведений о пользователях.'");         
    КонецПопытки; 
    
    Возврат СвойстваПользователей;
	
КонецФункции 
    
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеПриложений(АбонентыПользователи)
    
    ПредставлениеПриложений = Новый ТаблицаЗначений();
    ПредставлениеПриложений.Колонки.Добавить("Абонент", Новый ОписаниеТипов("СправочникСсылка.Абоненты"));
    ПредставлениеПриложений.Колонки.Добавить("ПользовательСервиса", Новый ОписаниеТипов("СправочникСсылка.ПользователиСервисов"));
    ПредставлениеПриложений.Колонки.Добавить("Приложения", ОбщегоНазначения.ОписаниеТипаСтрока(3000));
    
    Запрос = Новый Запрос;
    
    Запрос.Текст = 
    	"ВЫБРАТЬ
        |   АбонентыПользователи.Абонент,
        |   АбонентыПользователи.ПользовательСервиса
        |ПОМЕСТИТЬ АбонентыПользователи
        |ИЗ
        |   &АбонентыПользователи КАК АбонентыПользователи
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |   ПользователиПриложений.Приложение.Код КАК Код,
        |   АбонентыПользователи.Абонент КАК Абонент,
        |   АбонентыПользователи.ПользовательСервиса КАК ПользовательСервиса
        |ИЗ
        |   РегистрСведений.ПользователиПриложений КАК ПользователиПриложений
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ АбонентыПользователи КАК АбонентыПользователи
        |       ПО ПользователиПриложений.Приложение.Абонент = АбонентыПользователи.Абонент
        |           И ПользователиПриложений.ПользовательСервиса = АбонентыПользователи.ПользовательСервиса
        |ИТОГИ ПО
        |   Абонент,
        |   ПользовательСервиса";
    
    Запрос.УстановитьПараметр("АбонентыПользователи", АбонентыПользователи);
    
    Результат = Запрос.Выполнить();
    ВыборкаАбонент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока ВыборкаАбонент.Следующий() Цикл
        ВыборкаПользовательСервиса = ВыборкаАбонент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
        Пока ВыборкаПользовательСервиса.Следующий() Цикл
            ВыборкаКоды = ВыборкаПользовательСервиса.Выбрать();
            Коды = Новый Массив;
            Пока ВыборкаКоды.Следующий() Цикл
                Коды.Добавить(Формат(ВыборкаКоды.Код,"ЧГ=0"));
            КонецЦикла; 
            НоваяСтрока = ПредставлениеПриложений.Добавить();
            НоваяСтрока.Абонент = ВыборкаПользовательСервиса.Абонент;
            НоваяСтрока.ПользовательСервиса = ВыборкаПользовательСервиса.ПользовательСервиса;
            НоваяСтрока.Приложения = СтрСоединить(Коды,"; ");
        КонецЦикла; 
    КонецЦикла;
    
    Возврат ПредставлениеПриложений;
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта" И НЕ Параметры.Свойство("Ключ") Тогда 
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаСозданияПользователяВОБД";
	КонецЕсли;
КонецПроцедуры
 
#КонецОбласти 

#КонецЕсли