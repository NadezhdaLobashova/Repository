&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		Объект.ПериодРегистрации = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.ПериодРегистрации, "ДФ = ""гггг ММММ""");	
	ФормированиеДокументов = 0;
	Элементы.НачисленияСформироватьДокументы.Доступность = Ложь;
	Объект.Подразделения.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Подразделения");	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Направление = 1 Тогда
		Объект.ПериодРегистрации = КонецМесяца(Объект.ПериодРегистрации) + 1;
	Иначе
		Объект.ПериодРегистрации = НачалоМесяца(НачалоМесяца(Объект.ПериодРегистрации) - 1);
	КонецЕсли;
	
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.ПериодРегистрации, "ДФ = ""гггг ММММ""");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПринятымЧасам(Команда)

	Если Не ЗначениеЗаполнено(Объект.Подразделения) Тогда
		Сообщить("Сначала необходимо выбрать сотрудника!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		Сообщить("Сначала необходимо выбрать месяц!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.РежимНачисления) Тогда
		Сообщить("Сначала необходимо выбрать режим начисления!");
		Возврат;
	КонецЕсли;

	Если Объект.Начисления.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоПринятымЧасамЗавершение", ЭтотОбъект), "При заполнении табличная часть будет очищена! Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	Иначе
		ЗаполнитьПоПринятымЧасамНаСервере();
	КонецЕсли;
	
	Элементы.НачисленияСформироватьДокументы.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПринятымЧасамЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Начисления.Очистить();
	ЗаполнитьПоПринятымЧасамНаСервере();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПринятымЧасамНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Если Объект.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.РасчетПервойПоловиныМесяца Тогда
		ДатаНачалаПериода = НачалоМесяца(Объект.ПериодРегистрации);
		ДатаКонцаПериода = НачалоМесяца(Объект.ПериодРегистрации) + 60*60*24*15-1;
	ИначеЕсли Объект.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.ОкончательныйРасчет Тогда
		ДатаНачалаПериода = НачалоМесяца(Объект.ПериодРегистрации) + 60*60*24*15;
		ДатаКонцаПериода 	= КонецМесяца(Объект.ПериодРегистрации);
	Иначе 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(КадроваяИсторияСрезПоследних.Период) КАК Период,
		|	КадроваяИсторияСрезПоследних.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_МаксКадроваяистория
		|ИЗ
		|	РегистрСведений.КадроваяИстория.СрезПоследних(&ДатаОкончания, ) КАК КадроваяИсторияСрезПоследних
		|ГДЕ
		|	КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.Работает)
		|	И КадроваяИсторияСрезПоследних.Подразделение В(&Подразделение)
		|
		|СГРУППИРОВАТЬ ПО
		|	КадроваяИсторияСрезПоследних.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(КадроваяИстория.Период),
		|	КадроваяИстория.Сотрудник
		|ИЗ
		|	РегистрСведений.КадроваяИстория КАК КадроваяИстория
		|ГДЕ
		|	КадроваяИстория.Период <= &ДатаОкончания
		|	И КадроваяИстория.Период >= &ДатаНачала
		|	И КадроваяИстория.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСотрудника.НЕРаботает)
		|	И КадроваяИстория.Подразделение В(&Подразделение)
		|
		|СГРУППИРОВАТЬ ПО
		|	КадроваяИстория.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадроваяИстория.Подразделение КАК Подразделение,
		|	КадроваяИстория.Регион КАК Регион,
		|	КадроваяИстория.Должность КАК Должность,
		|	ВТ_МаксКадроваяистория.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_КадроваяИстория
		|ИЗ
		|	ВТ_МаксКадроваяистория КАК ВТ_МаксКадроваяистория
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИстория КАК КадроваяИстория
		|		ПО ВТ_МаксКадроваяистория.Период = КадроваяИстория.Период
		|			И ВТ_МаксКадроваяистория.Сотрудник = КадроваяИстория.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПланированиеПроектов_Факт.Сотрудник КАК Сотрудник,
		|	СУММА(ПланированиеПроектов_Факт.Время) КАК ИтогоЧасы,
		|	СУММА(ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)) КАК ИтогоСумма,
		|	ПланированиеПроектов_Факт.Проект.ОсновнаяСтатья КАК ТипНачисления,
		|	УчетФактическихДанныхВремя.Работа КАК ВидРаботы,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ПланированиеПроектов_Факт.Время
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЧасовАванс,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаАванс,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ПланированиеПроектов_Факт.Время
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЧасовЗП,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаЗП,
		|	ПланированиеПроектов_Факт.Подразделение КАК ПодразделениеПроекта,
		|	ПланированиеПроектов_Факт.Проект КАК Проект,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаАвансНаРуки,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаЗПНаРуки,
		|	СУММА(ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)) КАК ИтогоСуммаНаруки,
		|	"""" КАК ВидНачисления
		|ПОМЕСТИТЬ ВТ_ФактПоСотруднику
		|ИЗ
		|	РегистрНакопления.ПланированиеПроектов_Факт КАК ПланированиеПроектов_Факт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УчетФактическихДанных.Время КАК УчетФактическихДанныхВремя
		|		ПО ПланированиеПроектов_Факт.ИдентификаторСтроки = УчетФактическихДанныхВремя.ИдентификаторСтроки
		|ГДЕ
		|	ПланированиеПроектов_Факт.Период <= &ДатаОкончания
		|	И ПланированиеПроектов_Факт.Период >= &ДатаНачала
		|	И УчетФактическихДанныхВремя.Работа.ВидРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыРабот.РегламентированнаяРабота)
		|	И ПланированиеПроектов_Факт.ИдентификаторСтроки <> """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланированиеПроектов_Факт.Сотрудник,
		|	ПланированиеПроектов_Факт.Проект.ОсновнаяСтатья,
		|	УчетФактическихДанныхВремя.Работа,
		|	ПланированиеПроектов_Факт.Подразделение,
		|	ПланированиеПроектов_Факт.Проект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПланированиеПроектов_Факт.Сотрудник,
		|	СУММА(ПланированиеПроектов_Факт.Время),
		|	СУММА(ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)),
		|	ПланированиеПроектов_Факт.Проект.ОсновнаяСтатья,
		|	ЗНАЧЕНИЕ(Справочник.Работы.ПустаяСсылка),
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ПланированиеПроектов_Факт.Время
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ПланированиеПроектов_Факт.Время
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	ПланированиеПроектов_Факт.Подразделение,
		|	ПланированиеПроектов_Факт.Проект,
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период < ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ВЫБОР
		|			КОГДА ПланированиеПроектов_Факт.Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, 15)
		|				ТОГДА ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ),
		|	СУММА(ЕСТЬNULL(ПланированиеПроектов_Факт.Сумма, 0)),
		|	ВЫБОР
		|		КОГДА ПланированиеПроектов_Факт.Регистратор ССЫЛКА Документ.ПрочиеЗатраты
		|			ТОГДА ВЫБОР
		|					КОГДА ПланированиеПроектов_Факт.Регистратор.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипПрочихЗатрат.Оклад)
		|						ТОГДА ""Оклад""
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ПланированиеПроектов_Факт.Регистратор.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипПрочихЗатрат.Премия)
		|								ТОГДА ""Премия""
		|							ИНАЧЕ """"
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ПланированиеПроектов_Факт КАК ПланированиеПроектов_Факт
		|ГДЕ
		|	ПланированиеПроектов_Факт.Период <= &ДатаОкончания
		|	И ПланированиеПроектов_Факт.Период >= &ДатаНачала
		|	И ПланированиеПроектов_Факт.ИдентификаторСтроки = """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланированиеПроектов_Факт.Сотрудник,
		|	ПланированиеПроектов_Факт.Подразделение,
		|	ПланированиеПроектов_Факт.Проект,
		|	ПланированиеПроектов_Факт.Проект.ОсновнаяСтатья,
		|	ВЫБОР
		|		КОГДА ПланированиеПроектов_Факт.Регистратор ССЫЛКА Документ.ПрочиеЗатраты
		|			ТОГДА ВЫБОР
		|					КОГДА ПланированиеПроектов_Факт.Регистратор.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипПрочихЗатрат.Оклад)
		|						ТОГДА ""Оклад""
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ПланированиеПроектов_Факт.Регистратор.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипПрочихЗатрат.Премия)
		|								ТОГДА ""Премия""
		|							ИНАЧЕ """"
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФактПоСотруднику.ВидРаботы КАК ВидРаботы,
		|	СУММА(ВТ_ФактПоСотруднику.ИтогоЧасы) КАК ИтогоЧасы,
		|	СУММА(ВТ_ФактПоСотруднику.ИтогоСумма * 0.87 * ВТ_КадроваяИстория.Регион.РайонныйКоэффициент) КАК ИтогоСумма,
		|	ВТ_ФактПоСотруднику.ТипНачисления КАК ТипНачисления,
		|	СУММА(ВТ_ФактПоСотруднику.ЧасовАванс) КАК ЧасовАванс,
		|	СУММА(ВТ_ФактПоСотруднику.СуммаАванс * 0.87 * ВТ_КадроваяИстория.Регион.РайонныйКоэффициент) КАК СуммаАванс,
		|	СУММА(ВТ_ФактПоСотруднику.ЧасовЗП) КАК ЧасовЗП,
		|	СУММА(ВТ_ФактПоСотруднику.СуммаЗП * 0.87 * ВТ_КадроваяИстория.Регион.РайонныйКоэффициент) КАК СуммаЗП,
		|	ВТ_ФактПоСотруднику.ПодразделениеПроекта КАК ПодразделениеПроекта,
		|	ВТ_ФактПоСотруднику.Проект КАК Проект,
		|	ВТ_КадроваяИстория.Подразделение КАК Подразделение,
		|	ВТ_КадроваяИстория.Должность КАК Должность,
		|	ВТ_КадроваяИстория.Сотрудник КАК Сотрудник,
		|	ВТ_КадроваяИстория.Регион КАК Регион,
		|	СУММА(ВТ_ФактПоСотруднику.СуммаАвансНаРуки) КАК СуммаАвансНаРуки,
		|	СУММА(ВТ_ФактПоСотруднику.СуммаЗПНаРуки) КАК СуммаЗПНаРуки,
		|	СУММА(ВТ_ФактПоСотруднику.ИтогоСуммаНаруки) КАК ИтогоСуммаНаруки,
		|	ВТ_ФактПоСотруднику.ВидНачисления КАК ВидНачисления
		|ПОМЕСТИТЬ ВТ_КадроваяИсторияФакт
		|ИЗ
		|	ВТ_КадроваяИстория КАК ВТ_КадроваяИстория
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФактПоСотруднику КАК ВТ_ФактПоСотруднику
		|		ПО ВТ_КадроваяИстория.Сотрудник = ВТ_ФактПоСотруднику.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ФактПоСотруднику.ПодразделениеПроекта,
		|	ВТ_ФактПоСотруднику.ТипНачисления,
		|	ВТ_ФактПоСотруднику.Проект,
		|	ВТ_ФактПоСотруднику.ВидРаботы,
		|	ВТ_КадроваяИстория.Подразделение,
		|	ВТ_КадроваяИстория.Должность,
		|	ВТ_КадроваяИстория.Регион,
		|	ВТ_КадроваяИстория.Сотрудник,
		|	ВТ_ФактПоСотруднику.ВидНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение КАК Подразделение,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность КАК Должность,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.ВидРаботы КАК ВидРаботы,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регион КАК Регион,
		|	МАКСИМУМ(СтавкиСотрудниковПоВидамРаботСрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_МаскПоСтавкам
		|ИЗ
		|	РегистрСведений.СтавкиСотрудниковПоВидамРабот.СрезПоследних(&ДатаОкончания, ) КАК СтавкиСотрудниковПоВидамРаботСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Подразделение,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Должность,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.Регион,
		|	СтавкиСотрудниковПоВидамРаботСрезПоследних.ВидРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МаскПоСтавкам.Подразделение КАК Подразделение,
		|	ВТ_МаскПоСтавкам.Должность КАК Должность,
		|	ВТ_МаскПоСтавкам.Регион КАК Регион,
		|	ВТ_МаскПоСтавкам.ВидРаботы КАК ВидРаботы,
		|	ЕСТЬNULL(СтавкиСотрудниковПоВидамРабот.Ставка, СтавкиСотрудниковПоВидамРабот.Оклад) КАК Ставка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СтавкиСотрудниковПоВидамРабот.Ставка, 0) > 0
		|			ТОГДА ""Сдельная оплата""
		|		КОГДА ЕСТЬNULL(СтавкиСотрудниковПоВидамРабот.Оклад, 0) > 0
		|			ТОГДА ""Оклад""
		|	КОНЕЦ КАК ВидНачисления
		|ПОМЕСТИТЬ ВТ_СтавкиПоВидамРабот
		|ИЗ
		|	ВТ_МаскПоСтавкам КАК ВТ_МаскПоСтавкам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиСотрудниковПоВидамРабот КАК СтавкиСотрудниковПоВидамРабот
		|		ПО ВТ_МаскПоСтавкам.Период = СтавкиСотрудниковПоВидамРабот.Период
		|			И ВТ_МаскПоСтавкам.Подразделение = СтавкиСотрудниковПоВидамРабот.Подразделение
		|			И ВТ_МаскПоСтавкам.Должность = СтавкиСотрудниковПоВидамРабот.Должность
		|			И ВТ_МаскПоСтавкам.ВидРаботы = СтавкиСотрудниковПоВидамРабот.ВидРаботы
		|			И ВТ_МаскПоСтавкам.Регион = СтавкиСотрудниковПоВидамРабот.Регион
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КадроваяИсторияФакт.ВидРаботы КАК ВидРабот,
		|	ВЫРАЗИТЬ(ВТ_КадроваяИсторияФакт.ИтогоЧасы КАК ЧИСЛО(10, 2)) КАК Количество,
		|	ВЫРАЗИТЬ(ВТ_КадроваяИсторияФакт.ИтогоСумма КАК ЧИСЛО(10, 2)) КАК СуммаСтар,
		|	ВЫРАЗИТЬ(ВТ_КадроваяИсторияФакт.ИтогоСуммаНаруки КАК ЧИСЛО(10, 2)) КАК Сумма,
		|	ЕСТЬNULL(ВТ_КадроваяИсторияФакт.ТипНачисления, ЗНАЧЕНИЕ(Справочник.СтатьиПланирования.Пустаяссылка)) КАК ТипНачисления,
		|	ЕСТЬNULL(ВТ_КадроваяИсторияФакт.ПодразделениеПроекта, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК Подразделение,
		|	ЕСТЬNULL(ВТ_КадроваяИсторияФакт.Проект, ЗНАЧЕНИЕ(Справочник.Проекты.пустаяСсылка)) КАК Проект,
		|	ЕСТЬNULL(ВТ_КадроваяИсторияФакт.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК ПодразделениеСотрудника,
		|	ЕСТЬNULL(ВТ_КадроваяИсторияФакт.Должность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК Должность,
		|	ВТ_КадроваяИсторияФакт.Сотрудник КАК Сотрудник,
		|	ВТ_СтавкиПоВидамРабот.Ставка КАК Ставка,
		|	ВЫБОР
		|		КОГДА ВТ_КадроваяИсторияФакт.ВидНачисления <> """"
		|			ТОГДА ВТ_КадроваяИсторияФакт.ВидНачисления
		|		ИНАЧЕ ВТ_СтавкиПоВидамРабот.ВидНачисления
		|	КОНЕЦ КАК ВидНачисления
		|ИЗ
		|	ВТ_КадроваяИсторияФакт КАК ВТ_КадроваяИсторияФакт
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиПоВидамРабот КАК ВТ_СтавкиПоВидамРабот
		|		ПО ВТ_КадроваяИсторияФакт.ВидРаботы.ВидыРабот = ВТ_СтавкиПоВидамРабот.ВидРаботы
		|			И ВТ_КадроваяИсторияФакт.Подразделение = ВТ_СтавкиПоВидамРабот.Подразделение
		|			И ВТ_КадроваяИсторияФакт.Регион = ВТ_СтавкиПоВидамРабот.Регион
		|			И ВТ_КадроваяИсторияФакт.Должность = ВТ_СтавкиПоВидамРабот.Должность
		|ГДЕ
		|	ВТ_КадроваяИсторияФакт.ИтогоСумма > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделениеСотрудника,
		|	Сотрудник,
		|	ВидРабот
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаКонцаПериода);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	Объект.Начисления.Загрузить(ТЗ);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПриАктивизацииСтроки(Элемент)
	СуммаСтрок = 0;
	Для Каждого Эл Из Элементы.Начисления.ВыделенныеСтроки Цикл
		Строка = Объект.Начисления.НайтиПоИдентификатору(Эл);
		СуммаСтрок = СуммаСтрок + Строка.Сумма;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	Если Не ЗначениеЗаполнено(Объект.Подразделения) Тогда
		Сообщить("Сначала необходимо выбрать сотрудника!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		Сообщить("Сначала необходимо выбрать месяц!");
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.РежимНачисления) Тогда
		Сообщить("Сначала необходимо выбрать режим начисления!");
		Возврат;
	КонецЕсли;

	Если Объект.Начисления.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьДокументыЗавершение", ЭтотОбъект), "Будут сформированы документы для выгрузки в ЗУП! Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	Иначе
		Сообщить("Нет данных для формирования документов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьДокументыНаСервере();
	
	ОповеститьОбИзменении(Тип("ДокументСсылка.РегистрацияНачисленийСотрудниковПодразделения"));
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыНаСервере()
	ТаблицаГруппировки = Объект.Начисления.Выгрузить();
	Если ФормированиеДокументов = 0 Тогда
		ПолеГруппировки = "Подразделение";
		ТаблицаГруппировки.Свернуть("Подразделение, ПодразделениеСотрудника");
	Иначе
		ПолеГруппировки = "ПодразделениеСотрудника";
		ТаблицаГруппировки.Свернуть("ПодразделениеСотрудника");
	КонецЕсли;	
	ТаблицаГруппировкиДляЗапроса = Объект.Начисления.Выгрузить();
	ТаблицаГруппировкиДляЗапроса.Свернуть("Подразделение, ПодразделениеСотрудника");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ФормированиеДокументов = 0
		|			ТОГДА ТаблицаГруппировки.Подразделение
		|		ИНАЧЕ ТаблицаГруппировки.ПодразделениеСотрудника
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаГруппировки.ПодразделениеСотрудника КАК ПодразделениеСотрудника
		|ПОМЕСТИТЬ втТаблицаГруппировки
		|ИЗ
		|	&ТаблицаГруппировки КАК ТаблицаГруппировки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияНачисленийСотрудниковПодразделения.Ссылка КАК Ссылка,
		|	РегистрацияНачисленийСотрудниковПодразделения.РежимНачисления КАК РежимНачисления,
		|	РегистрацияНачисленийСотрудниковПодразделения.Подразделение КАК Подразделение,
		|	РегистрацияНачисленийСотрудниковПодразделения.ПериодРегистрации КАК ПериодРегистрации
		|ИЗ
		|	Документ.РегистрацияНачисленийСотрудниковПодразделения КАК РегистрацияНачисленийСотрудниковПодразделения
		|ГДЕ
		|	РегистрацияНачисленийСотрудниковПодразделения.Проведен
		|	И НЕ РегистрацияНачисленийСотрудниковПодразделения.ПометкаУдаления
		|	И РегистрацияНачисленийСотрудниковПодразделения.РежимНачисления = &РежимНачисления
		|	И РегистрацияНачисленийСотрудниковПодразделения.ПериодРегистрации = &ПериодРегистрации
		|	И (РегистрацияНачисленийСотрудниковПодразделения.Подразделение, РегистрацияНачисленийСотрудниковПодразделения.ПодразделениеСотрудника) В
		|			(ВЫБРАТЬ
		|				втТаблицаГруппировки.Подразделение,
		|				втТаблицаГруппировки.ПодразделениеСотрудника
		|			ИЗ
		|				втТаблицаГруппировки КАК втТаблицаГруппировки)";
	
	Запрос.УстановитьПараметр("ТаблицаГруппировки", ТаблицаГруппировкиДляЗапроса);
	Запрос.УстановитьПараметр("ФормированиеДокументов", ФормированиеДокументов);
//	Запрос.УстановитьПараметр("ПодразделенияСписок", ТаблицаГруппировки.ВыгрузитьКолонку(ПолеГруппировки));
	Запрос.УстановитьПараметр("РежимНачисления", Объект.РежимНачисления);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ДокументыУжеЕсть = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("Уже существует документ на выбранный период по подразделению: " + ВыборкаДетальныеЗаписи.Подразделение + " - " + ВыборкаДетальныеЗаписи.Ссылка, СтатусСообщения.Важное);
		ДокументыУжеЕсть = Истина;
	КонецЦикла;
	
	Если ДокументыУжеЕсть И Не ДополнительныеДокументы Тогда
		Сообщить("Формирование документов не выполнено.");
		Возврат;
	КонецЕсли;
	
	Если Объект.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.РасчетПервойПоловиныМесяца Тогда
		ДатаКонцаПериода = НачалоМесяца(Объект.ПериодРегистрации) + 60*60*24*15-1;
	Иначе
		ДатаКонцаПериода 	= КонецМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

	Для Каждого СтрТГ Из ТаблицаГруппировки Цикл
		ДокРег = Документы.РегистрацияНачисленийСотрудниковПодразделения.СоздатьДокумент();
		ДокРег.Дата = ДатаКонцаПериода;
		ДокРег.РежимНачисления = Объект.РежимНачисления;
		ДокРег.ПериодРегистрации = Объект.ПериодРегистрации;
		ДокРег.Подразделение = СтрТГ[ПолеГруппировки];
		ДокРег.ПодразделениеСотрудника = СтрТГ.ПодразделениеСотрудника;
		ДокРег.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		//ДокРег.Комментарий = "Создан автоматически";
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить(ПолеГруппировки, СтрТГ[ПолеГруппировки]);
		Если ФормированиеДокументов = 0 Тогда
			СтруктураПоиска.Вставить("ПодразделениеСотрудника", СтрТГ.ПодразделениеСотрудника);
		КонецЕсли;	
		
		ДанныеПодразделения = Объект.Начисления.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрДанные Из ДанныеПодразделения Цикл
			НовСтрока = ДокРег.Начисления.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, СтрДанные);
		КонецЦикла;	
		
		Попытка
			ДокРег.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Успешно сформирован: " + ДокРег.Ссылка);
		Исключение
			Сообщить("Не удалось сформировать документ по причине: " + ОписаниеОшибки());
		КонецПопытки;	
	КонецЦикла;	
	
	Сообщить("Формирование документов завершено");
	Объект.Начисления.Очистить();
КонецПроцедуры

