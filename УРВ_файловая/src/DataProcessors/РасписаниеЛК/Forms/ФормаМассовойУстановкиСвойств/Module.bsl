
&НаКлиенте
Процедура ОК(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	УстанавливаемыеСвойства = Новый Структура;
	УстанавливаемыеСвойства.Вставить("ДоступноДляСамозаписи"				, ДоступноДляСамозаписи);
	
	СтруктураВозВрата = Новый Структура;
	СтруктураВозВрата.Вставить("УстанавливаемыеСвойства"	, УстанавливаемыеСвойства);
	СтруктураВозВрата.Вставить("ДатаНачала"					, ДатаНачала);
	СтруктураВозВрата.Вставить("ДатаОкончания"				, ДатаОкончания);
	СтруктураВозВрата.Вставить("ВремяНачала"				, ВремяНачала);
	СтруктураВозВрата.Вставить("ВремяОкончания"				, ВремяОкончания);
	СтруктураВозВрата.Вставить("Сотрудники"					, ПолучитьМассивСотрудников());
	
	Закрыть(СтруктураВозВрата);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БоР_ОбщийМодуль.ЗаполнитьРеквизитыИзПараметров(ЭтаФорма, Неопределено);
	ЗаполнитьСотрудников();
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСотрудников()
	
	ОтборПоИзменить = Новый Структура;
	ОтборПоИзменить.Вставить("Изменить"				, Истина);
	ВозВрат Сотрудники.Выгрузить(ОтборПоИзменить).ВыгрузитьКолонку("Сотрудник");
	
КонецФункции

&НаСервере
Функция ЗаполнитьСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиСФлажками.Сотрудник КАК Сотрудник,
	|	СотрудникиСФлажками.Изменить
	|ПОМЕСТИТЬ ВТСотрудникиСФлажками
	|ИЗ
	|	&СотрудникиСФлажками КАК СотрудникиСФлажками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасписаниеКонсультацийСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиРасписания
	|ИЗ
	|	РегистрСведений.РасписаниеКонсультаций.СрезПоследних(
	|			,
	|			ДатаВремяНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
	|				И &УсловиеПоСотруднику) КАК РасписаниеКонсультацийСрезПоследних
	|ГДЕ
	|	НЕ РасписаниеКонсультацийСрезПоследних.НеДействует
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудникиРасписания.Сотрудник,
	|	ЕСТЬNULL(ВТСотрудникиСФлажками.Изменить, ЛОЖЬ) КАК Изменить
	|ИЗ
	|	ВТСотрудникиРасписания КАК ВТСотрудникиРасписания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиСФлажками КАК ВТСотрудникиСФлажками
	|		ПО ВТСотрудникиРасписания.Сотрудник = ВТСотрудникиСФлажками.Сотрудник";
	
	ДР = Бор_ПовторноеИспользованиеКлиентСервер.ПолучитьДоступностьРолей();
	ДоступностьПодчиненныхПодразделенийЛК	= Истина;
	ДоступностьСвоегоПодразделенияЛК		= Истина;
	ДоступностьВсегоДляПП					= БоР_ОбщийМодульКлиентСервер.ВБулево(БоР_ОбщийМодуль.ПолучитьНастройку("ЛК_ПолнымПравамДоступныВсеСотрудники"));
	
	Если ДР.ПолныеПрава И ДоступностьВсегоДляПП Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотруднику", "ИСТИНА");
	Иначе // все доступные
		// возможно, надо заменить "В" на соединения с ВТ, но при малом объеме списка - и так неплохо
		МассивСотрудников = РегистрыСведений.РолиСотрудниковЛК.ПолучитьМассивДоступныхСотрудников(ДоступностьПодчиненныхПодразделенийЛК, ДоступностьСвоегоПодразделенияЛК);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоСотруднику", "Сотрудник В (&МассивСотрудников)");
		Запрос.УстановитьПараметр("МассивСотрудников"			, МассивСотрудников);
	КонецЕсли;
	
	ОтборПоИзменить = Новый Структура;
	ОтборПоИзменить.Вставить("Изменить"				, Истина);
	СотрудникиСФлажками = Сотрудники.Выгрузить(ОтборПоИзменить);
	
	Запрос.УстановитьПараметр("ДатаНачала"				, ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"			, КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("СотрудникиСФлажками"		, СотрудникиСФлажками);
	РезультатЗапроса = Запрос.Выполнить();
	Сотрудники.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ЗаполнитьСотрудников();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ЗаполнитьСотрудников()
КонецПроцедуры

#Область Флажки
&НаКлиенте
Процедура Сотрудники_ВключитьВсе(Команда)
	ВыделенныеСтроки = Элементы.Сотрудники.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		Для каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
			СтрокаТаблицы = Сотрудники.НайтиПоИдентификатору(ИдентификаторСтроки);
			СтрокаТаблицы.Изменить = Истина;
		КонецЦикла;
	Иначе
		Для каждого СтрокаТаблицы Из Сотрудники Цикл
			СтрокаТаблицы.Изменить = Истина;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сотрудники_Инвертировать(Команда)
	ВыделенныеСтроки = Элементы.Сотрудники.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		Для каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
			СтрокаТаблицы = Сотрудники.НайтиПоИдентификатору(ИдентификаторСтроки);
			СтрокаТаблицы.Изменить = Не СтрокаТаблицы.Изменить;
		КонецЦикла;
	Иначе
		Для каждого СтрокаТаблицы Из Сотрудники Цикл
			СтрокаТаблицы.Изменить = Не СтрокаТаблицы.Изменить;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сотрудники_СнятьВсе(Команда)
	ВыделенныеСтроки = Элементы.Сотрудники.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		Для каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
			СтрокаТаблицы = Сотрудники.НайтиПоИдентификатору(ИдентификаторСтроки);
			СтрокаТаблицы.Изменить = Ложь;
		КонецЦикла;
	Иначе
		Для каждого СтрокаТаблицы Из Сотрудники Цикл
			СтрокаТаблицы.Изменить = Ложь;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
