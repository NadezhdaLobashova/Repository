
&НаКлиенте
Процедура ОК(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	
	//Лобашова 07.03.2019 81724 +
	//ОтветФункции =  СоздатьДокументыНаСервере();
	//
	//ПараметрыФормы = Новый Структура;
	//
	//ПараметрыФормы.Вставить("ТолькоПросмотр"	, Истина);
	//ПараметрыФормы.Вставить("Тема"	, ВопросКлиента);
	//ПараметрыФормы.Вставить("Проект"	, Этотобъект.ВладелецФормы.Проект);
	
	//Трудозатраты = Новый Структура;
	//Трудозатраты.Вставить("ОписаниеРаботы", "");
	//Трудозатраты.Вставить("ЗатратыВремени", Этотобъект.ВладелецФормы.ПродолжительностьФакт);
	//Трудозатраты.Вставить("Пользователь", Этотобъект.Сотрудник);
	//Трудозатраты.Вставить("ДатаТрудозатрат", Формат(Этотобъект.ДатаВремяНачала,"ДЛФ=Д"));

	//ПараметрыФормы.Вставить("Трудозатраты"	, Трудозатраты);
	//ПараметрыФормы.Вставить("ИсходящееОбращение"	, ДанныеОбъектаВыполнения);
	
	Если Не СоздатьДокументыНаСервере() Тогда
	//Если Не ОтветФункции.СтандартнаяОбработка Тогда
	//Лобашова 07.03.2019 81724 -
		ВозВрат;
	КонецЕсли;
	
	СтруктураВозВрата = Новый Структура;
	СтруктураВозВрата.Вставить("РезультатОткрытия"			, Истина);
	Закрыть(СтруктураВозВрата);
	
	//Лобашова 07.03.2019 81724 +
	
	//ТекущаяОбласть = ТабДокРасписания.ТекущаяОбласть;
	//Расшифровка = ТекущаяОбласть.Расшифровка;
	//ДанныеЯчейки = ПолучитьДанныеЯчейкиПоРасшифровке(Расшифровка);

	//Событие = БоР_ОбщийМодуль.ПолучитьПолеОбъекта(ОтветФункции.ДокументВыполнения, "Событие");
	//Событие = ОтветФункции.ДокументВыполнения;
	
	//ПараметрыФормы.Вставить("Ключ"				, Событие);
	
	//Если ЗначениеЗаполнено(Событие) И ТипЗнч(Событие) = Тип("ДокументСсылка.Обращение") Тогда
		//ДополнительныеПараметры.Вставить("Событие"	, Событие);
		//ЭлементыМеню.Добавить("Событие");
	//КонецЕсли;
	//ДанныеОбъектаВыполнения = ПолучитьДанныеОбъектаВыполнения(ОтветФункции.ДокументВыполнения);
	
	
	
	//ИмяФормыДляОткрытия = "Документ." + БоР_ОбщийМодуль.ПолучитьИмяОбъектаПоСсылке(Событие) + ".ФормаОбъекта";
	//БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, Неопределено, Неопределено);

	//Лобашова 07.03.2019 81724 -

	//СтруктураВозВрата = Новый Структура;
	//СтруктураВозВрата.Вставить("Сотрудник"				, Сотрудник);
	//СтруктураВозВрата.Вставить("ДатаВремяНачала"		, ДатаВремяНачала);
	//СтруктураВозВрата.Вставить("Контрагент"				, Контрагент);
	//СтруктураВозВрата.Вставить("КонтактноеЛицо"			, КонтактноеЛицо);
	//СтруктураВозВрата.Вставить("ВидУслуги"		, ВидУслуги);
	//СтруктураВозВрата.Вставить("ТемаВопроса"			, ТемаВопроса);
	//СтруктураВозВрата.Вставить("Результат"				, Результат);
	//СтруктураВозВрата.Вставить("ВопросКлиента"			, ВопросКлиента);
	//СтруктураВозВрата.Вставить("ОтветСотрудника"		, ОтветСотрудника);
	//СтруктураВозВрата.Вставить("ДатаВремяНачалаФакт"	, ДатаВремяНачалаФакт);
	//СтруктураВозВрата.Вставить("ДатаВремяОкончанияФакт"	, ДатаВремяОкончанияФакт);
	//СтруктураВозВрата.Вставить("ПричинаНеоказания"		, ПричинаНеоказания);
	//СтруктураВозВрата.Вставить("КатегорииСобытия"		, ПолучитьКатегорииСобытия());
	//Закрыть(СтруктураВозВрата);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БоР_ОбщийМодуль.ЗаполнитьРеквизитыИзПараметров(ЭтаФорма, Неопределено);
	//ЗаполнитьКатегории();
	УстановитьВидимостьДоступность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзменении(Элемент)
	Если Результат = ПредопределенноеЗначение("Перечисление.РезультатыКонсультации.ОказанаКонсультация") Тогда
		ПричинаНеоказания = Неопределено;
	КонецЕсли;
	УстановитьВидимостьДоступность(ЭтаФорма);
КонецПроцедуры

// БоР : УстановитьВидимостьДоступность() 18.01.2017 18:51:42
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(ЭтаФорма) Экспорт
	
	Если ЭтаФорма.Результат = ПредопределенноеЗначение("Перечисление.РезультатыКонсультации.ОказанаКонсультация") Тогда
		ЭтаФорма.Элементы.ПричинаНеоказания.ТолькоПросмотр = Истина;
		ЭтаФорма.Элементы.ПричинаНеоказания.АвтоОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.ПричинаНеоказания.ОтметкаНезаполненного = Ложь;
		ЭтаФорма.Элементы.ПричинаНеоказания.АвтоВыборНезаполненного = Ложь;
	Иначе
		ЭтаФорма.Элементы.ПричинаНеоказания.ТолькоПросмотр = Ложь;
		ЭтаФорма.Элементы.ПричинаНеоказания.АвтоОтметкаНезаполненного = Истина;
		ЭтаФорма.Элементы.ПричинаНеоказания.ОтметкаНезаполненного = Не ЗначениеЗаполнено(ЭтаФорма.ПричинаНеоказания);
		ЭтаФорма.Элементы.ПричинаНеоказания.АвтоВыборНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Результат = ПредопределенноеЗначение("Перечисление.РезультатыКонсультации.НеОказанаКонсультация") Тогда
		ПроверяемыеРеквизиты.Добавить("ПричинаНеоказания");
	КонецЕсли;
КонецПроцедуры

// БоР :  19.01.2017 20:13:57
&НаСервере
Процедура ЗаполнитьКатегории() Экспорт

//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	КатегорииОбъектов.Ссылка КАК Категория
//	|ИЗ
//	|	Справочник.КатегорииОбъектов КАК КатегорииОбъектов
//	|ГДЕ
//	|	НЕ КатегорииОбъектов.ПометкаУдаления
//	|	И КатегорииОбъектов.НазначениеКатегории В(&НазначениеКатегорий)
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Категория
//	|АВТОУПОРЯДОЧИВАНИЕ";
//	
//	Запрос.УстановитьПараметр("НазначениеКатегорий"	, ОбщегоНазначения.ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке(Документы.Событие.ПустаяСсылка()));
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	КатегорииСобытия.Загрузить(РезультатЗапроса.Выгрузить());
//	
КонецПроцедуры

// БоР :  19.01.2017 20:13:57
&НаСервере
Функция ПолучитьКатегорииСобытия() Экспорт

	//МассивКатегорий = Новый Массив;
	//Для каждого СтрокаКатегорииСобытия Из КатегорииСобытия Цикл
	//	Если СтрокаКатегорииСобытия.Включить Тогда
	//		МассивКатегорий.Добавить(СтрокаКатегорииСобытия.Категория)
	//	КонецЕсли;
	//КонецЦикла;
	//ВозВрат МассивКатегорий;
	//
КонецФункции

&НаСервере
Функция СоздатьДокументыНаСервере() Экспорт
	
	ТекущаяДата = ТекущаяДата();
	
	МассивДокументов = Новый Массив;
	ДокументОбъект = Документы.ВыполнениеКонсультацииЛК.СоздатьДокумент();
	ДокументОбъект.Дата						= ТекущаяДата;
	ДокументОбъект.ИсточникСоздания			= "РасписаниеЛК";
	ДокументОбъект.Сотрудник				= Сотрудник;
	ДокументОбъект.ДатаВремяНачала			= ДатаВремяНачала;
	ДокументОбъект.Контрагент				= Контрагент;
	ДокументОбъект.КонтактноеЛицо			= КонтактноеЛицо;
	ДокументОбъект.ВидУслуги				= ВидУслуги;
	ДокументОбъект.ТемаВопроса				= ТемаВопроса;
	ДокументОбъект.Результат				= Результат;
	ДокументОбъект.ВопросКлиента			= ВопросКлиента;
	ДокументОбъект.ОтветСотрудника			= ОтветСотрудника;
	ДокументОбъект.ДатаВремяНачалаФакт		= ДатаВремяНачалаФакт;
	ДокументОбъект.ДатаВремяОкончанияФакт	= ДатаВремяОкончанияФакт;
	ДокументОбъект.ПродолжительностьФакт	= ПродолжительностьФакт;
	ДокументОбъект.ПричинаНеоказания		= ПричинаНеоказания;
	//МассивКатегорий = ПолучитьКатегорииСобытия();
	//Для каждого Категория Из МассивКатегорий Цикл
	//	СтрокаКатегорииСобытия = ДокументОбъект.КатегорииСобытия.Добавить();
	//	СтрокаКатегорииСобытия.Категория = Категория;
	//КонецЦикла;
	МассивДокументов.Добавить(ДокументОбъект);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Для каждого ДокументОбъект Из МассивДокументов Цикл
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		Исключение
			ОтменитьТранзакцию();
			#Область Вывод_сообщений
			СообщенияПользователю = ПолучитьСообщенияПользователю(Истина);
			Если СообщенияПользователю.Количество() > 0 Тогда // есть что сказать
				ТекстОшибки = "";
				Для каждого СообщениеПользователю Из СообщенияПользователю Цикл
					ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "") + СообщениеПользователю.Текст;
				КонецЦикла;
				Сообщить(ТекстОшибки);
			Иначе
				ТекстОшибки = "Ошибка при создании документа " + ДокументОбъект.Метаданные().Синоним + "" + Символы.ПС;
				Сообщить(ТекстОшибки + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецЕсли;
			#КонецОбласти
			ВозВрат Ложь;
		КонецПопытки;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
	////Лобашова 07.03.2019 81724 +
	//ОтветФункции =  новый Структура;
	//ОтветФункции.Вставить("СтандартнаяОбработка", Истина);
	//ОтветФункции.Вставить("ДокументВыполнения", ДокументОбъект.Ссылка);

	ВозВрат Истина;
	//ВозВрат ОтветФункции;
	//Лобашова 07.03.2019 81724 -
КонецФункции
