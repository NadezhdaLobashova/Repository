
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БоР_ОбщийМодуль.ЗаполнитьРеквизитыИзПараметров(ЭтаФорма, Неопределено);
	
	ЭтаФорма.Элементы.Запланировать			.Доступность	= ЭтаФорма.ДоступныеДействия.ДоступноСоздание;
	ЭтаФорма.Элементы.ЗаблокироватьЗапись	.Доступность	= ЭтаФорма.ДоступныеДействия.ДоступноБлокировка;

КонецПроцедуры

&НаКлиенте
Процедура Запланировать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	
	ДанныеСотрудника = Новый Структура;
	ДанныеСотрудника.Вставить("Сотрудник"				, Сотрудник);
	ДанныеСотрудника.Вставить("Слоты"					, Новый Массив);
	
	СвойстваСлота = Новый Структура;
	СвойстваСлота.Вставить("Сотрудник"				, Сотрудник);
	СвойстваСлота.Вставить("ДатаВремяНачала"		, ДатаВремяНачала);
	СвойстваСлота.Вставить("ДатаВремяОкончания"		, ДатаВремяОкончания);
	СвойстваСлота.Вставить("Продолжительность"		, Продолжительность);
			
	ДанныеСотрудника.Слоты.Добавить(СвойстваСлота);
	
	ДанныеСлотов = Новый Массив;
	ДанныеСлотов.Добавить(ДанныеСотрудника);
	
	Адрес_ДанныеСлотов = ПоместитьВоВременноеХранилище(ДанныеСлотов, ЭтаФорма.УникальныйИдентификатор);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес_ДанныеСлотов"		, Адрес_ДанныеСлотов);
	ПараметрыФормы.Вставить("ПутьКМетаданнымОбработки"	, ПутьКМетаданнымОбработки);

	ДополнительныеПараметры = Новый Структура;
	ИмяФормыДляОткрытия = ПутьКМетаданнымОбработки + ".Форма.ФормаПланирования";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "Запланировать_Завершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Запланировать_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураВозВрата = Результат;
	Если СтруктураВозВрата = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	Если ТипЗнч(СтруктураВозВрата) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	Если Не СтруктураВозВрата.Свойство("РезультатОткрытия") Тогда
		ВозВрат;
	КонецЕсли;
	Если СтруктураВозВрата.РезультатОткрытия <> Истина Тогда
		ВозВрат;
	КонецЕсли;
	Закрыть(СтруктураВозВрата);

КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьЗапись(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		ВозВрат;
	КонецЕсли;
	
	ДанныеСотрудника = Новый Структура;
	ДанныеСотрудника.Вставить("Сотрудник"				, Сотрудник);
	ДанныеСотрудника.Вставить("Слоты"					, Новый Массив);
	
	СвойстваСлота = Новый Структура;
	СвойстваСлота.Вставить("Сотрудник"				, Сотрудник);
	СвойстваСлота.Вставить("ДатаВремяНачала"		, ДатаВремяНачала);
	СвойстваСлота.Вставить("ДатаВремяОкончания"		, ДатаВремяОкончания);
	СвойстваСлота.Вставить("Продолжительность"		, Продолжительность);
			
	ДанныеСотрудника.Слоты.Добавить(СвойстваСлота);
	
	ДанныеСлотов = Новый Массив;
	ДанныеСлотов.Добавить(ДанныеСотрудника);
	
	Адрес_ДанныеСлотов = ПоместитьВоВременноеХранилище(ДанныеСлотов, ЭтаФорма.УникальныйИдентификатор);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес_ДанныеСлотов"		, Адрес_ДанныеСлотов);
	ПараметрыФормы.Вставить("ПутьКМетаданнымОбработки"	, ПутьКМетаданнымОбработки);

	ДополнительныеПараметры = Новый Структура;
	ИмяФормыДляОткрытия = ПутьКМетаданнымОбработки + ".Форма.ФормаБлокировки";
	БоР_ОбщийМодульКлиент.ОткрытьБлокирующуюФорму(ЭтаФорма, ИмяФормыДляОткрытия, ПараметрыФормы, "ЗаблокироватьЗапись_Завершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьЗапись_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураВозВрата = Результат;
	Если СтруктураВозВрата = Неопределено Тогда
		ВозВрат;
	КонецЕсли;
	Если ТипЗнч(СтруктураВозВрата) <> Тип("Структура") Тогда
		ВозВрат;
	КонецЕсли;
	Если Не СтруктураВозВрата.Свойство("РезультатОткрытия") Тогда
		ВозВрат;
	КонецЕсли;
	Если СтруктураВозВрата.РезультатОткрытия <> Истина Тогда
		ВозВрат;
	КонецЕсли;
	Закрыть(СтруктураВозВрата);

КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ПродолжительностьПриИзменении(ДатаВремяНачала, ДатаВремяОкончания, Продолжительность, "Продолжительность", "", "");
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяОкончанияПриИзменении(Элемент)
	БоР_ОбщийМодульКлиентСервер.УРВ_ДатаВремяОкончанияПриИзменении(ДатаВремяНачала, ДатаВремяОкончания, Продолжительность, "ДатаВремяОкончания", "", "");
КонецПроцедуры
