////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗагрузитьЗадачиНаСервере()
	
	НачатьТранзакцию();

	// при загрузке новых задач для возможности поиска родителя
	// нужно чтобы он уже был загружен. гарантировать это можно путем загрузки в порядке иерархии
	Объект.ЗадачиMSProject.Сортировать("OutlineNumber");

	Для Каждого СтрокаТЧ Из Объект.ЗадачиMSProject Цикл

		Если ЗначениеЗаполнено(СтрокаТЧ.Задача) Тогда
			ЗадачаОбъект = СтрокаТЧ.Задача.ПолучитьОбъект();
		Иначе
			ЗадачаОбъект = Справочники.Задачи.СоздатьЭлемент();
			ЗадачаОбъект.Владелец = Объект.Проект;
			ЗадачаОбъект.UID = СтрокаТЧ.UID;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЗадачаОбъект, СтрокаТЧ);
		
		ЗадачаОбъект.Родитель = Справочники.Задачи.НайтиПоРеквизиту("UID", СтрокаТЧ.РодительUID, , Объект.Проект);
		
		// {Рарус evgenn 2016.11.29 
		Если Объект.ДобавлениеСДРВИмяЗадачи Тогда 
			ЗадачаОбъект.Наименование = СтрокаТЧ.WBS + " " + СтрокаТЧ.Name;
		Иначе 
			ЗадачаОбъект.Наименование = СтрокаТЧ.Name;
		КонецЕсли;
		// }Рарус evgenn 2016.11.29
		
		ЗадачаОбъект.ПроцентЗавершения = СтрокаТЧ.PercentComplete;
		ЗадачаОбъект.Комментарий = СтрокаТЧ.Notes;
		
		// {Рарус evgenn 2016.11.29 
		Если объект.ФормулировкаЗадачиИзНаименования Тогда 
			ЗадачаОбъект.Формулировка = ЗадачаОбъект.Наименование;
		КонецЕсли;
		// }Рарус evgenn 2016.11.29
		
		Попытка
			ЗадачаОбъект.Записать();
			СтрокаТЧ.Задача = ЗадачаОбъект.Ссылка;
		Исключение
			ОтменитьТранзакцию();
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;

	КонецЦикла;
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаСервере
Процедура ПодобратьЗадачиСервер()
	
	Для Каждого СтрокаТЧ Из Объект.ЗадачиMSProject Цикл
		СтрокаТЧ.Задача = Справочники.Задачи.НайтиПоРеквизиту("UID", СтрокаТЧ.UID, , Объект.Проект);
	КонецЦикла;

КонецПроцедуры

//

&НаСервереБезКонтекста
Функция ПодобратьПроектСервер(КодПроекта)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодПроекта", "%" + КодПроекта);
	Запрос.Текст = "Выбрать Ссылка Из Справочник.Проекты Где Код Подобно &КодПроекта";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

//

&НаКлиенте
Функция КонвертироватьВремя(Знач ВремяСтрокой = "PT1H0M0S")
	ВремяСтрокой = Сред(ВремяСтрокой, 3);
	ПозицияH = Найти(ВремяСтрокой, "H");	// латинская
	ПозицияM = Найти(ВремяСтрокой, "M");	// латинская
	ЧасСтрока = Лев(ВремяСтрокой, ПозицияH - 1);
	МинСтрока = Сред(ВремяСтрокой, ПозицияH + 1, ПозицияM - ПозицияH - 1);
	Возврат Число(ЧасСтрока) + Число(МинСтрока) / 60;
КонецФункции

&НаКлиенте
Функция КонвертироватьДату(Знач ДатаСтрокой = "2015-04-01T08:00:00")
	ПозицияT = Найти(ДатаСтрокой, "T");
	ДатаСтрокой = Лев(ДатаСтрокой, ПозицияT - 1);
	ДатаСтрокой = СтрЗаменить(ДатаСтрокой, "-", "");
	Возврат Дата(ДатаСтрокой);
КонецФункции

&НаКлиенте
Процедура ПрочитатьMSProjectXML()
	
	// так как загрузка может быть и из Excel нельзя поставить автопроверку на имя файла
	Файл = Новый Файл(Объект.ИмяФайла);
	Если НЕ Файл.Существует() Тогда
		Предупреждение("Файл не существует или не выбран: """ + Объект.ИмяФайла + """");
		Возврат;
	КонецЕсли;
	
	Объект.ЗадачиMSProject.Очистить();

	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.ОткрытьФайл(Объект.ИмяФайла);
	
	ТипПроектXDTO = ФабрикаXDTO.Тип("http://schemas.microsoft.com/project/2007", "Project");
	Проект = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипПроектXDTO);
	
	// подбор проекта по свойствам загружаемого файла
	Попытка
		ПодобранныйПроект = ПодобратьПроектСервер(Проект.Title);
		Если ЗначениеЗаполнено(ПодобранныйПроект) И НЕ Объект.Проект = ПодобранныйПроект Тогда
			Если ЗначениеЗаполнено(Объект.Проект) Тогда
				Если Вопрос("Заменить выбранный проект на """ + Объект.Проект + """", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
					Объект.Проект = ПодобранныйПроект;
				КонецЕсли;
			Иначе
				Объект.Проект = ПодобранныйПроект;
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	// загрузка задач
	Для Каждого ЗадачаXDTO Из Проект.Tasks.Task Цикл
		Если ЗадачаXDTO.UID = "0" Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТЧ = Объект.ЗадачиMSProject.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ЗадачаXDTO);
		
		// постобработка
		СтрокаТЧ.Трудозатраты = КонвертироватьВремя(СтрокаТЧ.Work);
		СтрокаТЧ.ДатаСоздания = КонвертироватьДату(СтрокаТЧ.CreateDate);
		СтрокаТЧ.Начало = КонвертироватьДату(СтрокаТЧ.Start);
		СтрокаТЧ.Окончание = КонвертироватьДату(СтрокаТЧ.Finish);
		СтрокаТЧ.Стоимость = СтрокаТЧ.Cost / 100;
		
		// определение родителя
		СтрокаТЧ.РодительUID = 0;
		Если СтрокаТЧ.OutlineLevel > 1 Тогда
			Позиция = СтрДлина(СтрокаТЧ.OutlineNumber);
			Пока Позиция > 0 Цикл
				Если Сред(СтрокаТЧ.OutlineNumber, Позиция, 1) = "." Тогда
					Прервать;
				КонецЕсли;
				Позиция = Позиция - 1;
			КонецЦикла;
			Если Позиция > 0 Тогда
				OutlineNumber_Родителя = Лев(СтрокаТЧ.OutlineNumber, Позиция - 1);
				МассивСтрок = Объект.ЗадачиMSProject.НайтиСтроки(Новый Структура("OutlineNumber", OutlineNumber_Родителя));
				Если МассивСтрок.Количество() Тогда
					СтрокаТЧ.РодительUID = МассивСтрок[0].UID;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПодобратьЗадачиСервер();

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Проект") Тогда
		Объект.Проект = Параметры.Проект;
	КонецЕсли;
	// {Рарус evgenn 2016.11.29
	Объект.ДобавлениеСДРВИмяЗадачи = Истина;
	// }Рарус evgenn 2016.11.29
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	ПрочитатьMSProjectXML();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗадачи(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	ЗагрузитьЗадачиНаСервере();

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Проекты MS Project (*.xml)|*.xml";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.Заголовок = "Выберите файл для загрузки";
	Если Диалог.Выбрать() Тогда
		Объект.ИмяФайла = Диалог.ПолноеИмяФайла;
		ПрочитатьФайл(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ПодобратьЗадачиСервер();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ СПИСКОВ

&НаКлиенте
Процедура ЗадачиMSProjectПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиMSProjectПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Файл") Тогда
		Объект.ИмяФайла = ПараметрыПеретаскивания.Значение.ПолноеИмя;
		ПрочитатьФайл(Неопределено);
	КонецЕсли;
КонецПроцедуры


