
&НаКлиенте
Процедура МесяцСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если Направление = 1 Тогда
		Объект.Месяц = КонецМесяца(Объект.Месяц) + 1;
	Иначе
		Объект.Месяц = НачалоМесяца(НачалоМесяца(Объект.Месяц) - 1);
	КонецЕсли;
	
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
	ВидимостьДень31();
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Месяц = НачалоМесяца(ТекущаяДата());
	//ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
	ЭтотОбъект.МесяцСтрокой = Формат(Объект.Месяц, "ДФ = ""гггг ММММ""");
	ВидимостьДень31();

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Сотрудник,
		|	КадроваяИсторияСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.КадроваяИстория.СрезПоследних КАК КадроваяИсторияСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО КадроваяИсторияСрезПоследних.Сотрудник = Пользователи.Ссылка
		|ГДЕ
		|	НЕ Пользователи.ПометкаУдаления
		|	И КадроваяИсторияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.статусысотрудника.работает)
		|	И КадроваяИсторияСрезПоследних.Подразделение В ИЕРАРХИИ(&Подразделение)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Подразделение", Объект.Отдел);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
	Объект.ТабельОтсутствияСотрудников.Загрузить(РезультатЗапроса);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	ВыполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьНаСервере()
	//находим эл. справочника "Отпуск"
	СтрокаКода = "000000026";
	Работы = Справочники.Работы;
	НайденнаяСсылка = Работы.НайтиПоКоду(СтрокаКода);
	
	КоличествоСозданныхДокументов = 0;
	
	//перебираем строки
	Попытка
		Для каждого Стр из Объект.ТабельОтсутствияСотрудников  Цикл
			НовыйДокумент = Документы.ОтсутствиеСотрудника.СоздатьДокумент();
			НовыйДокумент.Дата			=  ТекущаяДата();
			НовыйДокумент.Ответственный =  ПараметрыСеанса.ТекущийПользователь;
			НовыйДокумент.Сотрудник 	=  Стр.Сотрудник;
			НовыйДокумент.Сценарий		=  Справочники.Сценарий.Прогноз;
			ЕстьСтрокиВТЧ = Ложь;
			
			//перебираем столбцы
			Для Сч = 1 по 31 Цикл
				Столбец = "День"+СЧ;
				Если ЗначениеЗаполнено(стр[Столбец]) Тогда
					 ЕстьСтрокиВТЧ = Истина;
					 НоваяСтрока = НовыйДокумент.ОтсутствияСотрудника.Добавить();
					 НоваяСтрока.ВидОтсутствия  =  НайденнаяСсылка;
					 НоваяСтрока.ДатаНачала 	=  ОпределитьДату(Сч);
					 НоваяСтрока.Часы 			=  стр[Столбец];
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьСтрокиВТЧ Тогда
				НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
				КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
			КонецЕсли;
		КонецЦикла;
		Сообщить("Успешно создано документов: " + КоличествоСозданныхДокументов + " !");
		
	Исключение
		Сообщить("Произошла ошибка! Документы не созданы." + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Функция ОпределитьДату(День)
	Год = Формат(Год(Объект.Месяц ), "ЧГ=0");
	Месяц = Строка(Месяц(Объект.Месяц));
	
	Если СтрДлина(Месяц) = 1 Тогда
		 Месяц ="0"+Месяц;
	КонецЕсли;

	Если СтрДлина(День) = 1 Тогда
		День ="0"+день;
	КонецЕсли;
	
	НашаДата = Дата(Год, Месяц, День);
	Возврат НашаДата; 
КонецФункции

&НаСервере
Процедура ВидимостьДень31()
	
	КоличествоДнейВМесяце = Сред(КонецМесяца(Объект.Месяц), 1, 2);
	Если Число(количествоДнейВМесяце) = 30 Тогда
		ЭтаФорма.Элементы.ТабельОтсутствияСотрудниковДень31.Видимость = Ложь;
	Иначе
		ЭтаФорма.Элементы.ТабельОтсутствияСотрудниковДень31.Видимость = Истина;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойПриИзменении(Элемент)
		ВидимостьДень31();
КонецПроцедуры
